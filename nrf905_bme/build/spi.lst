ARM GAS  /tmp/ccVJGysH.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_SPI1_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_SPI1_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_SPI1_Init:
  24              	.LFB34:
  25              		.file 1 "Core/Src/spi.c"
   1:Core/Src/spi.c **** /**
   2:Core/Src/spi.c ****   ******************************************************************************
   3:Core/Src/spi.c ****   * File Name          : SPI.c
   4:Core/Src/spi.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/spi.c ****   *                      of the SPI instances.
   6:Core/Src/spi.c ****   ******************************************************************************
   7:Core/Src/spi.c ****   * @attention
   8:Core/Src/spi.c ****   *
   9:Core/Src/spi.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/spi.c ****   * All rights reserved.</center></h2>
  11:Core/Src/spi.c ****   *
  12:Core/Src/spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/spi.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/spi.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/spi.c ****   *
  17:Core/Src/spi.c ****   ******************************************************************************
  18:Core/Src/spi.c ****   */
  19:Core/Src/spi.c **** 
  20:Core/Src/spi.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/spi.c **** #include "spi.h"
  22:Core/Src/spi.c **** 
  23:Core/Src/spi.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/spi.c **** 
  25:Core/Src/spi.c **** /* USER CODE END 0 */
  26:Core/Src/spi.c **** 
  27:Core/Src/spi.c **** SPI_HandleTypeDef hspi1;
  28:Core/Src/spi.c **** 
  29:Core/Src/spi.c **** /* SPI1 init function */
  30:Core/Src/spi.c **** void MX_SPI1_Init(void)
  31:Core/Src/spi.c **** {
  26              		.loc 1 31 0
  27              		.cfi_startproc
ARM GAS  /tmp/ccVJGysH.s 			page 2


  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  32:Core/Src/spi.c **** 
  33:Core/Src/spi.c ****   hspi1.Instance = SPI1;
  35              		.loc 1 33 0
  36 0002 0E48     		ldr	r0, .L4
  37 0004 0E4B     		ldr	r3, .L4+4
  38 0006 0360     		str	r3, [r0]
  34:Core/Src/spi.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
  39              		.loc 1 34 0
  40 0008 8223     		movs	r3, #130
  41 000a 5B00     		lsls	r3, r3, #1
  42 000c 4360     		str	r3, [r0, #4]
  35:Core/Src/spi.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  43              		.loc 1 35 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  36:Core/Src/spi.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  46              		.loc 1 36 0
  47 0012 C360     		str	r3, [r0, #12]
  37:Core/Src/spi.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  48              		.loc 1 37 0
  49 0014 0361     		str	r3, [r0, #16]
  38:Core/Src/spi.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  50              		.loc 1 38 0
  51 0016 4361     		str	r3, [r0, #20]
  39:Core/Src/spi.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
  52              		.loc 1 39 0
  53 0018 8022     		movs	r2, #128
  54 001a 9200     		lsls	r2, r2, #2
  55 001c 8261     		str	r2, [r0, #24]
  40:Core/Src/spi.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  56              		.loc 1 40 0
  57 001e C361     		str	r3, [r0, #28]
  41:Core/Src/spi.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  58              		.loc 1 41 0
  59 0020 0362     		str	r3, [r0, #32]
  42:Core/Src/spi.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  60              		.loc 1 42 0
  61 0022 4362     		str	r3, [r0, #36]
  43:Core/Src/spi.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  62              		.loc 1 43 0
  63 0024 8362     		str	r3, [r0, #40]
  44:Core/Src/spi.c ****   hspi1.Init.CRCPolynomial = 7;
  64              		.loc 1 44 0
  65 0026 0733     		adds	r3, r3, #7
  66 0028 C362     		str	r3, [r0, #44]
  45:Core/Src/spi.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
  67              		.loc 1 45 0
  68 002a FFF7FEFF 		bl	HAL_SPI_Init
  69              	.LVL0:
  70 002e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccVJGysH.s 			page 3


  71 0030 00D1     		bne	.L3
  72              	.L1:
  46:Core/Src/spi.c ****   {
  47:Core/Src/spi.c ****     Error_Handler();
  48:Core/Src/spi.c ****   }
  49:Core/Src/spi.c **** 
  50:Core/Src/spi.c **** }
  73              		.loc 1 50 0
  74              		@ sp needed
  75 0032 10BD     		pop	{r4, pc}
  76              	.L3:
  47:Core/Src/spi.c ****   }
  77              		.loc 1 47 0
  78 0034 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 50 0
  81 0038 FBE7     		b	.L1
  82              	.L5:
  83 003a C046     		.align	2
  84              	.L4:
  85 003c 00000000 		.word	hspi1
  86 0040 00300140 		.word	1073819648
  87              		.cfi_endproc
  88              	.LFE34:
  90              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_SPI_MspInit
  93              		.syntax unified
  94              		.code	16
  95              		.thumb_func
  96              		.fpu softvfp
  98              	HAL_SPI_MspInit:
  99              	.LFB35:
  51:Core/Src/spi.c **** 
  52:Core/Src/spi.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
  53:Core/Src/spi.c **** {
 100              		.loc 1 53 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 24
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              	.LVL2:
 105 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 20
 108              		.cfi_offset 4, -20
 109              		.cfi_offset 5, -16
 110              		.cfi_offset 6, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 87B0     		sub	sp, sp, #28
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 48
 116 0004 0400     		movs	r4, r0
  54:Core/Src/spi.c **** 
  55:Core/Src/spi.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 117              		.loc 1 55 0
 118 0006 1422     		movs	r2, #20
ARM GAS  /tmp/ccVJGysH.s 			page 4


 119 0008 0021     		movs	r1, #0
 120 000a 01A8     		add	r0, sp, #4
 121              	.LVL3:
 122 000c FFF7FEFF 		bl	memset
 123              	.LVL4:
  56:Core/Src/spi.c ****   if(spiHandle->Instance==SPI1)
 124              		.loc 1 56 0
 125 0010 2268     		ldr	r2, [r4]
 126 0012 1B4B     		ldr	r3, .L9
 127 0014 9A42     		cmp	r2, r3
 128 0016 01D0     		beq	.L8
 129              	.LVL5:
 130              	.L6:
  57:Core/Src/spi.c ****   {
  58:Core/Src/spi.c ****   /* USER CODE BEGIN SPI1_MspInit 0 */
  59:Core/Src/spi.c **** 
  60:Core/Src/spi.c ****   /* USER CODE END SPI1_MspInit 0 */
  61:Core/Src/spi.c ****     /* SPI1 clock enable */
  62:Core/Src/spi.c ****     __HAL_RCC_SPI1_CLK_ENABLE();
  63:Core/Src/spi.c ****   
  64:Core/Src/spi.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  65:Core/Src/spi.c ****     /**SPI1 GPIO Configuration    
  66:Core/Src/spi.c ****     PA5     ------> SPI1_SCK
  67:Core/Src/spi.c ****     PA6     ------> SPI1_MISO
  68:Core/Src/spi.c ****     PA7     ------> SPI1_MOSI 
  69:Core/Src/spi.c ****     */
  70:Core/Src/spi.c **** 
  71:Core/Src/spi.c ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
  72:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  73:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  74:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  75:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
  76:Core/Src/spi.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  77:Core/Src/spi.c **** 
  78:Core/Src/spi.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
  79:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  80:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  81:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  82:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
  83:Core/Src/spi.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84:Core/Src/spi.c **** 
  85:Core/Src/spi.c ****     GPIO_InitStruct.Pin = GPIO_PIN_7;
  86:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  87:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  88:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  89:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
  90:Core/Src/spi.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  91:Core/Src/spi.c **** 
  92:Core/Src/spi.c **** 
  93:Core/Src/spi.c ****   /* USER CODE BEGIN SPI1_MspInit 1 */
  94:Core/Src/spi.c **** 
  95:Core/Src/spi.c ****   /* USER CODE END SPI1_MspInit 1 */
  96:Core/Src/spi.c ****   }
  97:Core/Src/spi.c **** }
 131              		.loc 1 97 0
 132 0018 07B0     		add	sp, sp, #28
 133              		@ sp needed
ARM GAS  /tmp/ccVJGysH.s 			page 5


 134 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 135              	.LVL6:
 136              	.L8:
  62:Core/Src/spi.c ****   
 137              		.loc 1 62 0
 138 001c 194B     		ldr	r3, .L9+4
 139 001e 596B     		ldr	r1, [r3, #52]
 140 0020 8022     		movs	r2, #128
 141 0022 5201     		lsls	r2, r2, #5
 142 0024 0A43     		orrs	r2, r1
 143 0026 5A63     		str	r2, [r3, #52]
 144              	.LBB2:
  64:Core/Src/spi.c ****     /**SPI1 GPIO Configuration    
 145              		.loc 1 64 0
 146 0028 DA6A     		ldr	r2, [r3, #44]
 147 002a 0127     		movs	r7, #1
 148 002c 3A43     		orrs	r2, r7
 149 002e DA62     		str	r2, [r3, #44]
 150 0030 DB6A     		ldr	r3, [r3, #44]
 151 0032 3B40     		ands	r3, r7
 152 0034 0093     		str	r3, [sp]
 153 0036 009B     		ldr	r3, [sp]
 154              	.LBE2:
  71:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 155              		.loc 1 71 0
 156 0038 2023     		movs	r3, #32
 157 003a 0193     		str	r3, [sp, #4]
  72:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 158              		.loc 1 72 0
 159 003c 0224     		movs	r4, #2
 160              	.LVL7:
 161 003e 0294     		str	r4, [sp, #8]
  73:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 162              		.loc 1 73 0
 163 0040 0394     		str	r4, [sp, #12]
  74:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 164              		.loc 1 74 0
 165 0042 0326     		movs	r6, #3
 166 0044 0496     		str	r6, [sp, #16]
  76:Core/Src/spi.c **** 
 167              		.loc 1 76 0
 168 0046 01A9     		add	r1, sp, #4
 169 0048 A020     		movs	r0, #160
 170 004a C005     		lsls	r0, r0, #23
 171 004c FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL8:
  78:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 173              		.loc 1 78 0
 174 0050 4023     		movs	r3, #64
 175 0052 0193     		str	r3, [sp, #4]
  79:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 176              		.loc 1 79 0
 177 0054 0294     		str	r4, [sp, #8]
  80:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 178              		.loc 1 80 0
 179 0056 0394     		str	r4, [sp, #12]
  81:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
ARM GAS  /tmp/ccVJGysH.s 			page 6


 180              		.loc 1 81 0
 181 0058 0496     		str	r6, [sp, #16]
  82:Core/Src/spi.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 182              		.loc 1 82 0
 183 005a 0025     		movs	r5, #0
 184 005c 0595     		str	r5, [sp, #20]
  83:Core/Src/spi.c **** 
 185              		.loc 1 83 0
 186 005e 01A9     		add	r1, sp, #4
 187 0060 A020     		movs	r0, #160
 188 0062 C005     		lsls	r0, r0, #23
 189 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 190              	.LVL9:
  85:Core/Src/spi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 191              		.loc 1 85 0
 192 0068 8023     		movs	r3, #128
 193 006a 0193     		str	r3, [sp, #4]
  86:Core/Src/spi.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 194              		.loc 1 86 0
 195 006c 0294     		str	r4, [sp, #8]
  87:Core/Src/spi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 196              		.loc 1 87 0
 197 006e 0397     		str	r7, [sp, #12]
  88:Core/Src/spi.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 198              		.loc 1 88 0
 199 0070 0496     		str	r6, [sp, #16]
  89:Core/Src/spi.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 200              		.loc 1 89 0
 201 0072 0595     		str	r5, [sp, #20]
  90:Core/Src/spi.c **** 
 202              		.loc 1 90 0
 203 0074 01A9     		add	r1, sp, #4
 204 0076 A020     		movs	r0, #160
 205 0078 C005     		lsls	r0, r0, #23
 206 007a FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL10:
 208              		.loc 1 97 0
 209 007e CBE7     		b	.L6
 210              	.L10:
 211              		.align	2
 212              	.L9:
 213 0080 00300140 		.word	1073819648
 214 0084 00100240 		.word	1073876992
 215              		.cfi_endproc
 216              	.LFE35:
 218              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 219              		.align	1
 220              		.global	HAL_SPI_MspDeInit
 221              		.syntax unified
 222              		.code	16
 223              		.thumb_func
 224              		.fpu softvfp
 226              	HAL_SPI_MspDeInit:
 227              	.LFB36:
  98:Core/Src/spi.c **** 
  99:Core/Src/spi.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 100:Core/Src/spi.c **** {
ARM GAS  /tmp/ccVJGysH.s 			page 7


 228              		.loc 1 100 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL11:
 233 0000 10B5     		push	{r4, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 101:Core/Src/spi.c **** 
 102:Core/Src/spi.c ****   if(spiHandle->Instance==SPI1)
 238              		.loc 1 102 0
 239 0002 0268     		ldr	r2, [r0]
 240 0004 074B     		ldr	r3, .L14
 241 0006 9A42     		cmp	r2, r3
 242 0008 00D0     		beq	.L13
 243              	.LVL12:
 244              	.L11:
 103:Core/Src/spi.c ****   {
 104:Core/Src/spi.c ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 105:Core/Src/spi.c **** 
 106:Core/Src/spi.c ****   /* USER CODE END SPI1_MspDeInit 0 */
 107:Core/Src/spi.c ****     /* Peripheral clock disable */
 108:Core/Src/spi.c ****     __HAL_RCC_SPI1_CLK_DISABLE();
 109:Core/Src/spi.c ****   
 110:Core/Src/spi.c ****     /**SPI1 GPIO Configuration    
 111:Core/Src/spi.c ****     PA5     ------> SPI1_SCK
 112:Core/Src/spi.c ****     PA6     ------> SPI1_MISO
 113:Core/Src/spi.c ****     PA7     ------> SPI1_MOSI 
 114:Core/Src/spi.c ****     */
 115:Core/Src/spi.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 116:Core/Src/spi.c **** 
 117:Core/Src/spi.c ****   /* USER CODE BEGIN SPI1_MspDeInit 1 */
 118:Core/Src/spi.c **** 
 119:Core/Src/spi.c ****   /* USER CODE END SPI1_MspDeInit 1 */
 120:Core/Src/spi.c ****   }
 121:Core/Src/spi.c **** } 
 245              		.loc 1 121 0
 246              		@ sp needed
 247 000a 10BD     		pop	{r4, pc}
 248              	.LVL13:
 249              	.L13:
 108:Core/Src/spi.c ****   
 250              		.loc 1 108 0
 251 000c 064A     		ldr	r2, .L14+4
 252 000e 536B     		ldr	r3, [r2, #52]
 253 0010 0649     		ldr	r1, .L14+8
 254 0012 0B40     		ands	r3, r1
 255 0014 5363     		str	r3, [r2, #52]
 115:Core/Src/spi.c **** 
 256              		.loc 1 115 0
 257 0016 A020     		movs	r0, #160
 258              	.LVL14:
 259 0018 E021     		movs	r1, #224
 260 001a C005     		lsls	r0, r0, #23
 261 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccVJGysH.s 			page 8


 262              	.LVL15:
 263              		.loc 1 121 0
 264 0020 F3E7     		b	.L11
 265              	.L15:
 266 0022 C046     		.align	2
 267              	.L14:
 268 0024 00300140 		.word	1073819648
 269 0028 00100240 		.word	1073876992
 270 002c FFEFFFFF 		.word	-4097
 271              		.cfi_endproc
 272              	.LFE36:
 274              		.comm	hspi1,88,4
 275              		.text
 276              	.Letext0:
 277              		.file 2 "/home/maxx/develop/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defa
 278              		.file 3 "/home/maxx/develop/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h
 279              		.file 4 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/CMSIS/Device/ST/STM32L0xx
 280              		.file 5 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/CMSIS/Device/ST/STM32L0xx
 281              		.file 6 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 282              		.file 7 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 283              		.file 8 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 284              		.file 9 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 285              		.file 10 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc
 286              		.file 11 "Core/Inc/spi.h"
 287              		.file 12 "Core/Inc/main.h"
 288              		.file 13 "<built-in>"
ARM GAS  /tmp/ccVJGysH.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/ccVJGysH.s:16     .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccVJGysH.s:23     .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccVJGysH.s:85     .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccVJGysH.s:91     .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccVJGysH.s:98     .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccVJGysH.s:213    .text.HAL_SPI_MspInit:0000000000000080 $d
     /tmp/ccVJGysH.s:219    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccVJGysH.s:226    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccVJGysH.s:268    .text.HAL_SPI_MspDeInit:0000000000000024 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
Error_Handler
memset
HAL_GPIO_Init
HAL_GPIO_DeInit
