ARM GAS  /tmp/ccR5qPOv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_USART2_UART_Init:
  26              	.LFB130:
  27              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart2;
  28:Src/usart.c   **** 
  29:Src/usart.c   **** /* USART2 init function */
  30:Src/usart.c   **** 
  31:Src/usart.c   **** void MX_USART2_UART_Init(void)
ARM GAS  /tmp/ccR5qPOv.s 			page 2


  32:Src/usart.c   **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Src/usart.c   **** 
  34:Src/usart.c   ****   huart2.Instance = USART2;
  37              		.loc 1 34 0
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  35:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  41              		.loc 1 35 0
  42 0008 4FF4E133 		mov	r3, #115200
  43 000c 4360     		str	r3, [r0, #4]
  36:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 36 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  37:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 37 0
  48 0012 C360     		str	r3, [r0, #12]
  38:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 38 0
  50 0014 0361     		str	r3, [r0, #16]
  39:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 39 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  40:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54              		.loc 1 40 0
  55 001a 8361     		str	r3, [r0, #24]
  41:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 41 0
  57 001c C361     		str	r3, [r0, #28]
  42:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  58              		.loc 1 42 0
  59 001e FFF7FEFF 		bl	HAL_UART_Init
  60              	.LVL0:
  61 0022 00B9     		cbnz	r0, .L4
  62              	.L1:
  43:Src/usart.c   ****   {
  44:Src/usart.c   ****     Error_Handler();
  45:Src/usart.c   ****   }
  46:Src/usart.c   **** 
  47:Src/usart.c   **** }
  63              		.loc 1 47 0
  64 0024 08BD     		pop	{r3, pc}
  65              	.L4:
  44:Src/usart.c   ****   }
  66              		.loc 1 44 0
  67 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccR5qPOv.s 			page 3


  68              	.LVL1:
  69              		.loc 1 47 0
  70 002a FBE7     		b	.L1
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 002c 00000000 		.word	huart2
  75 0030 00440040 		.word	1073759232
  76              		.cfi_endproc
  77              	.LFE130:
  79              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_UART_MspInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	HAL_UART_MspInit:
  88              	.LFB131:
  48:Src/usart.c   **** 
  49:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  50:Src/usart.c   **** {
  89              		.loc 1 50 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 32
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL2:
  94 0000 00B5     		push	{lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 14, -4
  98 0002 89B0     		sub	sp, sp, #36
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 40
  51:Src/usart.c   **** 
  52:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 101              		.loc 1 52 0
 102 0004 0023     		movs	r3, #0
 103 0006 0393     		str	r3, [sp, #12]
 104 0008 0493     		str	r3, [sp, #16]
 105 000a 0593     		str	r3, [sp, #20]
 106 000c 0693     		str	r3, [sp, #24]
 107 000e 0793     		str	r3, [sp, #28]
  53:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 108              		.loc 1 53 0
 109 0010 0268     		ldr	r2, [r0]
 110 0012 144B     		ldr	r3, .L11
 111 0014 9A42     		cmp	r2, r3
 112 0016 02D0     		beq	.L10
 113              	.LVL3:
 114              	.L7:
  54:Src/usart.c   ****   {
  55:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  58:Src/usart.c   ****     /* USART2 clock enable */
  59:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
ARM GAS  /tmp/ccR5qPOv.s 			page 4


  60:Src/usart.c   ****   
  61:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  62:Src/usart.c   ****     /**USART2 GPIO Configuration    
  63:Src/usart.c   ****     PA2     ------> USART2_TX
  64:Src/usart.c   ****     PA3     ------> USART2_RX 
  65:Src/usart.c   ****     */
  66:Src/usart.c   ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
  67:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  68:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  69:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  70:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  71:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  72:Src/usart.c   **** 
  73:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  74:Src/usart.c   **** 
  75:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  76:Src/usart.c   ****   }
  77:Src/usart.c   **** }
 115              		.loc 1 77 0
 116 0018 09B0     		add	sp, sp, #36
 117              	.LCFI3:
 118              		.cfi_remember_state
 119              		.cfi_def_cfa_offset 4
 120              		@ sp needed
 121 001a 5DF804FB 		ldr	pc, [sp], #4
 122              	.LVL4:
 123              	.L10:
 124              	.LCFI4:
 125              		.cfi_restore_state
 126              	.LBB2:
  59:Src/usart.c   ****   
 127              		.loc 1 59 0
 128 001e 0021     		movs	r1, #0
 129 0020 0191     		str	r1, [sp, #4]
 130 0022 03F5FA33 		add	r3, r3, #128000
 131 0026 1A6C     		ldr	r2, [r3, #64]
 132 0028 42F40032 		orr	r2, r2, #131072
 133 002c 1A64     		str	r2, [r3, #64]
 134 002e 1A6C     		ldr	r2, [r3, #64]
 135 0030 02F40032 		and	r2, r2, #131072
 136 0034 0192     		str	r2, [sp, #4]
 137 0036 019A     		ldr	r2, [sp, #4]
 138              	.LBE2:
 139              	.LBB3:
  61:Src/usart.c   ****     /**USART2 GPIO Configuration    
 140              		.loc 1 61 0
 141 0038 0291     		str	r1, [sp, #8]
 142 003a 1A6B     		ldr	r2, [r3, #48]
 143 003c 42F00102 		orr	r2, r2, #1
 144 0040 1A63     		str	r2, [r3, #48]
 145 0042 1B6B     		ldr	r3, [r3, #48]
 146 0044 03F00103 		and	r3, r3, #1
 147 0048 0293     		str	r3, [sp, #8]
 148 004a 029B     		ldr	r3, [sp, #8]
 149              	.LBE3:
  66:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 150              		.loc 1 66 0
ARM GAS  /tmp/ccR5qPOv.s 			page 5


 151 004c 0C23     		movs	r3, #12
 152 004e 0393     		str	r3, [sp, #12]
  67:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 153              		.loc 1 67 0
 154 0050 0223     		movs	r3, #2
 155 0052 0493     		str	r3, [sp, #16]
  70:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 156              		.loc 1 70 0
 157 0054 0723     		movs	r3, #7
 158 0056 0793     		str	r3, [sp, #28]
  71:Src/usart.c   **** 
 159              		.loc 1 71 0
 160 0058 03A9     		add	r1, sp, #12
 161 005a 0348     		ldr	r0, .L11+4
 162              	.LVL5:
 163 005c FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL6:
 165              		.loc 1 77 0
 166 0060 DAE7     		b	.L7
 167              	.L12:
 168 0062 00BF     		.align	2
 169              	.L11:
 170 0064 00440040 		.word	1073759232
 171 0068 00000240 		.word	1073872896
 172              		.cfi_endproc
 173              	.LFE131:
 175              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 176              		.align	1
 177              		.global	HAL_UART_MspDeInit
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	HAL_UART_MspDeInit:
 184              	.LFB132:
  78:Src/usart.c   **** 
  79:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  80:Src/usart.c   **** {
 185              		.loc 1 80 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL7:
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI5:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
  81:Src/usart.c   **** 
  82:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 195              		.loc 1 82 0
 196 0002 0268     		ldr	r2, [r0]
 197 0004 064B     		ldr	r3, .L17
 198 0006 9A42     		cmp	r2, r3
 199 0008 00D0     		beq	.L16
 200              	.LVL8:
 201              	.L13:
ARM GAS  /tmp/ccR5qPOv.s 			page 6


  83:Src/usart.c   ****   {
  84:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  85:Src/usart.c   **** 
  86:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
  87:Src/usart.c   ****     /* Peripheral clock disable */
  88:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
  89:Src/usart.c   ****   
  90:Src/usart.c   ****     /**USART2 GPIO Configuration    
  91:Src/usart.c   ****     PA2     ------> USART2_TX
  92:Src/usart.c   ****     PA3     ------> USART2_RX 
  93:Src/usart.c   ****     */
  94:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
  99:Src/usart.c   ****   }
 100:Src/usart.c   **** } 
 202              		.loc 1 100 0
 203 000a 08BD     		pop	{r3, pc}
 204              	.LVL9:
 205              	.L16:
  88:Src/usart.c   ****   
 206              		.loc 1 88 0
 207 000c 054A     		ldr	r2, .L17+4
 208 000e 136C     		ldr	r3, [r2, #64]
 209 0010 23F40033 		bic	r3, r3, #131072
 210 0014 1364     		str	r3, [r2, #64]
  94:Src/usart.c   **** 
 211              		.loc 1 94 0
 212 0016 0C21     		movs	r1, #12
 213 0018 0348     		ldr	r0, .L17+8
 214              	.LVL10:
 215 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 216              	.LVL11:
 217              		.loc 1 100 0
 218 001e F4E7     		b	.L13
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0020 00440040 		.word	1073759232
 223 0024 00380240 		.word	1073887232
 224 0028 00000240 		.word	1073872896
 225              		.cfi_endproc
 226              	.LFE132:
 228              		.comm	huart2,64,4
 229              		.text
 230              	.Letext0:
 231              		.file 2 "/home/maxx/develop/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defa
 232              		.file 3 "/home/maxx/develop/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h
 233              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 234              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 235              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 236              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 237              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 238              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 239              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccR5qPOv.s 			page 7


 240              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 241              		.file 12 "Inc/usart.h"
 242              		.file 13 "Inc/main.h"
ARM GAS  /tmp/ccR5qPOv.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccR5qPOv.s:18     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccR5qPOv.s:25     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccR5qPOv.s:74     .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart2
     /tmp/ccR5qPOv.s:80     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccR5qPOv.s:87     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccR5qPOv.s:170    .text.HAL_UART_MspInit:0000000000000064 $d
     /tmp/ccR5qPOv.s:176    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccR5qPOv.s:183    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccR5qPOv.s:222    .text.HAL_UART_MspDeInit:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
