ARM GAS  /tmp/cccFncD6.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC_Init,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	MX_ADC_Init
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	MX_ADC_Init:
  26              	.LFB1053:
  27              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * @file    adc.c
   4:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/adc.c ****   *          of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** /* ADC init function */
  28:Core/Src/adc.c **** void MX_ADC_Init(void)
  29:Core/Src/adc.c **** {
  28              		.loc 1 29 1 view -0
  29              		.cfi_startproc
ARM GAS  /tmp/cccFncD6.s 			page 2


  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/adc.c ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
  32              		.loc 1 30 3 view .LVU1
  29:Core/Src/adc.c ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
  33              		.loc 1 29 1 is_stmt 0 view .LVU2
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 93B0     		sub	sp, sp, #76
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 96
  45              		.loc 1 30 26 view .LVU3
  46 0004 1422     		movs	r2, #20
  47 0006 0021     		movs	r1, #0
  48 0008 07A8     		add	r0, sp, #28
  49 000a FFF7FEFF 		bl	memset
  50              	.LVL0:
  31:Core/Src/adc.c ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
  51              		.loc 1 31 3 is_stmt 1 view .LVU4
  52              		.loc 1 31 22 is_stmt 0 view .LVU5
  53 000e 1022     		movs	r2, #16
  54 0010 0021     		movs	r1, #0
  55 0012 03A8     		add	r0, sp, #12
  56 0014 FFF7FEFF 		bl	memset
  57              	.LVL1:
  32:Core/Src/adc.c **** 
  33:Core/Src/adc.c ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  58              		.loc 1 33 3 is_stmt 1 view .LVU6
  59              		.loc 1 33 23 is_stmt 0 view .LVU7
  60 0018 1022     		movs	r2, #16
  61 001a 0021     		movs	r1, #0
  62 001c 0EA8     		add	r0, sp, #56
  63 001e FFF7FEFF 		bl	memset
  64              	.LVL2:
  34:Core/Src/adc.c **** 
  35:Core/Src/adc.c ****   /* Peripheral clock enable */
  36:Core/Src/adc.c ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
  65              		.loc 1 36 3 is_stmt 1 view .LVU8
  66              	.LBB42:
  67              	.LBI42:
  68              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
ARM GAS  /tmp/cccFncD6.s 			page 3


  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
ARM GAS  /tmp/cccFncD6.s 			page 4


  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
ARM GAS  /tmp/cccFncD6.s 			page 5


 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
ARM GAS  /tmp/cccFncD6.s 			page 6


 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  /tmp/cccFncD6.s 			page 7


 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
ARM GAS  /tmp/cccFncD6.s 			page 8


 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
ARM GAS  /tmp/cccFncD6.s 			page 9


 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
ARM GAS  /tmp/cccFncD6.s 			page 10


 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  /tmp/cccFncD6.s 			page 11


 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
ARM GAS  /tmp/cccFncD6.s 			page 12


 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
ARM GAS  /tmp/cccFncD6.s 			page 13


 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
ARM GAS  /tmp/cccFncD6.s 			page 14


 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
ARM GAS  /tmp/cccFncD6.s 			page 15


 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
ARM GAS  /tmp/cccFncD6.s 			page 16


 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
  69              		.loc 2 786 22 view .LVU9
  70              	.LBB43:
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  71              		.loc 2 788 3 view .LVU10
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  72              		.loc 2 789 3 view .LVU11
  73 0022 8020     		movs	r0, #128
  74              	.LBE43:
  75              	.LBE42:
  76              	.LBB47:
  77              	.LBB48:
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
ARM GAS  /tmp/cccFncD6.s 			page 17


 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
ARM GAS  /tmp/cccFncD6.s 			page 18


 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
ARM GAS  /tmp/cccFncD6.s 			page 19


 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
ARM GAS  /tmp/cccFncD6.s 			page 20


 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
  78              		.loc 2 990 3 is_stmt 0 view .LVU12
  79 0024 0127     		movs	r7, #1
  80              	.LBE48:
  81              	.LBE47:
  82              	.LBB52:
  83              	.LBB44:
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  84              		.loc 2 789 3 view .LVU13
  85 0026 434B     		ldr	r3, .L3
  86 0028 8000     		lsls	r0, r0, #2
  87 002a 596B     		ldr	r1, [r3, #52]
  88              	.LBE44:
  89              	.LBE52:
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
  39:Core/Src/adc.c ****   /**ADC GPIO Configuration
  40:Core/Src/adc.c ****   PA0   ------> ADC_IN0
  41:Core/Src/adc.c ****   */
  42:Core/Src/adc.c ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
  43:Core/Src/adc.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
  44:Core/Src/adc.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
  90              		.loc 1 44 24 view .LVU14
  91 002c 0025     		movs	r5, #0
  92              	.LBB53:
  93              	.LBB45:
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  94              		.loc 2 789 3 view .LVU15
  95 002e 0143     		orrs	r1, r0
  96 0030 5963     		str	r1, [r3, #52]
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
  97              		.loc 2 791 3 is_stmt 1 view .LVU16
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
  98              		.loc 2 791 12 is_stmt 0 view .LVU17
  99 0032 5A6B     		ldr	r2, [r3, #52]
 100              	.LBE45:
 101              	.LBE53:
  45:Core/Src/adc.c ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/cccFncD6.s 			page 21


 102              		.loc 1 45 3 view .LVU18
 103 0034 0CA9     		add	r1, sp, #48
 104              	.LBB54:
 105              	.LBB46:
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 106              		.loc 2 791 12 view .LVU19
 107 0036 0240     		ands	r2, r0
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 108              		.loc 2 791 10 view .LVU20
 109 0038 0292     		str	r2, [sp, #8]
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 110              		.loc 2 792 3 is_stmt 1 view .LVU21
 111 003a 029A     		ldr	r2, [sp, #8]
 112              	.LVL3:
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 113              		.loc 2 792 3 is_stmt 0 view .LVU22
 114              	.LBE46:
 115              	.LBE54:
  38:Core/Src/adc.c ****   /**ADC GPIO Configuration
 116              		.loc 1 38 3 is_stmt 1 view .LVU23
 117              	.LBB55:
 118              	.LBI47:
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 119              		.loc 2 987 22 view .LVU24
 120              	.LBB49:
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 121              		.loc 2 989 3 view .LVU25
 122              		.loc 2 990 3 view .LVU26
 123 003c DA6A     		ldr	r2, [r3, #44]
 124              	.LBE49:
 125              	.LBE55:
 126              		.loc 1 45 3 is_stmt 0 view .LVU27
 127 003e 6138     		subs	r0, r0, #97
 128              	.LBB56:
 129              	.LBB50:
 130              		.loc 2 990 3 view .LVU28
 131 0040 3A43     		orrs	r2, r7
 132 0042 DA62     		str	r2, [r3, #44]
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 133              		.loc 2 992 3 is_stmt 1 view .LVU29
 134              		.loc 2 992 12 is_stmt 0 view .LVU30
 135 0044 DB6A     		ldr	r3, [r3, #44]
 136              	.LBE50:
 137              	.LBE56:
 138              		.loc 1 45 3 view .LVU31
 139 0046 FF38     		subs	r0, r0, #255
 140              	.LBB57:
 141              	.LBB51:
 142              		.loc 2 992 12 view .LVU32
 143 0048 3B40     		ands	r3, r7
 144              		.loc 2 992 10 view .LVU33
 145 004a 0193     		str	r3, [sp, #4]
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 146              		.loc 2 993 3 is_stmt 1 view .LVU34
 147 004c 019B     		ldr	r3, [sp, #4]
 148              	.LVL4:
ARM GAS  /tmp/cccFncD6.s 			page 22


 149              		.loc 2 993 3 is_stmt 0 view .LVU35
 150              	.LBE51:
 151              	.LBE57:
  42:Core/Src/adc.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 152              		.loc 1 42 3 is_stmt 1 view .LVU36
  43:Core/Src/adc.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 153              		.loc 1 43 24 is_stmt 0 view .LVU37
 154 004e 0323     		movs	r3, #3
 155              		.loc 1 45 3 view .LVU38
 156 0050 C005     		lsls	r0, r0, #23
  43:Core/Src/adc.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 157              		.loc 1 43 24 view .LVU39
 158 0052 0D93     		str	r3, [sp, #52]
  42:Core/Src/adc.c ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 159              		.loc 1 42 23 view .LVU40
 160 0054 0C97     		str	r7, [sp, #48]
  43:Core/Src/adc.c ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 161              		.loc 1 43 3 is_stmt 1 view .LVU41
  44:Core/Src/adc.c ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 162              		.loc 1 44 3 view .LVU42
  44:Core/Src/adc.c ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 163              		.loc 1 44 24 is_stmt 0 view .LVU43
 164 0056 1095     		str	r5, [sp, #64]
 165              		.loc 1 45 3 is_stmt 1 view .LVU44
 166 0058 FFF7FEFF 		bl	LL_GPIO_Init
 167              	.LVL5:
  46:Core/Src/adc.c **** 
  47:Core/Src/adc.c ****   /* ADC DMA Init */
  48:Core/Src/adc.c **** 
  49:Core/Src/adc.c ****   /* ADC Init */
  50:Core/Src/adc.c ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_1, LL_DMA_REQUEST_0);
 168              		.loc 1 50 3 view .LVU45
 169              	.LBB58:
 170              	.LBI58:
 171              		.file 3 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @file    stm32l0xx_ll_dma.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #ifndef STM32L0xx_LL_DMA_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define STM32L0xx_LL_DMA_H
ARM GAS  /tmp/cccFncD6.s 			page 23


  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #ifdef __cplusplus
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** extern "C" {
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #include "stm32l0xx.h"
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @addtogroup STM32L0xx_LL_Driver
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1)
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*DMA1_Channel6*/
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*DMA1_Channel7*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** };
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Define used to get CSELR register offset */
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            ((Channel-1U)*4U)
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /tmp/cccFncD6.s 			page 24


  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** typedef struct
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         is incremented or not.
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         is incremented or not.
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
ARM GAS  /tmp/cccFncD6.s 			page 25


 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
ARM GAS  /tmp/cccFncD6.s 			page 26


 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
ARM GAS  /tmp/cccFncD6.s 			page 27


 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 28


 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U             /*!< DMA peripheral request 0  */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U             /*!< DMA peripheral request 1  */
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U             /*!< DMA peripheral request 2  */
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U             /*!< DMA peripheral request 3  */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U             /*!< DMA peripheral request 4  */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U             /*!< DMA peripheral request 5  */
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U             /*!< DMA peripheral request 6  */
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U             /*!< DMA peripheral request 7  */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_8                  0x00000008U             /*!< DMA peripheral request 8  */
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_9                  0x00000009U             /*!< DMA peripheral request 9  */
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_10                 0x0000000AU             /*!< DMA peripheral request 10 */
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_11                 0x0000000BU             /*!< DMA peripheral request 11 */
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_12                 0x0000000CU             /*!< DMA peripheral request 12 */
ARM GAS  /tmp/cccFncD6.s 			page 29


 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_13                 0x0000000DU             /*!< DMA peripheral request 13 */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_14                 0x0000000EU             /*!< DMA peripheral request 14 */
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_15                 0x0000000FU             /*!< DMA peripheral request 15 */
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Register value
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval DMAx
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
ARM GAS  /tmp/cccFncD6.s 			page 30


 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_6)
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #else
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval DMAx_Channely
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel7)
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel6)
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #else
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel5)
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
ARM GAS  /tmp/cccFncD6.s 			page 31


 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  * @{
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  */
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/cccFncD6.s 			page 32


 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Configuration);
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/cccFncD6.s 			page 33


 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  /tmp/cccFncD6.s 			page 34


 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
ARM GAS  /tmp/cccFncD6.s 			page 35


 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PINC));
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/cccFncD6.s 			page 36


 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_MINC));
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral size.
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
ARM GAS  /tmp/cccFncD6.s 			page 37


 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Memory size.
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory size.
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /tmp/cccFncD6.s 			page 38


 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Channel priority level.
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PL));
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This action has no effect if
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         channel is enabled.
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
ARM GAS  /tmp/cccFncD6.s 			page 39


 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         remaining bytes to be transmitted.
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register adress (LL_PPP_DMA_GetRe
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   /* Direction Memory to Periph */
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   {
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
ARM GAS  /tmp/cccFncD6.s 			page 40


 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   }
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   else
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   {
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   }
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory address.
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory address.
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
ARM GAS  /tmp/cccFncD6.s 			page 41


1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral address.
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
ARM GAS  /tmp/cccFncD6.s 			page 42


1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
ARM GAS  /tmp/cccFncD6.s 			page 43


1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
 172              		.loc 3 1207 22 view .LVU46
 173              	.LBB59:
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
 174              		.loc 3 1209 3 view .LVU47
 175 005c 0F21     		movs	r1, #15
 176 005e 364A     		ldr	r2, .L3+4
 177              	.LBE59:
 178              	.LBE58:
 179              	.LBB62:
 180              	.LBB63:
 181              		.file 4 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h"
ARM GAS  /tmp/cccFncD6.s 			page 44


   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @file    stm32l0xx_ll_adc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifndef __STM32L0xx_LL_ADC_H
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __STM32L0xx_LL_ADC_H
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #include "stm32l0xx.h"
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @addtogroup STM32L0xx_LL_Driver
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC1)
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger source                                                   */
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
ARM GAS  /tmp/cccFncD6.s 			page 45


  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (6U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTSE
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTE
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWDCH)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FU) /* Equivalent to shift: (ADC_CHANNEL_NUMBE
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000U) /* Marker of internal channel */
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000U)
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR1_AWDCH
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR1_AWDCH
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR1_AWDCH
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR1_AWDCH
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWDCH_4                                      
ARM GAS  /tmp/cccFncD6.s 			page 46


 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000U)
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET)
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits positions */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        (3U)  /* Value equivalent to POSITION_VAL(ADC_CFGR1_RES)
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_AWDS
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16U) /* Value equivalent to POSITION_VAL(ADC_TR_HT) */
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    (0U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    (1U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    (2U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    (3U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    (4U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    (5U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    (6U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    (7U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
ARM GAS  /tmp/cccFncD6.s 			page 47


 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    (8U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    (9U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits groups */
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC internal channels related definitions */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF80078U)) /* Internal voltage referenc
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000U)                     /* Analog voltage reference 
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Temperature sensor */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF8007AU)) /* Internal temperature sens
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF8007EU)) /* Internal temperature sens
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30U)                       /* Internal temperature sens
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130U)                      /* Internal temperature sens
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000U)                     /* Analog voltage reference 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(USE_FULL_LL_DRIVER)
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
ARM GAS  /tmp/cccFncD6.s 			page 48


 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and multimode
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         disabled.
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 serie, this parameter has some clo
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cccFncD6.s 			page 49


 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (functions with prefix "REG").
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (several ADC channels enabled in group regular s
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
ARM GAS  /tmp/cccFncD6.s 			page 50


 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              data preserved or overwritten.
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD        /*!< ADC flag ADC analog watchdog 1 *
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWDIE      /*!< ADC interruption ADC analog watc
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* DMA transfer.                                                              */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000U) /* ADC group regular conversion data reg
ARM GAS  /tmp/cccFncD6.s 			page 51


 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000U)                               /*!< ADC asy
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000U)/*!< ADC clock mode to high frequency. On S
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)        /*!< ADC clock mode to low freque
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000U)/*!< ADC measurement pathes all disabled */
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_TSEN)
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VLCD          (ADC_CCR_VLCDEN)       /*!< ADC measurement path to inte
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
ARM GAS  /tmp/cccFncD6.s 			page 52


 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000U)                               /*!< ADC asy
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000U)             /*!< ADC resolution 12 bits */
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000U)/*!< ADC conversion data alignment: right a
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000U)             /*!< No ADC low power mode act
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001U) /*!< ADC group regular (available on all S
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
ARM GAS  /tmp/cccFncD6.s 			page 53


 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VLCD                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000U)                                           
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_CH2      (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM22_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM2_CC3 available only on              */
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.1, Cat.2, Cat.5                            */
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L011xx) || defined (STM32L021xx) || \
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L031xx) || defined (STM32L041xx) || \
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM21_TRGO available only on            */
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.2, Cat.3, Cat.5                            */
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L031xx) || defined (STM32L041xx) || \
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L051xx) || defined (STM32L052xx) || defined (STM32L053xx) || \
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L062xx) || defined (STM32L063xx) || \
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_TRGO     (LL_ADC_REG_TRIG_EXT_TIM22_TRGO)
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
ARM GAS  /tmp/cccFncD6.s 			page 54


 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000U)           /*!< ADC conversions are perform
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000U)                        /*!< ADC conversion
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN) /*!< ADC conversion
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN) /*!< ADC conversion
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000U)          /*!< ADC group regular behavior i
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000U)          /*!< ADC group regular sequencer 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< ADC group regular sequencer 
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000U)                                           
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cccFncD6.s 			page 55


 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000U)                                         /*
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP_0)                                      /*
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP_1)                                      /*
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)                     /*
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP_2)                                      /*
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_0)                     /*
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1)                     /*
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)    /*
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000U)                                           
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VLCD_REG             ((LL_ADC_CHANNEL_VLCD       & ADC_CHANNEL_ID_MASK) | ADC
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 56


 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )     /*!< ADC analog watchdog thr
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)     /*!< ADC analog watchdog thr
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)     /*!< ADC analog watchdog bot
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000U)                               /*!< ADC ove
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                          ADC_CFGR2_OVSE)  /*!< ADC ove
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000U)          /*!< ADC oversampling discontinuo
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000U)                                           
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000U)                                           
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cccFncD6.s 			page 57


 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not timeout values.
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         above each literal definition.
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not timeout values.                                                  */
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       STM32 serie:                                                         */
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 83/fADC.                    */
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         cycles                                                             */
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         configuration.                                                     */
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tUP_LDO").                                                      */
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US (10U)              /*!< Delay for ADC stabilization tim
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "TADC_BUF").                                                     */
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (10U)              /*!< Delay for internal voltage refer
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (10U)              /*!< Delay for temperature sensor sta
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (2U)             /*!< Delay required between ADC end o
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  /tmp/cccFncD6.s 			page 58


 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be written
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Register value
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return decimal number "4".
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number is returned, either defined with number
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/cccFncD6.s 			page 59


 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
ARM GAS  /tmp/cccFncD6.s 			page 60


 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (                                                        
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                             (0U)                                                   
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           )                                                        
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
ARM GAS  /tmp/cccFncD6.s 			page 61


 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL17)
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSEL1
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (0U)                                                     
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from number in decimal format.
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  /tmp/cccFncD6.s 			page 62


1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC internal channel:
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
ARM GAS  /tmp/cccFncD6.s 			page 63


1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a value defined from parameter definition of
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC registers.
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/cccFncD6.s 			page 64


1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VLCD)                                     \
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                               \
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
ARM GAS  /tmp/cccFncD6.s 			page 65


1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
ARM GAS  /tmp/cccFncD6.s 			page 66


1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (< ADCx param >,
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
ARM GAS  /tmp/cccFncD6.s 			page 67


1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__) \
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__AWD_THRESHOLD_TYPE__) == LL_ADC_AWD_THRESHOLD_LOW)                                 \
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                   \
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (__AWD_THRESHOLDS__) & LL_ADC_AWD_THRESHOLD_LOW                                    \
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                   \
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                   \
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__AWD_THRESHOLDS__) >> ADC_TR_HT_BITOFFSET_POS) & LL_ADC_AWD_THRESHOLD_LOW       \
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC common register instance
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (ADC1_COMMON)
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC common instance are disabled.
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are disabled.
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
ARM GAS  /tmp/cccFncD6.s 			page 68


1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to reference manual).
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((0xFFFU) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a resolution to another resolution.
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted 
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of to the data to be converted
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__, __ADC_RESOLUTION_CURRENT__, __ADC_RESOLUTION_TAR
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))   \
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U))      \
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                       (unit: digital value).
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_DATA__,\
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
ARM GAS  /tmp/cccFncD6.s 			page 69


1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         reference VrefInt.
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         connected to pin Vref+.
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro __LL_ADC_CALC_TEMPERATURE() is not available.*/
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().        */
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx) && !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
ARM GAS  /tmp/cccFncD6.s 			page 70


1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor.
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6) && !defined(STM32L010x4
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to device datasheet).
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
ARM GAS  /tmp/cccFncD6.s 			page 71


1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: digital value)
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values.
1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "Avg_Slop
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "V130" (c
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((( (                                                                        \
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        -                                                                       \
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                        \
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 72


1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC register address
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Retrieve address of register DR */
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cccFncD6.s 			page 73


1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
ARM GAS  /tmp/cccFncD6.s 			page 74


1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock low frequency mode.
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock low frequency mode.
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
ARM GAS  /tmp/cccFncD6.s 			page 75


1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a sampling time minimum value is required.
1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_SetCommonPathInternalCh
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN, PathInternal);
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN, PathInternal);
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_GetCommonPathInternalCh
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 76


1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN));
1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN));
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled.
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
ARM GAS  /tmp/cccFncD6.s 			page 77


1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without having to perform a new calibration using
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on going on group regular.
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              CalibrationFactor);
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/cccFncD6.s 			page 78


1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
ARM GAS  /tmp/cccFncD6.s 			page 79


1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
ARM GAS  /tmp/cccFncD6.s 			page 80


2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  /tmp/cccFncD6.s 			page 81


2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         converted:
2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         setting).
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TS_temp, ...).
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required.
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_SetSamplingTimeCommonChannels
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTime)
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this STM32 serie.
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_GetSamplingTimeCommonChannels
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cccFncD6.s 			page 82


2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx)
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR, ADC_SMPR_SMP));
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         also set trigger polarity to rising edge 
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
ARM GAS  /tmp/cccFncD6.s 			page 83


2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (equivalent to 
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((TriggerSource
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             or external.
2275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
ARM GAS  /tmp/cccFncD6.s 			page 84


2281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN));
2286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cccFncD6.s 			page 85


2338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  /tmp/cccFncD6.s 			page 86


2395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/cccFncD6.s 			page 87


2452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  /tmp/cccFncD6.s 			page 88


2509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
2546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 182              		.loc 4 2549 3 is_stmt 0 view .LVU48
 183 0060 364C     		ldr	r4, .L3+8
 184              	.LBE63:
 185              	.LBE62:
 186              	.LBB66:
 187              	.LBB60:
 188              		.loc 3 1209 3 view .LVU49
 189 0062 1368     		ldr	r3, [r2]
 190              	.LBE60:
 191              	.LBE66:
 192              	.LBB67:
 193              	.LBB68:
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 194              		.loc 4 1799 3 view .LVU50
 195 0064 364E     		ldr	r6, .L3+12
 196              	.LBE68:
ARM GAS  /tmp/cccFncD6.s 			page 89


 197              	.LBE67:
 198              	.LBB70:
 199              	.LBB61:
 200              		.loc 3 1209 3 view .LVU51
 201 0066 8B43     		bics	r3, r1
 202 0068 1360     		str	r3, [r2]
 203              	.LVL6:
 204              		.loc 3 1209 3 view .LVU52
 205              	.LBE61:
 206              	.LBE70:
  51:Core/Src/adc.c **** 
  52:Core/Src/adc.c ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_1, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 207              		.loc 1 52 3 is_stmt 1 view .LVU53
 208              	.LBB71:
 209              	.LBI71:
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 210              		.loc 3 606 22 view .LVU54
 211              	.LBB72:
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 212              		.loc 3 608 3 view .LVU55
 213 006a 364B     		ldr	r3, .L3+16
 214 006c 3649     		ldr	r1, .L3+20
 215 006e 1A68     		ldr	r2, [r3]
 216              	.LBE72:
 217              	.LBE71:
  53:Core/Src/adc.c **** 
  54:Core/Src/adc.c ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PRIORITY_LOW);
  55:Core/Src/adc.c **** 
  56:Core/Src/adc.c ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MODE_NORMAL);
  57:Core/Src/adc.c **** 
  58:Core/Src/adc.c ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PERIPH_NOINCREMENT);
  59:Core/Src/adc.c **** 
  60:Core/Src/adc.c ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MEMORY_INCREMENT);
  61:Core/Src/adc.c **** 
  62:Core/Src/adc.c ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PDATAALIGN_HALFWORD);
  63:Core/Src/adc.c **** 
  64:Core/Src/adc.c ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MDATAALIGN_HALFWORD);
  65:Core/Src/adc.c **** 
  66:Core/Src/adc.c ****   /** Configure Regular Channel
  67:Core/Src/adc.c ****   */
  68:Core/Src/adc.c ****   LL_ADC_REG_SetSequencerChAdd(ADC1, LL_ADC_CHANNEL_0);
  69:Core/Src/adc.c ****   /** Configure Regular Channel
  70:Core/Src/adc.c ****   */
  71:Core/Src/adc.c ****   LL_ADC_REG_SetSequencerChAdd(ADC1, LL_ADC_CHANNEL_VREFINT);
  72:Core/Src/adc.c ****   LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_PATH_INTERNAL_VREFINT);
  73:Core/Src/adc.c ****   /** Common config
  74:Core/Src/adc.c ****   */
  75:Core/Src/adc.c ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
  76:Core/Src/adc.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
  77:Core/Src/adc.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
  78:Core/Src/adc.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_LIMITED;
  79:Core/Src/adc.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
  80:Core/Src/adc.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 218              		.loc 1 80 3 is_stmt 0 view .LVU56
 219 0070 2000     		movs	r0, r4
 220              	.LBB74:
 221              	.LBB73:
ARM GAS  /tmp/cccFncD6.s 			page 90


 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 222              		.loc 3 608 3 view .LVU57
 223 0072 0A40     		ands	r2, r1
 224 0074 1A60     		str	r2, [r3]
 225              	.LVL7:
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 226              		.loc 3 608 3 view .LVU58
 227              	.LBE73:
 228              	.LBE74:
  54:Core/Src/adc.c **** 
 229              		.loc 1 54 3 is_stmt 1 view .LVU59
 230              	.LBB75:
 231              	.LBI75:
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 232              		.loc 3 886 22 view .LVU60
 233              	.LBB76:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 234              		.loc 3 888 3 view .LVU61
 235 0076 1A68     		ldr	r2, [r3]
 236 0078 3449     		ldr	r1, .L3+24
 237 007a 0A40     		ands	r2, r1
 238              	.LBE76:
 239              	.LBE75:
 240              	.LBB78:
 241              	.LBB79:
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 242              		.loc 3 657 3 is_stmt 0 view .LVU62
 243 007c 2021     		movs	r1, #32
 244              	.LBE79:
 245              	.LBE78:
 246              	.LBB81:
 247              	.LBB77:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 248              		.loc 3 888 3 view .LVU63
 249 007e 1A60     		str	r2, [r3]
 250              	.LVL8:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 251              		.loc 3 888 3 view .LVU64
 252              	.LBE77:
 253              	.LBE81:
  56:Core/Src/adc.c **** 
 254              		.loc 1 56 3 is_stmt 1 view .LVU65
 255              	.LBB82:
 256              	.LBI78:
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 257              		.loc 3 655 22 view .LVU66
 258              	.LBB80:
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 259              		.loc 3 657 3 view .LVU67
 260 0080 1A68     		ldr	r2, [r3]
 261 0082 8A43     		bics	r2, r1
 262 0084 1A60     		str	r2, [r3]
 263              	.LVL9:
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 264              		.loc 3 657 3 is_stmt 0 view .LVU68
 265              	.LBE80:
 266              	.LBE82:
ARM GAS  /tmp/cccFncD6.s 			page 91


  58:Core/Src/adc.c **** 
 267              		.loc 1 58 3 is_stmt 1 view .LVU69
 268              	.LBB83:
 269              	.LBI83:
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 270              		.loc 3 700 22 view .LVU70
 271              	.LBB84:
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 272              		.loc 3 702 3 view .LVU71
 273 0086 1A68     		ldr	r2, [r3]
 274 0088 2031     		adds	r1, r1, #32
 275 008a 8A43     		bics	r2, r1
 276 008c 1A60     		str	r2, [r3]
 277              	.LVL10:
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 278              		.loc 3 702 3 is_stmt 0 view .LVU72
 279              	.LBE84:
 280              	.LBE83:
  60:Core/Src/adc.c **** 
 281              		.loc 1 60 3 is_stmt 1 view .LVU73
 282              	.LBB85:
 283              	.LBI85:
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 284              		.loc 3 745 22 view .LVU74
 285              	.LBB86:
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 286              		.loc 3 747 3 view .LVU75
 287 008e 1A68     		ldr	r2, [r3]
 288 0090 4031     		adds	r1, r1, #64
 289 0092 0A43     		orrs	r2, r1
 290 0094 1A60     		str	r2, [r3]
 291              	.LVL11:
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 292              		.loc 3 747 3 is_stmt 0 view .LVU76
 293              	.LBE86:
 294              	.LBE85:
  62:Core/Src/adc.c **** 
 295              		.loc 1 62 3 is_stmt 1 view .LVU77
 296              	.LBB87:
 297              	.LBI87:
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 298              		.loc 3 791 22 view .LVU78
 299              	.LBB88:
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 300              		.loc 3 793 3 view .LVU79
 301 0096 1A68     		ldr	r2, [r3]
 302 0098 2D49     		ldr	r1, .L3+28
 303 009a 1140     		ands	r1, r2
 304 009c 8022     		movs	r2, #128
 305 009e 5200     		lsls	r2, r2, #1
 306 00a0 0A43     		orrs	r2, r1
 307 00a2 1A60     		str	r2, [r3]
 308              	.LVL12:
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 309              		.loc 3 793 3 is_stmt 0 view .LVU80
 310              	.LBE88:
 311              	.LBE87:
ARM GAS  /tmp/cccFncD6.s 			page 92


  64:Core/Src/adc.c **** 
 312              		.loc 1 64 3 is_stmt 1 view .LVU81
 313              	.LBB89:
 314              	.LBI89:
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 315              		.loc 3 838 22 view .LVU82
 316              	.LBB90:
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 317              		.loc 3 840 3 view .LVU83
 318 00a4 1A68     		ldr	r2, [r3]
 319 00a6 2B49     		ldr	r1, .L3+32
 320 00a8 1140     		ands	r1, r2
 321 00aa 8022     		movs	r2, #128
 322 00ac D200     		lsls	r2, r2, #3
 323 00ae 0A43     		orrs	r2, r1
 324 00b0 1A60     		str	r2, [r3]
 325              	.LVL13:
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 326              		.loc 3 840 3 is_stmt 0 view .LVU84
 327              	.LBE90:
 328              	.LBE89:
  68:Core/Src/adc.c ****   /** Configure Regular Channel
 329              		.loc 1 68 3 is_stmt 1 view .LVU85
 330              	.LBB91:
 331              	.LBI62:
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 332              		.loc 4 2545 22 view .LVU86
 333              	.LBB64:
 334              		.loc 4 2549 3 view .LVU87
 335 00b2 A36A     		ldr	r3, [r4, #40]
 336              	.LBE64:
 337              	.LBE91:
 338              		.loc 1 80 3 is_stmt 0 view .LVU88
 339 00b4 07A9     		add	r1, sp, #28
 340              	.LBB92:
 341              	.LBB65:
 342              		.loc 4 2549 3 view .LVU89
 343 00b6 3B43     		orrs	r3, r7
 344 00b8 A362     		str	r3, [r4, #40]
 345              	.LVL14:
 346              		.loc 4 2549 3 view .LVU90
 347              	.LBE65:
 348              	.LBE92:
  71:Core/Src/adc.c ****   LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_PATH_INTERNAL_VREFINT);
 349              		.loc 1 71 3 is_stmt 1 view .LVU91
 350              	.LBB93:
 351              	.LBI93:
2545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 352              		.loc 4 2545 22 view .LVU92
 353              	.LBB94:
 354              		.loc 4 2549 3 view .LVU93
 355 00ba 8023     		movs	r3, #128
 356 00bc A26A     		ldr	r2, [r4, #40]
 357 00be 9B02     		lsls	r3, r3, #10
 358 00c0 1343     		orrs	r3, r2
 359 00c2 A362     		str	r3, [r4, #40]
 360              	.LVL15:
ARM GAS  /tmp/cccFncD6.s 			page 93


 361              		.loc 4 2549 3 is_stmt 0 view .LVU94
 362              	.LBE94:
 363              	.LBE93:
  72:Core/Src/adc.c ****   /** Common config
 364              		.loc 1 72 3 is_stmt 1 view .LVU95
 365              	.LBB95:
 366              	.LBI67:
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 367              		.loc 4 1794 22 view .LVU96
 368              	.LBB69:
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 369              		.loc 4 1799 3 view .LVU97
 370 00c4 3368     		ldr	r3, [r6]
 371 00c6 244A     		ldr	r2, .L3+36
 372 00c8 1A40     		ands	r2, r3
 373 00ca 8023     		movs	r3, #128
 374 00cc DB03     		lsls	r3, r3, #15
 375 00ce 1343     		orrs	r3, r2
 376 00d0 3360     		str	r3, [r6]
 377              	.LVL16:
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 378              		.loc 4 1799 3 is_stmt 0 view .LVU98
 379              	.LBE69:
 380              	.LBE95:
  75:Core/Src/adc.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 381              		.loc 1 75 3 is_stmt 1 view .LVU99
  75:Core/Src/adc.c ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 382              		.loc 1 75 36 is_stmt 0 view .LVU100
 383 00d2 0795     		str	r5, [sp, #28]
  76:Core/Src/adc.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 384              		.loc 1 76 3 is_stmt 1 view .LVU101
  76:Core/Src/adc.c ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 385              		.loc 1 76 39 is_stmt 0 view .LVU102
 386 00d4 0895     		str	r5, [sp, #32]
  77:Core/Src/adc.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_LIMITED;
 387              		.loc 1 77 3 is_stmt 1 view .LVU103
  77:Core/Src/adc.c ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_LIMITED;
 388              		.loc 1 77 37 is_stmt 0 view .LVU104
 389 00d6 0995     		str	r5, [sp, #36]
  78:Core/Src/adc.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 390              		.loc 1 78 3 is_stmt 1 view .LVU105
  78:Core/Src/adc.c ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 391              		.loc 1 78 34 is_stmt 0 view .LVU106
 392 00d8 0A97     		str	r7, [sp, #40]
  79:Core/Src/adc.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 393              		.loc 1 79 3 is_stmt 1 view .LVU107
  79:Core/Src/adc.c ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 394              		.loc 1 79 30 is_stmt 0 view .LVU108
 395 00da 0B95     		str	r5, [sp, #44]
 396              		.loc 1 80 3 is_stmt 1 view .LVU109
 397 00dc FFF7FEFF 		bl	LL_ADC_REG_Init
 398              	.LVL17:
  81:Core/Src/adc.c ****   LL_ADC_SetSamplingTimeCommonChannels(ADC1, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 399              		.loc 1 81 3 view .LVU110
 400              	.LBB96:
 401              	.LBI96:
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cccFncD6.s 			page 94


 402              		.loc 4 2151 22 view .LVU111
 403              	.LBB97:
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 404              		.loc 4 2153 3 view .LVU112
 405 00e0 0722     		movs	r2, #7
 406              	.LBE97:
 407              	.LBE96:
 408              	.LBB100:
 409              	.LBB101:
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 410              		.loc 4 1737 3 is_stmt 0 view .LVU113
 411 00e2 8021     		movs	r1, #128
 412              	.LBE101:
 413              	.LBE100:
 414              	.LBB104:
 415              	.LBB98:
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 416              		.loc 4 2153 3 view .LVU114
 417 00e4 6369     		ldr	r3, [r4, #20]
 418              	.LBE98:
 419              	.LBE104:
 420              	.LBB105:
 421              	.LBB102:
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 422              		.loc 4 1737 3 view .LVU115
 423 00e6 8904     		lsls	r1, r1, #18
 424              	.LBE102:
 425              	.LBE105:
 426              	.LBB106:
 427              	.LBB99:
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 428              		.loc 4 2153 3 view .LVU116
 429 00e8 9343     		bics	r3, r2
 430 00ea 6361     		str	r3, [r4, #20]
 431              	.LVL18:
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 432              		.loc 4 2153 3 view .LVU117
 433              	.LBE99:
 434              	.LBE106:
  82:Core/Src/adc.c ****   LL_ADC_SetOverSamplingScope(ADC1, LL_ADC_OVS_DISABLE);
 435              		.loc 1 82 3 is_stmt 1 view .LVU118
 436              	.LBB107:
 437              	.LBI107:
2550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
2560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
ARM GAS  /tmp/cccFncD6.s 			page 95


2564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
2577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
2578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
2579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
2580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
2581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
2582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
2583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
2584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
2585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
2586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
2587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
2588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
2589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
2590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
2591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
2592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
2593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
2594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
2595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
ARM GAS  /tmp/cccFncD6.s 			page 96


2621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
2624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
2632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
2635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
2651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
2653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
2654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
2655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
2656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
2657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
2658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
2659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
2660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
2661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
2662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
2663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
2664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
2665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
2666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
2667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
2668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
2669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
2670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
2671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
ARM GAS  /tmp/cccFncD6.s 			page 97


2678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
2699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
2701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
2703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
2704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
2705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
2706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
2707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
2708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
2709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
2710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
2711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
2712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
2713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
2714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
2715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
2716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
2717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
2718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
2719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
2720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
2721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
2722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
2723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cccFncD6.s 			page 98


2735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
2738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
2747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
2756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
2764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
2791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
ARM GAS  /tmp/cccFncD6.s 			page 99


2792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
2802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
2825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
2826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
2835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
2839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
2841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         other devices without this feature have a behavior
2842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         equivalent to data overwritten.
2843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
2844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
2845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
2846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/cccFncD6.s 			page 100


2849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
2851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
2853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
2858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
2860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
2864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
2866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
2872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
2874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a single channel or all channels,
2888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on ADC group regular.
2889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
2891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  /tmp/cccFncD6.s 			page 101


2906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_SetAnalogWDMonitChannels\n
2907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_SetAnalogWDMonitChannels
2908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
2910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
2929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
2932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
2933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
2934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
2939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
2941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_AWDEN),
2942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDChannelGroup & ADC_AWD_CR_ALL_CHANNEL_MASK));
2943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
2947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           as parameter for another function.
2955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           process the returned value with the helper macro
2957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
2959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           one channel.
2960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
ARM GAS  /tmp/cccFncD6.s 			page 102


2963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_GetAnalogWDMonitChannels\n
2972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_GetAnalogWDMonitChannels\n
2973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_GetAnalogWDMonitChannels
2974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
2999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelGroup = READ_BIT(ADCx->CFGR1, (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_
3001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
3002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Set variable according to channel definition including channel ID  */
3003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       with bitfield.                                                     */
3004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelSingle = ((AWDChannelGroup & ADC_CFGR1_AWDSGL) >> ADC_CFGR1_AWDSGL_BITOFFSET_P
3005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelBitField = (ADC_CHANNEL_0_BITFIELD << ((AWDChannelGroup & ADC_CHANNEL_ID_NUMBE
3006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
3007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (AWDChannelGroup | (AWDChannelBitField * AWDChannelSingle));
3008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high and low.
3013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
ARM GAS  /tmp/cccFncD6.s 			page 103


3020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_ConfigAnalogWDThresholds\n
3030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_ConfigAnalogWDThresholds
3031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdHighVa
3037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
3040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
3041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high or low.
3046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_SetAnalogWDThresholds\n
3063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_SetAnalogWDThresholds
3064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
3072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low),      */
3076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* data is not shifted.                                                     */
ARM GAS  /tmp/cccFncD6.s 			page 104


3077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdsHighLow,
3079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow >> ADC_TR_HT_BITOFFSET_POS) & ((uint32_t)0
3080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         concatenated.
3086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         using helper macro:
3089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_GetAnalogWDThresholds\n
3094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_GetAnalogWDThresholds
3095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
3103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low or     */
3107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* both thresholds), data is not shifted.                                   */
3108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
3109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
3110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     >> ((~AWDThresholdsHighLow) & (0x00000010U))
3111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    );
3112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cccFncD6.s 			page 105


3134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
 438              		.loc 4 3135 22 view .LVU119
 439              	.LBB108:
3136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
 440              		.loc 4 3137 3 view .LVU120
 441 00ec 2369     		ldr	r3, [r4, #16]
 442              	.LBE108:
 443              	.LBE107:
 444              	.LBB110:
 445              	.LBB111:
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 446              		.loc 4 2341 3 is_stmt 0 view .LVU121
 447 00ee 033A     		subs	r2, r2, #3
 448              	.LBE111:
 449              	.LBE110:
 450              	.LBB114:
 451              	.LBB109:
 452              		.loc 4 3137 3 view .LVU122
 453 00f0 BB43     		bics	r3, r7
 454 00f2 2361     		str	r3, [r4, #16]
 455              	.LVL19:
 456              		.loc 4 3137 3 view .LVU123
 457              	.LBE109:
 458              	.LBE114:
  83:Core/Src/adc.c ****   LL_ADC_REG_SetSequencerScanDirection(ADC1, LL_ADC_REG_SEQ_SCAN_DIR_FORWARD);
 459              		.loc 1 83 3 is_stmt 1 view .LVU124
 460              	.LBB115:
 461              	.LBI110:
2339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 462              		.loc 4 2339 22 view .LVU125
 463              	.LBB112:
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 464              		.loc 4 2341 3 view .LVU126
 465 00f4 E368     		ldr	r3, [r4, #12]
 466              	.LBE112:
 467              	.LBE115:
  84:Core/Src/adc.c ****   LL_ADC_SetCommonFrequencyMode(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_CLOCK_FREQ_MODE_LOW);
  85:Core/Src/adc.c ****   LL_ADC_DisableIT_EOC(ADC1);
  86:Core/Src/adc.c ****   LL_ADC_DisableIT_EOS(ADC1);
  87:Core/Src/adc.c ****   ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV1;
  88:Core/Src/adc.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
  89:Core/Src/adc.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
  90:Core/Src/adc.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
  91:Core/Src/adc.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 468              		.loc 1 91 3 is_stmt 0 view .LVU127
 469 00f6 2000     		movs	r0, r4
 470              	.LBB116:
 471              	.LBB113:
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 472              		.loc 4 2341 3 view .LVU128
 473 00f8 9343     		bics	r3, r2
 474 00fa E360     		str	r3, [r4, #12]
 475              	.LVL20:
2341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 476              		.loc 4 2341 3 view .LVU129
ARM GAS  /tmp/cccFncD6.s 			page 106


 477              	.LBE113:
 478              	.LBE116:
  84:Core/Src/adc.c ****   LL_ADC_SetCommonFrequencyMode(__LL_ADC_COMMON_INSTANCE(ADC1), LL_ADC_CLOCK_FREQ_MODE_LOW);
 479              		.loc 1 84 3 is_stmt 1 view .LVU130
 480              	.LBB117:
 481              	.LBI100:
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 482              		.loc 4 1735 22 view .LVU131
 483              	.LBB103:
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 484              		.loc 4 1737 3 view .LVU132
 485 00fc 3368     		ldr	r3, [r6]
 486 00fe 0B43     		orrs	r3, r1
 487 0100 3360     		str	r3, [r6]
 488              	.LVL21:
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 489              		.loc 4 1737 3 is_stmt 0 view .LVU133
 490              	.LBE103:
 491              	.LBE117:
  85:Core/Src/adc.c ****   LL_ADC_DisableIT_EOS(ADC1);
 492              		.loc 1 85 3 is_stmt 1 view .LVU134
 493              	.LBB118:
 494              	.LBI118:
3138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
3155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
3166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
3168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 107


3172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
3173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
3175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
3179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
3186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
3192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
3194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling
3198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
3199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ratio
3200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - shift
3201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
3206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
3207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
3209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
3218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cccFncD6.s 			page 108


3229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
3230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
3232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
3236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
3237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
3239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
3249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
3251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
3255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
3256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
3258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
3269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
3271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
3278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
3283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there are three possibilities to enable
3284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the voltage regulator:
3285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling it manually
ARM GAS  /tmp/cccFncD6.s 			page 109


3286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
3287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by launching a calibration
3288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
3289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling the ADC
3290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
3291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
3292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
3293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
3294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tUP_LDO".
3295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
3296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
3300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
3304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
3311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
3315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
3319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
3323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
3325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
3329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
3330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
3332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
3334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN));
3336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
3340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for 
3341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
3342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion start.
ARM GAS  /tmp/cccFncD6.s 			page 110


3343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
3344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
3350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
3351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
3355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADEN);
3362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
3366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
3369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
3371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
3375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADDIS);
3382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
3386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
3390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
3392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
3394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN));
3396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
ARM GAS  /tmp/cccFncD6.s 			page 111


3400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
3401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
3403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
3405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS));
3407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
3411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
3413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
3414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
3415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
3416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 serie, ADC DMA transfer request should be disabled
3417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         during calibration:
3418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Calibration factor is available in data register
3419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and also transfered by DMA.
3420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
3421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
3422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         calibration.
3423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
3424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
3425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
3426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
3427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
3431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
3435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADCAL);
3442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
3446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
3447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
3449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
3451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL));
3453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cccFncD6.s 			page 112


3457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
3460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
3465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both 
3466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
3467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           starts immediately.
3469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
3471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           following the ADC start conversion command.
3472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
3475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
3476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
3478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
3482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTART);
3489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
3493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
3496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
3498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
3502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTP);
3509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
3513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
ARM GAS  /tmp/cccFncD6.s 			page 113


3514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
3516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
3518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART));
3520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
3524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
3525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
3527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
3529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP));
3531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
3536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
3537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with feature oversampling).
3538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
3539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
3543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 12 bits.
3550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
3554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
3558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 10 bits.
3565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
3569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
ARM GAS  /tmp/cccFncD6.s 			page 114


3571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
3573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 8 bits.
3580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
3584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
3586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
3588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 6 bits.
3595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
3599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
3601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
3603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
3612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
3617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
3621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
3625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY));
3627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  /tmp/cccFncD6.s 			page 115


3628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
3631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
3632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
3636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC));
3638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
3642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_IsActiveFlag_EOS
3643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
3647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS));
3649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
3653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
3654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
3658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR));
3660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
3664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
3665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
3669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP));
3671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
3675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_IsActiveFlag_AWD1
3676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
3680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1));
3682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  /tmp/cccFncD6.s 			page 116


3685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
3686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
3687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
3691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL));
3693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
3697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
3701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
3705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
3707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
3711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
3712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
3716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
3718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
3722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_ClearFlag_EOS
3723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
3727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
3729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
3733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
3734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
3738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
3740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cccFncD6.s 			page 117


3742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
3744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
3745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
3749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
3751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
3755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_ClearFlag_AWD1
3756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
3760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
3762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
3766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
3767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
3771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
3773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
3780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC ready.
3785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
3786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
3790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
3792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
3796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
3797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cccFncD6.s 			page 118


3799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
3801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
3803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
3807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSEQIE        LL_ADC_EnableIT_EOS
3808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
3812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
3814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
3818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
3819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
3823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
3825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
3829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
3830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
3834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
3836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
3840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      AWDIE          LL_ADC_EnableIT_AWD1
3841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
3845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
3847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
3851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
3852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
ARM GAS  /tmp/cccFncD6.s 			page 119


3856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
3858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
3862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
3863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
3867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
3869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
3873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
3874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
 495              		.loc 4 3877 22 view .LVU135
 496              	.LBB119:
3878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
 497              		.loc 4 3879 3 view .LVU136
 498 0102 6368     		ldr	r3, [r4, #4]
 499              	.LBE119:
 500              	.LBE118:
 501              		.loc 1 91 3 is_stmt 0 view .LVU137
 502 0104 03A9     		add	r1, sp, #12
 503              	.LBB121:
 504              	.LBB120:
 505              		.loc 4 3879 3 view .LVU138
 506 0106 9343     		bics	r3, r2
 507 0108 6360     		str	r3, [r4, #4]
 508              	.LVL22:
 509              		.loc 4 3879 3 view .LVU139
 510              	.LBE120:
 511              	.LBE121:
  86:Core/Src/adc.c ****   ADC_InitStruct.Clock = LL_ADC_CLOCK_SYNC_PCLK_DIV1;
 512              		.loc 1 86 3 is_stmt 1 view .LVU140
 513              	.LBB122:
 514              	.LBI122:
3880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
3884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSEQIE        LL_ADC_DisableIT_EOS
3885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
 515              		.loc 4 3888 22 view .LVU141
 516              	.LBB123:
3889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cccFncD6.s 			page 120


3890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
 517              		.loc 4 3890 3 view .LVU142
 518 010a 6368     		ldr	r3, [r4, #4]
 519 010c 0432     		adds	r2, r2, #4
 520 010e 9343     		bics	r3, r2
 521 0110 6360     		str	r3, [r4, #4]
 522              	.LVL23:
 523              		.loc 4 3890 3 is_stmt 0 view .LVU143
 524              	.LBE123:
 525              	.LBE122:
  87:Core/Src/adc.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 526              		.loc 1 87 3 is_stmt 1 view .LVU144
  87:Core/Src/adc.c ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 527              		.loc 1 87 24 is_stmt 0 view .LVU145
 528 0112 C023     		movs	r3, #192
 529 0114 1B06     		lsls	r3, r3, #24
 530 0116 0393     		str	r3, [sp, #12]
  88:Core/Src/adc.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 531              		.loc 1 88 3 is_stmt 1 view .LVU146
  88:Core/Src/adc.c ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 532              		.loc 1 88 29 is_stmt 0 view .LVU147
 533 0118 0495     		str	r5, [sp, #16]
  89:Core/Src/adc.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 534              		.loc 1 89 3 is_stmt 1 view .LVU148
  89:Core/Src/adc.c ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 535              		.loc 1 89 32 is_stmt 0 view .LVU149
 536 011a 0595     		str	r5, [sp, #20]
  90:Core/Src/adc.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 537              		.loc 1 90 3 is_stmt 1 view .LVU150
  90:Core/Src/adc.c ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 538              		.loc 1 90 31 is_stmt 0 view .LVU151
 539 011c 0695     		str	r5, [sp, #24]
 540              		.loc 1 91 3 is_stmt 1 view .LVU152
 541 011e FFF7FEFF 		bl	LL_ADC_Init
 542              	.LVL24:
  92:Core/Src/adc.c **** 
  93:Core/Src/adc.c ****   /* Enable ADC internal voltage regulator */
  94:Core/Src/adc.c ****   LL_ADC_EnableInternalRegulator(ADC);
 543              		.loc 1 94 3 view .LVU153
 544              	.LBB124:
 545              	.LBI124:
3303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 546              		.loc 4 3303 22 view .LVU154
 547              	.LBB125:
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 548              		.loc 4 3308 3 view .LVU155
 549 0122 B368     		ldr	r3, [r6, #8]
 550 0124 0D4A     		ldr	r2, .L3+40
 551 0126 1A40     		ands	r2, r3
 552 0128 8023     		movs	r3, #128
 553 012a 5B05     		lsls	r3, r3, #21
 554 012c 1343     		orrs	r3, r2
 555 012e B360     		str	r3, [r6, #8]
 556              	.LVL25:
3308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 557              		.loc 4 3308 3 is_stmt 0 view .LVU156
 558              	.LBE125:
ARM GAS  /tmp/cccFncD6.s 			page 121


 559              	.LBE124:
  95:Core/Src/adc.c ****   /* Delay for ADC internal voltage regulator stabilization. */
  96:Core/Src/adc.c ****   /* Compute number of CPU cycles to wait for, from delay in us. */
  97:Core/Src/adc.c ****   /* Note: Variable divided by 2 to compensate partially */
  98:Core/Src/adc.c ****   /* CPU processing cycles (depends on compilation optimization). */
  99:Core/Src/adc.c ****   /* Note: If system core clock frequency is below 200kHz, wait time */
 100:Core/Src/adc.c ****   /* is only a few CPU processing cycles. */
 101:Core/Src/adc.c ****   uint32_t wait_loop_index;
 560              		.loc 1 101 3 is_stmt 1 view .LVU157
 102:Core/Src/adc.c ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 561              		.loc 1 102 3 view .LVU158
 103:Core/Src/adc.c ****   while(wait_loop_index != 0)
 562              		.loc 1 103 3 view .LVU159
 563              		.loc 1 103 8 view .LVU160
 104:Core/Src/adc.c ****   {
 105:Core/Src/adc.c ****     wait_loop_index--;
 106:Core/Src/adc.c ****   }
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c **** }
 564              		.loc 1 108 1 is_stmt 0 view .LVU161
 565 0130 13B0     		add	sp, sp, #76
 566              		@ sp needed
 567 0132 F0BD     		pop	{r4, r5, r6, r7, pc}
 568              	.L4:
 569              		.align	2
 570              	.L3:
 571 0134 00100240 		.word	1073876992
 572 0138 A8000240 		.word	1073873064
 573 013c 00240140 		.word	1073816576
 574 0140 08270140 		.word	1073817352
 575 0144 08000240 		.word	1073872904
 576 0148 EFBFFFFF 		.word	-16401
 577 014c FFCFFFFF 		.word	-12289
 578 0150 FFFCFFFF 		.word	-769
 579 0154 FFF3FFFF 		.word	-3073
 580 0158 FFFF3FFF 		.word	-12582913
 581 015c E8FFFF6F 		.word	1879048168
 582              		.cfi_endproc
 583              	.LFE1053:
 585              		.text
 586              	.Letext0:
 587              		.file 5 "/usr/local/arm-none-eabi/include/machine/_default_types.h"
 588              		.file 6 "/usr/local/arm-none-eabi/include/sys/_stdint.h"
 589              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 590              		.file 8 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 591              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
 592              		.file 10 "<built-in>"
ARM GAS  /tmp/cccFncD6.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cccFncD6.s:16     .text.MX_ADC_Init:0000000000000000 $t
     /tmp/cccFncD6.s:25     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/cccFncD6.s:571    .text.MX_ADC_Init:0000000000000134 $d

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_ADC_REG_Init
LL_ADC_Init
