ARM GAS  /tmp/ccfOSRsL.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB35:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "bme280.h"
  29:Core/Src/main.c **** #include "nrf905.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccfOSRsL.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** #define Day 25
  36:Core/Src/main.c **** #define Mes 04
  37:Core/Src/main.c **** #define year 2020
  38:Core/Src/main.c **** #define hour 21
  39:Core/Src/main.c **** #define min 01
  40:Core/Src/main.c **** #define sec 13
  41:Core/Src/main.c **** Packet_send P;
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** struct bme280_dev dev_bme = {0};
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN */
  81:Core/Src/main.c ****   long j=0;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c ****   
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccfOSRsL.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_SPI1_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** HAL_GPIO_WritePin(CS_BME_GPIO_Port, CS_BME_Pin, GPIO_PIN_SET);
 107:Core/Src/main.c **** HAL_GPIO_WritePin(CS_NRF_GPIO_Port, CS_NRF_Pin, GPIO_PIN_SET);
 108:Core/Src/main.c **** NRF905_POWER_ON();
 109:Core/Src/main.c **** HAL_Delay(2);
 110:Core/Src/main.c **** NRF905_Config_t.AUTO_RETRAN = AUTO_RET_DISABLE ;
 111:Core/Src/main.c **** NRF905_Config_t.CH_NO_1 = 138;
 112:Core/Src/main.c **** NRF905_Config_t.CH_NO_2 = 0;
 113:Core/Src/main.c **** NRF905_Config_t.CRC_EN = CRC_CHECK_ENABLE;
 114:Core/Src/main.c **** NRF905_Config_t.CRC_MODE = CRC_MODE_16bit;
 115:Core/Src/main.c **** NRF905_Config_t.HFREQ_PLL = FREQ_433MHz ;
 116:Core/Src/main.c **** NRF905_Config_t.PA_PWR = PWR_10dBm;
 117:Core/Src/main.c **** NRF905_Config_t.RX_ADDRESS = 0xE7E7E7E7;
 118:Core/Src/main.c **** NRF905_Config_t.RX_AFW = TX_ADDR_WIDTH_4Byte ;
 119:Core/Src/main.c **** NRF905_Config_t.RX_PW =  sizeof(P);
 120:Core/Src/main.c **** NRF905_Config_t.RX_RED_PWR = RED_PWR_DISABLE;
 121:Core/Src/main.c **** NRF905_Config_t.TX_AFW = TX_ADDR_WIDTH_4Byte;
 122:Core/Src/main.c **** NRF905_Config_t.TX_PW = sizeof(P);
 123:Core/Src/main.c **** NRF905_Config_t.UP_CLK_EN = OUT_CLOCK_ENABLE;
 124:Core/Src/main.c **** NRF905_Config_t.UP_CLK_FREQ =  OUT_CLOCK_FREQ_500kHz;
 125:Core/Src/main.c **** NRF905_Config_t.XOF = CRYSTAL_OSC_FREQ_16MHz;
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** if (NRF905_INIT(&NRF905_Config_t ))
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 2 */
 132:Core/Src/main.c ****  
 133:Core/Src/main.c ****  
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c ****     
 141:Core/Src/main.c ****     HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
 142:Core/Src/main.c ****     if (initBME280(&dev_bme) == 1)
 143:Core/Src/main.c **** 	   { 
 144:Core/Src/main.c **** 		  GetCalibData_BME280(&dev_bme);
 145:Core/Src/main.c **** 		  GetData_BME280(&dev_bme); 
 146:Core/Src/main.c ****   	 }
ARM GAS  /tmp/ccfOSRsL.s 			page 4


 147:Core/Src/main.c ****      P.descr[0]='B';
 148:Core/Src/main.c **** 	   P.descr[1]='M';
 149:Core/Src/main.c **** 	   P.descr[2]='E';
 150:Core/Src/main.c **** 	   P.descr[3]='0';
 151:Core/Src/main.c **** 	   P.descr[4]='1';
 152:Core/Src/main.c **** 	   P.humm = dev_bme.data.humidity;
 153:Core/Src/main.c **** 	   P.press = dev_bme.data.pressure;
 154:Core/Src/main.c **** 	   P.temp = dev_bme.data.temperature;
 155:Core/Src/main.c **** 	   P.count = j;
 156:Core/Src/main.c ****      HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 157:Core/Src/main.c ****      WriteDataToSend(0xE7E7E7E7, &P, sizeof(P));
 158:Core/Src/main.c ****      StartSend();
 159:Core/Src/main.c ****      j++;
 160:Core/Src/main.c ****      HAL_Delay(10000);
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /* USER CODE END 3 */
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief System Clock Configuration
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void SystemClock_Config(void)
 171:Core/Src/main.c **** {
  27              		.loc 1 171 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 72
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 92B0     		sub	sp, sp, #72
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 80
 172:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  39              		.loc 1 172 3 view .LVU1
  40              		.loc 1 172 22 is_stmt 0 view .LVU2
  41 0004 3422     		movs	r2, #52
  42 0006 0021     		movs	r1, #0
  43 0008 05A8     		add	r0, sp, #20
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 173:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 173 3 is_stmt 1 view .LVU3
  47              		.loc 1 173 22 is_stmt 0 view .LVU4
  48 000e 1422     		movs	r2, #20
  49 0010 0021     		movs	r1, #0
  50 0012 6846     		mov	r0, sp
  51 0014 FFF7FEFF 		bl	memset
  52              	.LVL1:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the main internal regulator output voltage 
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccfOSRsL.s 			page 5


  53              		.loc 1 177 3 is_stmt 1 view .LVU5
  54 0018 1049     		ldr	r1, .L2
  55 001a 0B68     		ldr	r3, [r1]
  56 001c 104A     		ldr	r2, .L2+4
  57 001e 1A40     		ands	r2, r3
  58 0020 8023     		movs	r3, #128
  59 0022 1B01     		lsls	r3, r3, #4
  60 0024 1343     		orrs	r3, r2
  61 0026 0B60     		str	r3, [r1]
 178:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  62              		.loc 1 180 3 view .LVU6
  63              		.loc 1 180 36 is_stmt 0 view .LVU7
  64 0028 1023     		movs	r3, #16
  65 002a 0593     		str	r3, [sp, #20]
 181:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  66              		.loc 1 181 3 is_stmt 1 view .LVU8
  67              		.loc 1 181 30 is_stmt 0 view .LVU9
  68 002c 0F3B     		subs	r3, r3, #15
  69 002e 0B93     		str	r3, [sp, #44]
 182:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
  70              		.loc 1 182 3 is_stmt 1 view .LVU10
  71              		.loc 1 182 41 is_stmt 0 view .LVU11
  72 0030 0024     		movs	r4, #0
  73 0032 0C94     		str	r4, [sp, #48]
 183:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
  74              		.loc 1 183 3 is_stmt 1 view .LVU12
  75              		.loc 1 183 35 is_stmt 0 view .LVU13
  76 0034 A023     		movs	r3, #160
  77 0036 1B02     		lsls	r3, r3, #8
  78 0038 0D93     		str	r3, [sp, #52]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  79              		.loc 1 184 3 is_stmt 1 view .LVU14
  80              		.loc 1 184 34 is_stmt 0 view .LVU15
  81 003a 0E94     		str	r4, [sp, #56]
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 185 3 is_stmt 1 view .LVU16
  83              		.loc 1 185 7 is_stmt 0 view .LVU17
  84 003c 05A8     		add	r0, sp, #20
  85 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
  86              	.LVL2:
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  87              		.loc 1 191 3 is_stmt 1 view .LVU18
  88              		.loc 1 191 31 is_stmt 0 view .LVU19
  89 0042 0F23     		movs	r3, #15
  90 0044 0093     		str	r3, [sp]
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
  91              		.loc 1 193 3 is_stmt 1 view .LVU20
  92              		.loc 1 193 34 is_stmt 0 view .LVU21
  93 0046 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccfOSRsL.s 			page 6


 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  94              		.loc 1 194 3 is_stmt 1 view .LVU22
  95              		.loc 1 194 35 is_stmt 0 view .LVU23
  96 0048 0294     		str	r4, [sp, #8]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  97              		.loc 1 195 3 is_stmt 1 view .LVU24
  98              		.loc 1 195 36 is_stmt 0 view .LVU25
  99 004a 0394     		str	r4, [sp, #12]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 100              		.loc 1 196 3 is_stmt 1 view .LVU26
 101              		.loc 1 196 36 is_stmt 0 view .LVU27
 102 004c 0494     		str	r4, [sp, #16]
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 103              		.loc 1 198 3 is_stmt 1 view .LVU28
 104              		.loc 1 198 7 is_stmt 0 view .LVU29
 105 004e 0021     		movs	r1, #0
 106 0050 6846     		mov	r0, sp
 107 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 108              	.LVL3:
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** }
 109              		.loc 1 202 1 view .LVU30
 110 0056 12B0     		add	sp, sp, #72
 111              		@ sp needed
 112 0058 10BD     		pop	{r4, pc}
 113              	.L3:
 114 005a C046     		.align	2
 115              	.L2:
 116 005c 00700040 		.word	1073770496
 117 0060 FFE7FFFF 		.word	-6145
 118              		.cfi_endproc
 119              	.LFE35:
 121              		.section	.text.main,"ax",%progbits
 122              		.align	1
 123              		.global	main
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 127              		.fpu softvfp
 129              	main:
 130              	.LFB34:
  79:Core/Src/main.c ****   /* USER CODE BEGIN */
 131              		.loc 1 79 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 20
 138              		.cfi_offset 4, -20
 139              		.cfi_offset 5, -16
 140              		.cfi_offset 6, -12
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfOSRsL.s 			page 7


 143 0002 C646     		mov	lr, r8
 144 0004 00B5     		push	{lr}
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 24
 147              		.cfi_offset 8, -24
  81:Core/Src/main.c **** 
 148              		.loc 1 81 3 view .LVU32
 149              	.LVL4:
  89:Core/Src/main.c **** 
 150              		.loc 1 89 3 view .LVU33
 151 0006 FFF7FEFF 		bl	HAL_Init
 152              	.LVL5:
  96:Core/Src/main.c **** 
 153              		.loc 1 96 3 view .LVU34
 154 000a FFF7FEFF 		bl	SystemClock_Config
 155              	.LVL6:
 103:Core/Src/main.c ****   MX_SPI1_Init();
 156              		.loc 1 103 3 view .LVU35
 157 000e FFF7FEFF 		bl	MX_GPIO_Init
 158              	.LVL7:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 159              		.loc 1 104 3 view .LVU36
 160 0012 FFF7FEFF 		bl	MX_SPI1_Init
 161              	.LVL8:
 106:Core/Src/main.c **** HAL_GPIO_WritePin(CS_NRF_GPIO_Port, CS_NRF_Pin, GPIO_PIN_SET);
 162              		.loc 1 106 1 view .LVU37
 163 0016 A024     		movs	r4, #160
 164 0018 E405     		lsls	r4, r4, #23
 165 001a 0122     		movs	r2, #1
 166 001c 0821     		movs	r1, #8
 167 001e 2000     		movs	r0, r4
 168 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL9:
 107:Core/Src/main.c **** NRF905_POWER_ON();
 170              		.loc 1 107 1 view .LVU38
 171 0024 0122     		movs	r2, #1
 172 0026 1021     		movs	r1, #16
 173 0028 2000     		movs	r0, r4
 174 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL10:
 108:Core/Src/main.c **** HAL_Delay(2);
 176              		.loc 1 108 1 view .LVU39
 177 002e FFF7FEFF 		bl	NRF905_POWER_ON
 178              	.LVL11:
 109:Core/Src/main.c **** NRF905_Config_t.AUTO_RETRAN = AUTO_RET_DISABLE ;
 179              		.loc 1 109 1 view .LVU40
 180 0032 0220     		movs	r0, #2
 181 0034 FFF7FEFF 		bl	HAL_Delay
 182              	.LVL12:
 110:Core/Src/main.c **** NRF905_Config_t.CH_NO_1 = 138;
 183              		.loc 1 110 1 view .LVU41
 110:Core/Src/main.c **** NRF905_Config_t.CH_NO_1 = 138;
 184              		.loc 1 110 29 is_stmt 0 view .LVU42
 185 0038 3C48     		ldr	r0, .L7
 186 003a 4178     		ldrb	r1, [r0, #1]
 111:Core/Src/main.c **** NRF905_Config_t.CH_NO_2 = 0;
 187              		.loc 1 111 1 is_stmt 1 view .LVU43
ARM GAS  /tmp/ccfOSRsL.s 			page 8


 111:Core/Src/main.c **** NRF905_Config_t.CH_NO_2 = 0;
 188              		.loc 1 111 25 is_stmt 0 view .LVU44
 189 003c 8A23     		movs	r3, #138
 190 003e 0370     		strb	r3, [r0]
 112:Core/Src/main.c **** NRF905_Config_t.CRC_EN = CRC_CHECK_ENABLE;
 191              		.loc 1 112 1 is_stmt 1 view .LVU45
 112:Core/Src/main.c **** NRF905_Config_t.CRC_EN = CRC_CHECK_ENABLE;
 192              		.loc 1 112 25 is_stmt 0 view .LVU46
 193 0040 6A3B     		subs	r3, r3, #106
 194 0042 9943     		bics	r1, r3
 113:Core/Src/main.c **** NRF905_Config_t.CRC_MODE = CRC_MODE_16bit;
 195              		.loc 1 113 1 is_stmt 1 view .LVU47
 113:Core/Src/main.c **** NRF905_Config_t.CRC_MODE = CRC_MODE_16bit;
 196              		.loc 1 113 24 is_stmt 0 view .LVU48
 197 0044 437A     		ldrb	r3, [r0, #9]
 198 0046 4026     		movs	r6, #64
 199 0048 3343     		orrs	r3, r6
 114:Core/Src/main.c **** NRF905_Config_t.HFREQ_PLL = FREQ_433MHz ;
 200              		.loc 1 114 1 is_stmt 1 view .LVU49
 114:Core/Src/main.c **** NRF905_Config_t.HFREQ_PLL = FREQ_433MHz ;
 201              		.loc 1 114 26 is_stmt 0 view .LVU50
 202 004a DBB2     		uxtb	r3, r3
 203 004c 8022     		movs	r2, #128
 204 004e 5242     		rsbs	r2, r2, #0
 205 0050 1343     		orrs	r3, r2
 206 0052 9846     		mov	r8, r3
 115:Core/Src/main.c **** NRF905_Config_t.PA_PWR = PWR_10dBm;
 207              		.loc 1 115 1 is_stmt 1 view .LVU51
 115:Core/Src/main.c **** NRF905_Config_t.PA_PWR = PWR_10dBm;
 208              		.loc 1 115 27 is_stmt 0 view .LVU52
 209 0054 8132     		adds	r2, r2, #129
 210 0056 9143     		bics	r1, r2
 116:Core/Src/main.c **** NRF905_Config_t.RX_ADDRESS = 0xE7E7E7E7;
 211              		.loc 1 116 1 is_stmt 1 view .LVU53
 116:Core/Src/main.c **** NRF905_Config_t.RX_ADDRESS = 0xE7E7E7E7;
 212              		.loc 1 116 24 is_stmt 0 view .LVU54
 213 0058 0132     		adds	r2, r2, #1
 214 005a 9143     		bics	r1, r2
 215 005c 0C22     		movs	r2, #12
 216 005e 1143     		orrs	r1, r2
 117:Core/Src/main.c **** NRF905_Config_t.RX_AFW = TX_ADDR_WIDTH_4Byte ;
 217              		.loc 1 117 1 is_stmt 1 view .LVU55
 117:Core/Src/main.c **** NRF905_Config_t.RX_AFW = TX_ADDR_WIDTH_4Byte ;
 218              		.loc 1 117 28 is_stmt 0 view .LVU56
 219 0060 1922     		movs	r2, #25
 220 0062 5242     		rsbs	r2, r2, #0
 221 0064 4271     		strb	r2, [r0, #5]
 222 0066 8271     		strb	r2, [r0, #6]
 223 0068 C271     		strb	r2, [r0, #7]
 224 006a 0272     		strb	r2, [r0, #8]
 118:Core/Src/main.c **** NRF905_Config_t.RX_PW =  sizeof(P);
 225              		.loc 1 118 1 is_stmt 1 view .LVU57
 118:Core/Src/main.c **** NRF905_Config_t.RX_PW =  sizeof(P);
 226              		.loc 1 118 24 is_stmt 0 view .LVU58
 227 006c 8278     		ldrb	r2, [r0, #2]
 228 006e 0724     		movs	r4, #7
 229 0070 A243     		bics	r2, r4
ARM GAS  /tmp/ccfOSRsL.s 			page 9


 230 0072 0424     		movs	r4, #4
 231 0074 2243     		orrs	r2, r4
 119:Core/Src/main.c **** NRF905_Config_t.RX_RED_PWR = RED_PWR_DISABLE;
 232              		.loc 1 119 1 is_stmt 1 view .LVU59
 119:Core/Src/main.c **** NRF905_Config_t.RX_RED_PWR = RED_PWR_DISABLE;
 233              		.loc 1 119 23 is_stmt 0 view .LVU60
 234 0076 C578     		ldrb	r5, [r0, #3]
 235 0078 3F27     		movs	r7, #63
 236 007a BD43     		bics	r5, r7
 237 007c AC46     		mov	ip, r5
 238 007e 1C25     		movs	r5, #28
 239 0080 6346     		mov	r3, ip
 240 0082 2B43     		orrs	r3, r5
 241 0084 C370     		strb	r3, [r0, #3]
 120:Core/Src/main.c **** NRF905_Config_t.TX_AFW = TX_ADDR_WIDTH_4Byte;
 242              		.loc 1 120 1 is_stmt 1 view .LVU61
 120:Core/Src/main.c **** NRF905_Config_t.TX_AFW = TX_ADDR_WIDTH_4Byte;
 243              		.loc 1 120 28 is_stmt 0 view .LVU62
 244 0086 C9B2     		uxtb	r1, r1
 245 0088 1023     		movs	r3, #16
 246 008a 9943     		bics	r1, r3
 247 008c 4170     		strb	r1, [r0, #1]
 121:Core/Src/main.c **** NRF905_Config_t.TX_PW = sizeof(P);
 248              		.loc 1 121 1 is_stmt 1 view .LVU63
 121:Core/Src/main.c **** NRF905_Config_t.TX_PW = sizeof(P);
 249              		.loc 1 121 24 is_stmt 0 view .LVU64
 250 008e D2B2     		uxtb	r2, r2
 251 0090 7021     		movs	r1, #112
 252 0092 8A43     		bics	r2, r1
 253 0094 3243     		orrs	r2, r6
 254 0096 8270     		strb	r2, [r0, #2]
 122:Core/Src/main.c **** NRF905_Config_t.UP_CLK_EN = OUT_CLOCK_ENABLE;
 255              		.loc 1 122 1 is_stmt 1 view .LVU65
 122:Core/Src/main.c **** NRF905_Config_t.UP_CLK_EN = OUT_CLOCK_ENABLE;
 256              		.loc 1 122 23 is_stmt 0 view .LVU66
 257 0098 0279     		ldrb	r2, [r0, #4]
 258 009a BA43     		bics	r2, r7
 259 009c 2A43     		orrs	r2, r5
 260 009e 0271     		strb	r2, [r0, #4]
 123:Core/Src/main.c **** NRF905_Config_t.UP_CLK_FREQ =  OUT_CLOCK_FREQ_500kHz;
 261              		.loc 1 123 1 is_stmt 1 view .LVU67
 123:Core/Src/main.c **** NRF905_Config_t.UP_CLK_FREQ =  OUT_CLOCK_FREQ_500kHz;
 262              		.loc 1 123 27 is_stmt 0 view .LVU68
 263 00a0 4346     		mov	r3, r8
 264 00a2 DBB2     		uxtb	r3, r3
 265 00a4 2343     		orrs	r3, r4
 124:Core/Src/main.c **** NRF905_Config_t.XOF = CRYSTAL_OSC_FREQ_16MHz;
 266              		.loc 1 124 1 is_stmt 1 view .LVU69
 124:Core/Src/main.c **** NRF905_Config_t.XOF = CRYSTAL_OSC_FREQ_16MHz;
 267              		.loc 1 124 29 is_stmt 0 view .LVU70
 268 00a6 DBB2     		uxtb	r3, r3
 269 00a8 0322     		movs	r2, #3
 270 00aa 1343     		orrs	r3, r2
 125:Core/Src/main.c **** 
 271              		.loc 1 125 1 is_stmt 1 view .LVU71
 125:Core/Src/main.c **** 
 272              		.loc 1 125 21 is_stmt 0 view .LVU72
ARM GAS  /tmp/ccfOSRsL.s 			page 10


 273 00ac DBB2     		uxtb	r3, r3
 274 00ae 3822     		movs	r2, #56
 275 00b0 9343     		bics	r3, r2
 276 00b2 1822     		movs	r2, #24
 277 00b4 1343     		orrs	r3, r2
 278 00b6 4372     		strb	r3, [r0, #9]
 127:Core/Src/main.c ****   {
 279              		.loc 1 127 1 is_stmt 1 view .LVU73
 127:Core/Src/main.c ****   {
 280              		.loc 1 127 5 is_stmt 0 view .LVU74
 281 00b8 FFF7FEFF 		bl	NRF905_INIT
 282              	.LVL13:
  81:Core/Src/main.c **** 
 283              		.loc 1 81 8 view .LVU75
 284 00bc 0025     		movs	r5, #0
 285 00be 22E0     		b	.L6
 286              	.LVL14:
 287              	.L5:
 147:Core/Src/main.c **** 	   P.descr[1]='M';
 288              		.loc 1 147 6 is_stmt 1 view .LVU76
 147:Core/Src/main.c **** 	   P.descr[1]='M';
 289              		.loc 1 147 16 is_stmt 0 view .LVU77
 290 00c0 1B4C     		ldr	r4, .L7+4
 291 00c2 4223     		movs	r3, #66
 292 00c4 2370     		strb	r3, [r4]
 148:Core/Src/main.c **** 	   P.descr[2]='E';
 293              		.loc 1 148 5 is_stmt 1 view .LVU78
 148:Core/Src/main.c **** 	   P.descr[2]='E';
 294              		.loc 1 148 15 is_stmt 0 view .LVU79
 295 00c6 0B33     		adds	r3, r3, #11
 296 00c8 6370     		strb	r3, [r4, #1]
 149:Core/Src/main.c **** 	   P.descr[3]='0';
 297              		.loc 1 149 5 is_stmt 1 view .LVU80
 149:Core/Src/main.c **** 	   P.descr[3]='0';
 298              		.loc 1 149 15 is_stmt 0 view .LVU81
 299 00ca 083B     		subs	r3, r3, #8
 300 00cc A370     		strb	r3, [r4, #2]
 150:Core/Src/main.c **** 	   P.descr[4]='1';
 301              		.loc 1 150 5 is_stmt 1 view .LVU82
 150:Core/Src/main.c **** 	   P.descr[4]='1';
 302              		.loc 1 150 15 is_stmt 0 view .LVU83
 303 00ce 153B     		subs	r3, r3, #21
 304 00d0 E370     		strb	r3, [r4, #3]
 151:Core/Src/main.c **** 	   P.humm = dev_bme.data.humidity;
 305              		.loc 1 151 5 is_stmt 1 view .LVU84
 151:Core/Src/main.c **** 	   P.humm = dev_bme.data.humidity;
 306              		.loc 1 151 15 is_stmt 0 view .LVU85
 307 00d2 0133     		adds	r3, r3, #1
 308 00d4 2371     		strb	r3, [r4, #4]
 152:Core/Src/main.c **** 	   P.press = dev_bme.data.pressure;
 309              		.loc 1 152 5 is_stmt 1 view .LVU86
 152:Core/Src/main.c **** 	   P.press = dev_bme.data.pressure;
 310              		.loc 1 152 26 is_stmt 0 view .LVU87
 311 00d6 174B     		ldr	r3, .L7+8
 152:Core/Src/main.c **** 	   P.press = dev_bme.data.pressure;
 312              		.loc 1 152 12 view .LVU88
 313 00d8 DA6E     		ldr	r2, [r3, #108]
ARM GAS  /tmp/ccfOSRsL.s 			page 11


 314 00da A260     		str	r2, [r4, #8]
 153:Core/Src/main.c **** 	   P.temp = dev_bme.data.temperature;
 315              		.loc 1 153 5 is_stmt 1 view .LVU89
 153:Core/Src/main.c **** 	   P.temp = dev_bme.data.temperature;
 316              		.loc 1 153 13 is_stmt 0 view .LVU90
 317 00dc 5A6E     		ldr	r2, [r3, #100]
 318 00de 2261     		str	r2, [r4, #16]
 154:Core/Src/main.c **** 	   P.count = j;
 319              		.loc 1 154 5 is_stmt 1 view .LVU91
 154:Core/Src/main.c **** 	   P.count = j;
 320              		.loc 1 154 26 is_stmt 0 view .LVU92
 321 00e0 9B6E     		ldr	r3, [r3, #104]
 322 00e2 E360     		str	r3, [r4, #12]
 155:Core/Src/main.c ****      HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 323              		.loc 1 155 5 is_stmt 1 view .LVU93
 155:Core/Src/main.c ****      HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 324              		.loc 1 155 13 is_stmt 0 view .LVU94
 325 00e4 6561     		str	r5, [r4, #20]
 156:Core/Src/main.c ****      WriteDataToSend(0xE7E7E7E7, &P, sizeof(P));
 326              		.loc 1 156 6 is_stmt 1 view .LVU95
 327 00e6 0022     		movs	r2, #0
 328 00e8 0821     		movs	r1, #8
 329 00ea 1348     		ldr	r0, .L7+12
 330 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL15:
 157:Core/Src/main.c ****      StartSend();
 332              		.loc 1 157 6 view .LVU96
 333 00f0 1C22     		movs	r2, #28
 334 00f2 2100     		movs	r1, r4
 335 00f4 1148     		ldr	r0, .L7+16
 336 00f6 FFF7FEFF 		bl	WriteDataToSend
 337              	.LVL16:
 158:Core/Src/main.c ****      j++;
 338              		.loc 1 158 6 view .LVU97
 339 00fa FFF7FEFF 		bl	StartSend
 340              	.LVL17:
 159:Core/Src/main.c ****      HAL_Delay(10000);
 341              		.loc 1 159 6 view .LVU98
 159:Core/Src/main.c ****      HAL_Delay(10000);
 342              		.loc 1 159 7 is_stmt 0 view .LVU99
 343 00fe 0135     		adds	r5, r5, #1
 344              	.LVL18:
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 345              		.loc 1 160 6 is_stmt 1 view .LVU100
 346 0100 0F48     		ldr	r0, .L7+20
 347 0102 FFF7FEFF 		bl	HAL_Delay
 348              	.LVL19:
 137:Core/Src/main.c ****   {
 349              		.loc 1 137 9 view .LVU101
 350              	.L6:
 130:Core/Src/main.c ****   /* USER CODE END 2 */
 351              		.loc 1 130 3 view .LVU102
 137:Core/Src/main.c ****   {
 352              		.loc 1 137 3 view .LVU103
 141:Core/Src/main.c ****     if (initBME280(&dev_bme) == 1)
 353              		.loc 1 141 5 view .LVU104
 354 0106 0122     		movs	r2, #1
ARM GAS  /tmp/ccfOSRsL.s 			page 12


 355 0108 0821     		movs	r1, #8
 356 010a 0B48     		ldr	r0, .L7+12
 357 010c FFF7FEFF 		bl	HAL_GPIO_WritePin
 358              	.LVL20:
 142:Core/Src/main.c **** 	   { 
 359              		.loc 1 142 5 view .LVU105
 142:Core/Src/main.c **** 	   { 
 360              		.loc 1 142 9 is_stmt 0 view .LVU106
 361 0110 0848     		ldr	r0, .L7+8
 362 0112 FFF7FEFF 		bl	initBME280
 363              	.LVL21:
 142:Core/Src/main.c **** 	   { 
 364              		.loc 1 142 8 view .LVU107
 365 0116 0128     		cmp	r0, #1
 366 0118 D2D1     		bne	.L5
 144:Core/Src/main.c **** 		  GetData_BME280(&dev_bme); 
 367              		.loc 1 144 5 is_stmt 1 view .LVU108
 368 011a 064C     		ldr	r4, .L7+8
 369 011c 2000     		movs	r0, r4
 370 011e FFF7FEFF 		bl	GetCalibData_BME280
 371              	.LVL22:
 145:Core/Src/main.c ****   	 }
 372              		.loc 1 145 5 view .LVU109
 373 0122 2000     		movs	r0, r4
 374 0124 FFF7FEFF 		bl	GetData_BME280
 375              	.LVL23:
 376 0128 CAE7     		b	.L5
 377              	.L8:
 378 012a C046     		.align	2
 379              	.L7:
 380 012c 00000000 		.word	NRF905_Config_t
 381 0130 00000000 		.word	P
 382 0134 00000000 		.word	.LANCHOR0
 383 0138 00040050 		.word	1342178304
 384 013c E7E7E7E7 		.word	-404232217
 385 0140 10270000 		.word	10000
 386              		.cfi_endproc
 387              	.LFE34:
 389              		.section	.text.SPI_GET_DAT,"ax",%progbits
 390              		.align	1
 391              		.global	SPI_GET_DAT
 392              		.syntax unified
 393              		.code	16
 394              		.thumb_func
 395              		.fpu softvfp
 397              	SPI_GET_DAT:
 398              	.LVL24:
 399              	.LFB36:
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 205:Core/Src/main.c **** void SPI_GET_DAT( uint8_t *ADDR, uint8_t *data)
 206:Core/Src/main.c **** {
 400              		.loc 1 206 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		.loc 1 206 1 is_stmt 0 view .LVU111
ARM GAS  /tmp/ccfOSRsL.s 			page 13


 405 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 406              	.LCFI4:
 407              		.cfi_def_cfa_offset 24
 408              		.cfi_offset 3, -24
 409              		.cfi_offset 4, -20
 410              		.cfi_offset 5, -16
 411              		.cfi_offset 6, -12
 412              		.cfi_offset 7, -8
 413              		.cfi_offset 14, -4
 414 0002 0500     		movs	r5, r0
 415 0004 0C00     		movs	r4, r1
 207:Core/Src/main.c **** 	HAL_GPIO_WritePin(CS_BME_GPIO_Port, CS_BME_Pin, GPIO_PIN_RESET);
 416              		.loc 1 207 2 is_stmt 1 view .LVU112
 417 0006 A026     		movs	r6, #160
 418 0008 F605     		lsls	r6, r6, #23
 419 000a 0022     		movs	r2, #0
 420 000c 0821     		movs	r1, #8
 421              	.LVL25:
 422              		.loc 1 207 2 is_stmt 0 view .LVU113
 423 000e 3000     		movs	r0, r6
 424              	.LVL26:
 425              		.loc 1 207 2 view .LVU114
 426 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 427              	.LVL27:
 208:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi1, ADDR, 1, 10);
 428              		.loc 1 208 2 is_stmt 1 view .LVU115
 429 0014 094F     		ldr	r7, .L10
 430 0016 0A23     		movs	r3, #10
 431 0018 0122     		movs	r2, #1
 432 001a 2900     		movs	r1, r5
 433 001c 3800     		movs	r0, r7
 434 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 435              	.LVL28:
 209:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi1, data, 1, 10);
 436              		.loc 1 209 2 view .LVU116
 437 0022 0A23     		movs	r3, #10
 438 0024 0122     		movs	r2, #1
 439 0026 2100     		movs	r1, r4
 440 0028 3800     		movs	r0, r7
 441 002a FFF7FEFF 		bl	HAL_SPI_Receive
 442              	.LVL29:
 210:Core/Src/main.c **** 	HAL_GPIO_WritePin(CS_BME_GPIO_Port, CS_BME_Pin, GPIO_PIN_SET);
 443              		.loc 1 210 2 view .LVU117
 444 002e 0122     		movs	r2, #1
 445 0030 0821     		movs	r1, #8
 446 0032 3000     		movs	r0, r6
 447 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 448              	.LVL30:
 211:Core/Src/main.c **** }
 449              		.loc 1 211 1 is_stmt 0 view .LVU118
 450              		@ sp needed
 451              	.LVL31:
 452              	.LVL32:
 453              		.loc 1 211 1 view .LVU119
 454 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 455              	.L11:
 456 003a C046     		.align	2
ARM GAS  /tmp/ccfOSRsL.s 			page 14


 457              	.L10:
 458 003c 00000000 		.word	hspi1
 459              		.cfi_endproc
 460              	.LFE36:
 462              		.section	.text.SPI_SET_DAT,"ax",%progbits
 463              		.align	1
 464              		.global	SPI_SET_DAT
 465              		.syntax unified
 466              		.code	16
 467              		.thumb_func
 468              		.fpu softvfp
 470              	SPI_SET_DAT:
 471              	.LVL33:
 472              	.LFB37:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** void SPI_SET_DAT( uint8_t *ADDR, uint8_t *data)
 214:Core/Src/main.c **** {
 473              		.loc 1 214 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		.loc 1 214 1 is_stmt 0 view .LVU121
 478 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 479              	.LCFI5:
 480              		.cfi_def_cfa_offset 20
 481              		.cfi_offset 4, -20
 482              		.cfi_offset 5, -16
 483              		.cfi_offset 6, -12
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 83B0     		sub	sp, sp, #12
 487              	.LCFI6:
 488              		.cfi_def_cfa_offset 32
 489 0004 0C00     		movs	r4, r1
 215:Core/Src/main.c **** 	uint8_t addr;
 490              		.loc 1 215 2 is_stmt 1 view .LVU122
 216:Core/Src/main.c **** 	addr = *(uint8_t *)ADDR;
 491              		.loc 1 216 2 view .LVU123
 492              		.loc 1 216 9 is_stmt 0 view .LVU124
 493 0006 0278     		ldrb	r2, [r0]
 217:Core/Src/main.c **** 	addr = addr & 0x7f;
 494              		.loc 1 217 2 is_stmt 1 view .LVU125
 495              		.loc 1 217 14 is_stmt 0 view .LVU126
 496 0008 7F23     		movs	r3, #127
 497 000a 1340     		ands	r3, r2
 498              		.loc 1 217 7 view .LVU127
 499 000c 6A46     		mov	r2, sp
 500 000e D71D     		adds	r7, r2, #7
 501 0010 D371     		strb	r3, [r2, #7]
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** 	HAL_GPIO_WritePin(CS_BME_GPIO_Port, CS_BME_Pin, GPIO_PIN_RESET);
 502              		.loc 1 219 2 is_stmt 1 view .LVU128
 503 0012 A025     		movs	r5, #160
 504 0014 ED05     		lsls	r5, r5, #23
 505 0016 0022     		movs	r2, #0
 506 0018 0821     		movs	r1, #8
 507              	.LVL34:
ARM GAS  /tmp/ccfOSRsL.s 			page 15


 508              		.loc 1 219 2 is_stmt 0 view .LVU129
 509 001a 2800     		movs	r0, r5
 510              	.LVL35:
 511              		.loc 1 219 2 view .LVU130
 512 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL36:
 220:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi1, &addr, 1, 10);
 514              		.loc 1 220 2 is_stmt 1 view .LVU131
 515 0020 094E     		ldr	r6, .L13
 516 0022 0A23     		movs	r3, #10
 517 0024 0122     		movs	r2, #1
 518 0026 3900     		movs	r1, r7
 519 0028 3000     		movs	r0, r6
 520 002a FFF7FEFF 		bl	HAL_SPI_Transmit
 521              	.LVL37:
 221:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi1, data, 1, 10);
 522              		.loc 1 221 2 view .LVU132
 523 002e 0A23     		movs	r3, #10
 524 0030 0122     		movs	r2, #1
 525 0032 2100     		movs	r1, r4
 526 0034 3000     		movs	r0, r6
 527 0036 FFF7FEFF 		bl	HAL_SPI_Transmit
 528              	.LVL38:
 222:Core/Src/main.c **** 	HAL_GPIO_WritePin(CS_BME_GPIO_Port, CS_BME_Pin, GPIO_PIN_SET);
 529              		.loc 1 222 2 view .LVU133
 530 003a 0122     		movs	r2, #1
 531 003c 0821     		movs	r1, #8
 532 003e 2800     		movs	r0, r5
 533 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 534              	.LVL39:
 223:Core/Src/main.c **** }
 535              		.loc 1 223 1 is_stmt 0 view .LVU134
 536 0044 03B0     		add	sp, sp, #12
 537              		@ sp needed
 538              	.LVL40:
 539              		.loc 1 223 1 view .LVU135
 540 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 541              	.L14:
 542              		.align	2
 543              	.L13:
 544 0048 00000000 		.word	hspi1
 545              		.cfi_endproc
 546              	.LFE37:
 548              		.section	.text.Error_Handler,"ax",%progbits
 549              		.align	1
 550              		.global	Error_Handler
 551              		.syntax unified
 552              		.code	16
 553              		.thumb_func
 554              		.fpu softvfp
 556              	Error_Handler:
 557              	.LFB38:
 224:Core/Src/main.c **** /* USER CODE END 4 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 228:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccfOSRsL.s 			page 16


 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** void Error_Handler(void)
 231:Core/Src/main.c **** {
 558              		.loc 1 231 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 232:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 233:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 236:Core/Src/main.c **** }
 563              		.loc 1 236 1 view .LVU137
 564              		@ sp needed
 565 0000 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE38:
 569              		.global	dev_bme
 570              		.comm	P,28,4
 571              		.comm	NRF905_Config_t,10,4
 572              		.section	.bss.dev_bme,"aw",%nobits
 573              		.align	2
 574              		.set	.LANCHOR0,. + 0
 577              	dev_bme:
 578 0000 00000000 		.space	112
 578      00000000 
 578      00000000 
 578      00000000 
 578      00000000 
 579              		.text
 580              	.Letext0:
 581              		.file 2 "/usr/local/arm-none-eabi/include/machine/_default_types.h"
 582              		.file 3 "/usr/local/arm-none-eabi/include/sys/_stdint.h"
 583              		.file 4 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/CMSIS/Device/ST/STM32L0xx
 584              		.file 5 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/CMSIS/Device/ST/STM32L0xx
 585              		.file 6 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 586              		.file 7 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 587              		.file 8 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 588              		.file 9 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc/
 589              		.file 10 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc
 590              		.file 11 "/home/maxx/STM32Cube/Repository/STM32Cube_FW_L0_V1.11.2/Drivers/STM32L0xx_HAL_Driver/Inc
 591              		.file 12 "Core/Inc/main.h"
 592              		.file 13 "Core/Inc/spi.h"
 593              		.file 14 "Core/Inc/bme280_defs.h"
 594              		.file 15 "Core/Inc/nrf905.h"
 595              		.file 16 "Core/Inc/gpio.h"
 596              		.file 17 "Core/Inc/bme280.h"
 597              		.file 18 "<built-in>"
ARM GAS  /tmp/ccfOSRsL.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccfOSRsL.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccfOSRsL.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccfOSRsL.s:116    .text.SystemClock_Config:000000000000005c $d
     /tmp/ccfOSRsL.s:122    .text.main:0000000000000000 $t
     /tmp/ccfOSRsL.s:129    .text.main:0000000000000000 main
     /tmp/ccfOSRsL.s:380    .text.main:000000000000012c $d
                            *COM*:000000000000000a NRF905_Config_t
                            *COM*:000000000000001c P
     /tmp/ccfOSRsL.s:390    .text.SPI_GET_DAT:0000000000000000 $t
     /tmp/ccfOSRsL.s:397    .text.SPI_GET_DAT:0000000000000000 SPI_GET_DAT
     /tmp/ccfOSRsL.s:458    .text.SPI_GET_DAT:000000000000003c $d
     /tmp/ccfOSRsL.s:463    .text.SPI_SET_DAT:0000000000000000 $t
     /tmp/ccfOSRsL.s:470    .text.SPI_SET_DAT:0000000000000000 SPI_SET_DAT
     /tmp/ccfOSRsL.s:544    .text.SPI_SET_DAT:0000000000000048 $d
     /tmp/ccfOSRsL.s:549    .text.Error_Handler:0000000000000000 $t
     /tmp/ccfOSRsL.s:556    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccfOSRsL.s:577    .bss.dev_bme:0000000000000000 dev_bme
     /tmp/ccfOSRsL.s:573    .bss.dev_bme:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
HAL_GPIO_WritePin
NRF905_POWER_ON
HAL_Delay
NRF905_INIT
WriteDataToSend
StartSend
initBME280
GetCalibData_BME280
GetData_BME280
HAL_SPI_Transmit
HAL_SPI_Receive
hspi1
