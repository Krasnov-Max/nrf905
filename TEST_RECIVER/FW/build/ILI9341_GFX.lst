ARM GAS  /tmp/ccfh6D8p.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"ILI9341_GFX.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.ILI9341_Draw_Hollow_Circle,"ax",%progbits
  16              		.align	1
  17              		.global	ILI9341_Draw_Hollow_Circle
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	ILI9341_Draw_Hollow_Circle:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Core/Src/LED/ILI9341_GFX.c"
   1:Core/Src/LED/ILI9341_GFX.c **** //	MIT License
   2:Core/Src/LED/ILI9341_GFX.c **** //
   3:Core/Src/LED/ILI9341_GFX.c **** //	Copyright (c) 2017 Matej Artnak
   4:Core/Src/LED/ILI9341_GFX.c **** //
   5:Core/Src/LED/ILI9341_GFX.c **** //	Permission is hereby granted, free of charge, to any person obtaining a copy
   6:Core/Src/LED/ILI9341_GFX.c **** //	of this software and associated documentation files (the "Software"), to deal
   7:Core/Src/LED/ILI9341_GFX.c **** //	in the Software without restriction, including without limitation the rights
   8:Core/Src/LED/ILI9341_GFX.c **** //	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:Core/Src/LED/ILI9341_GFX.c **** //	copies of the Software, and to permit persons to whom the Software is
  10:Core/Src/LED/ILI9341_GFX.c **** //	furnished to do so, subject to the following conditions:
  11:Core/Src/LED/ILI9341_GFX.c **** //
  12:Core/Src/LED/ILI9341_GFX.c **** //	The above copyright notice and this permission notice shall be included in all
  13:Core/Src/LED/ILI9341_GFX.c **** //	copies or substantial portions of the Software.
  14:Core/Src/LED/ILI9341_GFX.c **** //
  15:Core/Src/LED/ILI9341_GFX.c **** //	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Core/Src/LED/ILI9341_GFX.c **** //	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:Core/Src/LED/ILI9341_GFX.c **** //	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:Core/Src/LED/ILI9341_GFX.c **** //	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:Core/Src/LED/ILI9341_GFX.c **** //	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:Core/Src/LED/ILI9341_GFX.c **** //	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  21:Core/Src/LED/ILI9341_GFX.c **** //	SOFTWARE.
  22:Core/Src/LED/ILI9341_GFX.c **** //
  23:Core/Src/LED/ILI9341_GFX.c **** //
  24:Core/Src/LED/ILI9341_GFX.c **** //
  25:Core/Src/LED/ILI9341_GFX.c **** //-----------------------------------
  26:Core/Src/LED/ILI9341_GFX.c **** //	ILI9341 GFX library for STM32
  27:Core/Src/LED/ILI9341_GFX.c **** //-----------------------------------
  28:Core/Src/LED/ILI9341_GFX.c **** //
  29:Core/Src/LED/ILI9341_GFX.c **** //	Very simple GFX library built upon ILI9342_STM32_Driver library.
  30:Core/Src/LED/ILI9341_GFX.c **** //	Adds basic shapes, image and font drawing capabilities to ILI9341
  31:Core/Src/LED/ILI9341_GFX.c **** //
ARM GAS  /tmp/ccfh6D8p.s 			page 2


  32:Core/Src/LED/ILI9341_GFX.c **** //	Library is written for STM32 HAL library and supports STM32CUBEMX. To use the library with Cube 
  33:Core/Src/LED/ILI9341_GFX.c **** //	you need to tick the box that generates peripheral initialization code in their own respective .
  34:Core/Src/LED/ILI9341_GFX.c **** //
  35:Core/Src/LED/ILI9341_GFX.c **** //
  36:Core/Src/LED/ILI9341_GFX.c **** //-----------------------------------
  37:Core/Src/LED/ILI9341_GFX.c **** //	How to use this library
  38:Core/Src/LED/ILI9341_GFX.c **** //-----------------------------------
  39:Core/Src/LED/ILI9341_GFX.c **** //
  40:Core/Src/LED/ILI9341_GFX.c **** //	-If using MCUs other than STM32F7 you will have to change the #include "stm32f7xx_hal.h" in the 
  41:Core/Src/LED/ILI9341_GFX.c **** //
  42:Core/Src/LED/ILI9341_GFX.c **** //	If using "ILI9341_STM32_Driver" then all other prequisites to use the library have allready been
  43:Core/Src/LED/ILI9341_GFX.c **** //	Simply include the library and it is ready to be used
  44:Core/Src/LED/ILI9341_GFX.c **** //
  45:Core/Src/LED/ILI9341_GFX.c **** //-----------------------------------
  46:Core/Src/LED/ILI9341_GFX.c **** 
  47:Core/Src/LED/ILI9341_GFX.c **** 
  48:Core/Src/LED/ILI9341_GFX.c **** #include "ILI9341_STM32_Driver.h"
  49:Core/Src/LED/ILI9341_GFX.c **** #include "ILI9341_GFX.h"
  50:Core/Src/LED/ILI9341_GFX.c **** #include "5x5_font.h"
  51:Core/Src/LED/ILI9341_GFX.c **** #include "spi.h"
  52:Core/Src/LED/ILI9341_GFX.c **** 
  53:Core/Src/LED/ILI9341_GFX.c **** /*Draw hollow circle at X,Y location with specified radius and colour. X and Y represent circles ce
  54:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Hollow_Circle(uint16_t X, uint16_t Y, uint16_t Radius, uint16_t Colour)
  55:Core/Src/LED/ILI9341_GFX.c **** {
  28              		.loc 1 55 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 55 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 DE46     		mov	lr, fp
  42 0004 5746     		mov	r7, r10
  43 0006 4E46     		mov	r6, r9
  44 0008 4546     		mov	r5, r8
  45 000a E0B5     		push	{r5, r6, r7, lr}
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 36
  48              		.cfi_offset 8, -36
  49              		.cfi_offset 9, -32
  50              		.cfi_offset 10, -28
  51              		.cfi_offset 11, -24
  52 000c 89B0     		sub	sp, sp, #36
  53              	.LCFI2:
  54              		.cfi_def_cfa_offset 72
  55 000e 8346     		mov	fp, r0
  56 0010 8946     		mov	r9, r1
  57 0012 1E00     		movs	r6, r3
  56:Core/Src/LED/ILI9341_GFX.c **** 	int x = Radius-1;
  58              		.loc 1 56 2 is_stmt 1 view .LVU2
  59              		.loc 1 56 16 is_stmt 0 view .LVU3
ARM GAS  /tmp/ccfh6D8p.s 			page 3


  60 0014 0792     		str	r2, [sp, #28]
  61              		.loc 1 56 6 view .LVU4
  62 0016 531E     		subs	r3, r2, #1
  63              	.LVL1:
  64              		.loc 1 56 6 view .LVU5
  65 0018 0093     		str	r3, [sp]
  66              	.LVL2:
  57:Core/Src/LED/ILI9341_GFX.c ****     int y = 0;
  67              		.loc 1 57 5 is_stmt 1 view .LVU6
  58:Core/Src/LED/ILI9341_GFX.c ****     int dx = 1;
  68              		.loc 1 58 5 view .LVU7
  59:Core/Src/LED/ILI9341_GFX.c ****     int dy = 1;
  69              		.loc 1 59 5 view .LVU8
  60:Core/Src/LED/ILI9341_GFX.c ****     int err = dx - (Radius << 1);
  70              		.loc 1 60 5 view .LVU9
  71              		.loc 1 60 28 is_stmt 0 view .LVU10
  72 001a 5200     		lsls	r2, r2, #1
  73              	.LVL3:
  74              		.loc 1 60 9 view .LVU11
  75 001c 0123     		movs	r3, #1
  76              	.LVL4:
  77              		.loc 1 60 9 view .LVU12
  78 001e 9B1A     		subs	r3, r3, r2
  79 0020 9846     		mov	r8, r3
  80              	.LVL5:
  61:Core/Src/LED/ILI9341_GFX.c **** 
  62:Core/Src/LED/ILI9341_GFX.c ****     while (x >= y)
  81              		.loc 1 62 5 is_stmt 1 view .LVU13
  59:Core/Src/LED/ILI9341_GFX.c ****     int err = dx - (Radius << 1);
  82              		.loc 1 59 9 is_stmt 0 view .LVU14
  83 0022 0123     		movs	r3, #1
  84              	.LVL6:
  59:Core/Src/LED/ILI9341_GFX.c ****     int err = dx - (Radius << 1);
  85              		.loc 1 59 9 view .LVU15
  86 0024 0693     		str	r3, [sp, #24]
  58:Core/Src/LED/ILI9341_GFX.c ****     int dy = 1;
  87              		.loc 1 58 9 view .LVU16
  88 0026 0593     		str	r3, [sp, #20]
  57:Core/Src/LED/ILI9341_GFX.c ****     int dx = 1;
  89              		.loc 1 57 9 view .LVU17
  90 0028 0023     		movs	r3, #0
  91 002a 0193     		str	r3, [sp, #4]
  92              	.LVL7:
  93              	.L2:
  94              		.loc 1 62 11 is_stmt 1 view .LVU18
  95 002c 009B     		ldr	r3, [sp]
  96 002e 019A     		ldr	r2, [sp, #4]
  97 0030 9342     		cmp	r3, r2
  98 0032 63DB     		blt	.L6
  63:Core/Src/LED/ILI9341_GFX.c ****     {
  64:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + x, Y + y, Colour);
  99              		.loc 1 64 9 view .LVU19
 100 0034 6B46     		mov	r3, sp
 101 0036 1D88     		ldrh	r5, [r3]
 102 0038 5B46     		mov	r3, fp
 103 003a EB18     		adds	r3, r5, r3
 104 003c 98B2     		uxth	r0, r3
ARM GAS  /tmp/ccfh6D8p.s 			page 4


 105 003e 6B46     		mov	r3, sp
 106 0040 9C88     		ldrh	r4, [r3, #4]
 107 0042 4B46     		mov	r3, r9
 108 0044 E318     		adds	r3, r4, r3
 109 0046 9BB2     		uxth	r3, r3
 110 0048 9A46     		mov	r10, r3
 111 004a 3200     		movs	r2, r6
 112 004c 1900     		movs	r1, r3
 113 004e 0290     		str	r0, [sp, #8]
 114 0050 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 115              	.LVL8:
  65:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y + x, Colour);
 116              		.loc 1 65 9 view .LVU20
 117 0054 5B46     		mov	r3, fp
 118 0056 E318     		adds	r3, r4, r3
 119 0058 9BB2     		uxth	r3, r3
 120 005a 4A46     		mov	r2, r9
 121 005c AF18     		adds	r7, r5, r2
 122 005e BFB2     		uxth	r7, r7
 123 0060 3200     		movs	r2, r6
 124 0062 3900     		movs	r1, r7
 125 0064 0393     		str	r3, [sp, #12]
 126 0066 1800     		movs	r0, r3
 127 0068 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 128              	.LVL9:
  66:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y + x, Colour);
 129              		.loc 1 66 9 view .LVU21
 130 006c 5A46     		mov	r2, fp
 131 006e 131B     		subs	r3, r2, r4
 132 0070 9AB2     		uxth	r2, r3
 133 0072 1300     		movs	r3, r2
 134 0074 3200     		movs	r2, r6
 135 0076 3900     		movs	r1, r7
 136 0078 0493     		str	r3, [sp, #16]
 137 007a 1800     		movs	r0, r3
 138 007c FFF7FEFF 		bl	ILI9341_Draw_Pixel
 139              	.LVL10:
  67:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y + y, Colour);
 140              		.loc 1 67 9 view .LVU22
 141 0080 5A46     		mov	r2, fp
 142 0082 571B     		subs	r7, r2, r5
 143 0084 BFB2     		uxth	r7, r7
 144 0086 3200     		movs	r2, r6
 145 0088 5146     		mov	r1, r10
 146 008a 3800     		movs	r0, r7
 147 008c FFF7FEFF 		bl	ILI9341_Draw_Pixel
 148              	.LVL11:
  68:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y - y, Colour);
 149              		.loc 1 68 9 view .LVU23
 150 0090 4A46     		mov	r2, r9
 151 0092 141B     		subs	r4, r2, r4
 152 0094 A4B2     		uxth	r4, r4
 153 0096 3200     		movs	r2, r6
 154 0098 2100     		movs	r1, r4
 155 009a 3800     		movs	r0, r7
 156 009c FFF7FEFF 		bl	ILI9341_Draw_Pixel
 157              	.LVL12:
ARM GAS  /tmp/ccfh6D8p.s 			page 5


  69:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y - x, Colour);
 158              		.loc 1 69 9 view .LVU24
 159 00a0 4A46     		mov	r2, r9
 160 00a2 571B     		subs	r7, r2, r5
 161 00a4 BFB2     		uxth	r7, r7
 162 00a6 3200     		movs	r2, r6
 163 00a8 3900     		movs	r1, r7
 164 00aa 0498     		ldr	r0, [sp, #16]
 165 00ac FFF7FEFF 		bl	ILI9341_Draw_Pixel
 166              	.LVL13:
  70:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y - x, Colour);
 167              		.loc 1 70 9 view .LVU25
 168 00b0 3200     		movs	r2, r6
 169 00b2 3900     		movs	r1, r7
 170 00b4 0398     		ldr	r0, [sp, #12]
 171 00b6 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 172              	.LVL14:
  71:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + x, Y - y, Colour);
 173              		.loc 1 71 9 view .LVU26
 174 00ba 3200     		movs	r2, r6
 175 00bc 2100     		movs	r1, r4
 176 00be 0298     		ldr	r0, [sp, #8]
 177 00c0 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 178              	.LVL15:
  72:Core/Src/LED/ILI9341_GFX.c **** 
  73:Core/Src/LED/ILI9341_GFX.c ****         if (err <= 0)
 179              		.loc 1 73 9 view .LVU27
 180              		.loc 1 73 12 is_stmt 0 view .LVU28
 181 00c4 4346     		mov	r3, r8
 182 00c6 002B     		cmp	r3, #0
 183 00c8 0FDD     		ble	.L7
 184              	.L3:
  74:Core/Src/LED/ILI9341_GFX.c ****         {
  75:Core/Src/LED/ILI9341_GFX.c ****             y++;
  76:Core/Src/LED/ILI9341_GFX.c ****             err += dy;
  77:Core/Src/LED/ILI9341_GFX.c ****             dy += 2;
  78:Core/Src/LED/ILI9341_GFX.c ****         }
  79:Core/Src/LED/ILI9341_GFX.c ****         if (err > 0)
 185              		.loc 1 79 9 is_stmt 1 view .LVU29
 186              		.loc 1 79 12 is_stmt 0 view .LVU30
 187 00ca 4346     		mov	r3, r8
 188 00cc 002B     		cmp	r3, #0
 189 00ce ADDD     		ble	.L2
 190              	.LVL16:
  80:Core/Src/LED/ILI9341_GFX.c ****         {
  81:Core/Src/LED/ILI9341_GFX.c ****             x--;
 191              		.loc 1 81 13 is_stmt 1 view .LVU31
 192              		.loc 1 81 14 is_stmt 0 view .LVU32
 193 00d0 009B     		ldr	r3, [sp]
 194              	.LVL17:
 195              		.loc 1 81 14 view .LVU33
 196 00d2 013B     		subs	r3, r3, #1
 197 00d4 0093     		str	r3, [sp]
 198              	.LVL18:
  82:Core/Src/LED/ILI9341_GFX.c ****             dx += 2;
 199              		.loc 1 82 13 is_stmt 1 view .LVU34
 200              		.loc 1 82 16 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccfh6D8p.s 			page 6


 201 00d6 059A     		ldr	r2, [sp, #20]
 202 00d8 0232     		adds	r2, r2, #2
 203 00da 0592     		str	r2, [sp, #20]
 204              	.LVL19:
  83:Core/Src/LED/ILI9341_GFX.c ****             err += (-Radius << 1) + dx;
 205              		.loc 1 83 13 is_stmt 1 view .LVU36
 206              		.loc 1 83 21 is_stmt 0 view .LVU37
 207 00dc 079B     		ldr	r3, [sp, #28]
 208              	.LVL20:
 209              		.loc 1 83 21 view .LVU38
 210 00de 5B42     		rsbs	r3, r3, #0
 211              		.loc 1 83 29 view .LVU39
 212 00e0 5B00     		lsls	r3, r3, #1
 213              		.loc 1 83 35 view .LVU40
 214 00e2 9446     		mov	ip, r2
 215 00e4 6344     		add	r3, r3, ip
 216              		.loc 1 83 17 view .LVU41
 217 00e6 9844     		add	r8, r8, r3
 218              	.LVL21:
 219              		.loc 1 83 17 view .LVU42
 220 00e8 A0E7     		b	.L2
 221              	.LVL22:
 222              	.L7:
  75:Core/Src/LED/ILI9341_GFX.c ****             err += dy;
 223              		.loc 1 75 13 is_stmt 1 view .LVU43
  75:Core/Src/LED/ILI9341_GFX.c ****             err += dy;
 224              		.loc 1 75 14 is_stmt 0 view .LVU44
 225 00ea 019B     		ldr	r3, [sp, #4]
 226              	.LVL23:
  75:Core/Src/LED/ILI9341_GFX.c ****             err += dy;
 227              		.loc 1 75 14 view .LVU45
 228 00ec 0133     		adds	r3, r3, #1
 229 00ee 0193     		str	r3, [sp, #4]
 230              	.LVL24:
  76:Core/Src/LED/ILI9341_GFX.c ****             dy += 2;
 231              		.loc 1 76 13 is_stmt 1 view .LVU46
  76:Core/Src/LED/ILI9341_GFX.c ****             dy += 2;
 232              		.loc 1 76 17 is_stmt 0 view .LVU47
 233 00f0 069B     		ldr	r3, [sp, #24]
 234              	.LVL25:
  76:Core/Src/LED/ILI9341_GFX.c ****             dy += 2;
 235              		.loc 1 76 17 view .LVU48
 236 00f2 9C46     		mov	ip, r3
 237 00f4 E044     		add	r8, r8, ip
 238              	.LVL26:
  77:Core/Src/LED/ILI9341_GFX.c ****         }
 239              		.loc 1 77 13 is_stmt 1 view .LVU49
  77:Core/Src/LED/ILI9341_GFX.c ****         }
 240              		.loc 1 77 16 is_stmt 0 view .LVU50
 241 00f6 0233     		adds	r3, r3, #2
 242 00f8 0693     		str	r3, [sp, #24]
 243              	.LVL27:
  77:Core/Src/LED/ILI9341_GFX.c ****         }
 244              		.loc 1 77 16 view .LVU51
 245 00fa E6E7     		b	.L3
 246              	.LVL28:
 247              	.L6:
ARM GAS  /tmp/ccfh6D8p.s 			page 7


  84:Core/Src/LED/ILI9341_GFX.c ****         }
  85:Core/Src/LED/ILI9341_GFX.c ****     }
  86:Core/Src/LED/ILI9341_GFX.c **** }
 248              		.loc 1 86 1 view .LVU52
 249 00fc 09B0     		add	sp, sp, #36
 250              		@ sp needed
 251              	.LVL29:
 252              		.loc 1 86 1 view .LVU53
 253 00fe 3CBC     		pop	{r2, r3, r4, r5}
 254 0100 9046     		mov	r8, r2
 255 0102 9946     		mov	r9, r3
 256 0104 A246     		mov	r10, r4
 257 0106 AB46     		mov	fp, r5
 258 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 259              		.cfi_endproc
 260              	.LFE40:
 262              		.section	.text.ILI9341_Draw_Filled_Circle,"ax",%progbits
 263              		.align	1
 264              		.global	ILI9341_Draw_Filled_Circle
 265              		.syntax unified
 266              		.code	16
 267              		.thumb_func
 268              		.fpu softvfp
 270              	ILI9341_Draw_Filled_Circle:
 271              	.LVL30:
 272              	.LFB41:
  87:Core/Src/LED/ILI9341_GFX.c **** 
  88:Core/Src/LED/ILI9341_GFX.c **** /*Draw filled circle at X,Y location with specified radius and colour. X and Y represent circles ce
  89:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Filled_Circle(uint16_t X, uint16_t Y, uint16_t Radius, uint16_t Colour)
  90:Core/Src/LED/ILI9341_GFX.c **** {
 273              		.loc 1 90 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 16
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		.loc 1 90 1 is_stmt 0 view .LVU55
 278 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 20
 281              		.cfi_offset 4, -20
 282              		.cfi_offset 5, -16
 283              		.cfi_offset 6, -12
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 DE46     		mov	lr, fp
 287 0004 5746     		mov	r7, r10
 288 0006 4E46     		mov	r6, r9
 289 0008 4546     		mov	r5, r8
 290 000a E0B5     		push	{r5, r6, r7, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 36
 293              		.cfi_offset 8, -36
 294              		.cfi_offset 9, -32
 295              		.cfi_offset 10, -28
 296              		.cfi_offset 11, -24
 297 000c 85B0     		sub	sp, sp, #20
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 56
ARM GAS  /tmp/ccfh6D8p.s 			page 8


 300 000e 0290     		str	r0, [sp, #8]
 301 0010 0F00     		movs	r7, r1
 302 0012 1E00     		movs	r6, r3
  91:Core/Src/LED/ILI9341_GFX.c **** 	
  92:Core/Src/LED/ILI9341_GFX.c **** 		int x = Radius;
 303              		.loc 1 92 3 is_stmt 1 view .LVU56
 304              		.loc 1 92 7 is_stmt 0 view .LVU57
 305 0014 9146     		mov	r9, r2
 306              	.LVL31:
  93:Core/Src/LED/ILI9341_GFX.c ****     int y = 0;
 307              		.loc 1 93 5 is_stmt 1 view .LVU58
  94:Core/Src/LED/ILI9341_GFX.c ****     int xChange = 1 - (Radius << 1);
 308              		.loc 1 94 5 view .LVU59
 309              		.loc 1 94 31 is_stmt 0 view .LVU60
 310 0016 5200     		lsls	r2, r2, #1
 311              	.LVL32:
 312              		.loc 1 94 9 view .LVU61
 313 0018 0123     		movs	r3, #1
 314              	.LVL33:
 315              		.loc 1 94 9 view .LVU62
 316 001a 9B1A     		subs	r3, r3, r2
 317 001c 0393     		str	r3, [sp, #12]
 318              	.LVL34:
  95:Core/Src/LED/ILI9341_GFX.c ****     int yChange = 0;
 319              		.loc 1 95 5 is_stmt 1 view .LVU63
  96:Core/Src/LED/ILI9341_GFX.c ****     int radiusError = 0;
 320              		.loc 1 96 5 view .LVU64
  97:Core/Src/LED/ILI9341_GFX.c **** 
  98:Core/Src/LED/ILI9341_GFX.c ****     while (x >= y)
 321              		.loc 1 98 5 view .LVU65
  96:Core/Src/LED/ILI9341_GFX.c ****     int radiusError = 0;
 322              		.loc 1 96 9 is_stmt 0 view .LVU66
 323 001e 0023     		movs	r3, #0
 324              	.LVL35:
  96:Core/Src/LED/ILI9341_GFX.c ****     int radiusError = 0;
 325              		.loc 1 96 9 view .LVU67
 326 0020 0093     		str	r3, [sp]
  95:Core/Src/LED/ILI9341_GFX.c ****     int radiusError = 0;
 327              		.loc 1 95 9 view .LVU68
 328 0022 0193     		str	r3, [sp, #4]
  93:Core/Src/LED/ILI9341_GFX.c ****     int xChange = 1 - (Radius << 1);
 329              		.loc 1 93 9 view .LVU69
 330 0024 9846     		mov	r8, r3
 331              		.loc 1 98 11 view .LVU70
 332 0026 45E0     		b	.L9
 333              	.LVL36:
 334              	.L11:
 335              	.LBB2:
  99:Core/Src/LED/ILI9341_GFX.c ****     {
 100:Core/Src/LED/ILI9341_GFX.c ****         for (int i = X - x; i <= X + x; i++)
 101:Core/Src/LED/ILI9341_GFX.c ****         {
 102:Core/Src/LED/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y + y,Colour);
 336              		.loc 1 102 13 is_stmt 1 discriminator 3 view .LVU71
 337 0028 AEB2     		uxth	r6, r5
 338 002a 4346     		mov	r3, r8
 339 002c 9CB2     		uxth	r4, r3
 340 002e E119     		adds	r1, r4, r7
ARM GAS  /tmp/ccfh6D8p.s 			page 9


 341 0030 89B2     		uxth	r1, r1
 342 0032 5A46     		mov	r2, fp
 343 0034 3000     		movs	r0, r6
 344 0036 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 345              	.LVL37:
 103:Core/Src/LED/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y - y,Colour);
 346              		.loc 1 103 13 discriminator 3 view .LVU72
 347 003a 391B     		subs	r1, r7, r4
 348 003c 89B2     		uxth	r1, r1
 349 003e 5A46     		mov	r2, fp
 350 0040 3000     		movs	r0, r6
 351 0042 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 352              	.LVL38:
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 353              		.loc 1 100 41 discriminator 3 view .LVU73
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 354              		.loc 1 100 42 is_stmt 0 discriminator 3 view .LVU74
 355 0046 0135     		adds	r5, r5, #1
 356              	.LVL39:
 357              	.L10:
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 358              		.loc 1 100 29 is_stmt 1 discriminator 1 view .LVU75
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 359              		.loc 1 100 36 is_stmt 0 discriminator 1 view .LVU76
 360 0048 5346     		mov	r3, r10
 361 004a 4B44     		add	r3, r3, r9
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 362              		.loc 1 100 9 discriminator 1 view .LVU77
 363 004c AB42     		cmp	r3, r5
 364 004e EBDA     		bge	.L11
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 365              		.loc 1 100 9 discriminator 1 view .LVU78
 366              	.LBE2:
 104:Core/Src/LED/ILI9341_GFX.c ****         }
 105:Core/Src/LED/ILI9341_GFX.c ****         for (int i = X - y; i <= X + y; i++)
 367              		.loc 1 105 9 is_stmt 1 view .LVU79
 368              	.LBB3:
 369              		.loc 1 105 14 view .LVU80
 370              		.loc 1 105 18 is_stmt 0 view .LVU81
 371 0050 029B     		ldr	r3, [sp, #8]
 372 0052 4246     		mov	r2, r8
 373 0054 9D1A     		subs	r5, r3, r2
 374              	.LVL40:
 375              		.loc 1 105 9 view .LVU82
 376 0056 0FE0     		b	.L12
 377              	.L13:
 106:Core/Src/LED/ILI9341_GFX.c ****         {
 107:Core/Src/LED/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y + x,Colour);
 378              		.loc 1 107 13 is_stmt 1 discriminator 3 view .LVU83
 379 0058 AEB2     		uxth	r6, r5
 380 005a 4B46     		mov	r3, r9
 381 005c 9CB2     		uxth	r4, r3
 382 005e E119     		adds	r1, r4, r7
 383 0060 89B2     		uxth	r1, r1
 384 0062 5A46     		mov	r2, fp
 385 0064 3000     		movs	r0, r6
 386 0066 FFF7FEFF 		bl	ILI9341_Draw_Pixel
ARM GAS  /tmp/ccfh6D8p.s 			page 10


 387              	.LVL41:
 108:Core/Src/LED/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y - x,Colour);
 388              		.loc 1 108 13 discriminator 3 view .LVU84
 389 006a 391B     		subs	r1, r7, r4
 390 006c 89B2     		uxth	r1, r1
 391 006e 5A46     		mov	r2, fp
 392 0070 3000     		movs	r0, r6
 393 0072 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 394              	.LVL42:
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 395              		.loc 1 105 41 discriminator 3 view .LVU85
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 396              		.loc 1 105 42 is_stmt 0 discriminator 3 view .LVU86
 397 0076 0135     		adds	r5, r5, #1
 398              	.LVL43:
 399              	.L12:
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 400              		.loc 1 105 29 is_stmt 1 discriminator 1 view .LVU87
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 401              		.loc 1 105 36 is_stmt 0 discriminator 1 view .LVU88
 402 0078 5346     		mov	r3, r10
 403 007a 4344     		add	r3, r3, r8
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 404              		.loc 1 105 9 discriminator 1 view .LVU89
 405 007c AB42     		cmp	r3, r5
 406 007e EBDA     		bge	.L13
 105:Core/Src/LED/ILI9341_GFX.c ****         {
 407              		.loc 1 105 9 discriminator 1 view .LVU90
 408 0080 5E46     		mov	r6, fp
 409              	.LBE3:
 109:Core/Src/LED/ILI9341_GFX.c ****         }
 110:Core/Src/LED/ILI9341_GFX.c **** 
 111:Core/Src/LED/ILI9341_GFX.c ****         y++;
 410              		.loc 1 111 9 is_stmt 1 view .LVU91
 411              		.loc 1 111 10 is_stmt 0 view .LVU92
 412 0082 0123     		movs	r3, #1
 413 0084 9C46     		mov	ip, r3
 414 0086 E044     		add	r8, r8, ip
 415              	.LVL44:
 112:Core/Src/LED/ILI9341_GFX.c ****         radiusError += yChange;
 416              		.loc 1 112 9 is_stmt 1 view .LVU93
 417              		.loc 1 112 21 is_stmt 0 view .LVU94
 418 0088 009A     		ldr	r2, [sp]
 419 008a 019B     		ldr	r3, [sp, #4]
 420 008c 9C46     		mov	ip, r3
 421 008e 6244     		add	r2, r2, ip
 422 0090 0092     		str	r2, [sp]
 423              	.LVL45:
 113:Core/Src/LED/ILI9341_GFX.c ****         yChange += 2;
 424              		.loc 1 113 9 is_stmt 1 view .LVU95
 425              		.loc 1 113 17 is_stmt 0 view .LVU96
 426 0092 0233     		adds	r3, r3, #2
 427 0094 0193     		str	r3, [sp, #4]
 428              	.LVL46:
 114:Core/Src/LED/ILI9341_GFX.c ****         if (((radiusError << 1) + xChange) > 0)
 429              		.loc 1 114 9 is_stmt 1 view .LVU97
 430              		.loc 1 114 27 is_stmt 0 view .LVU98
ARM GAS  /tmp/ccfh6D8p.s 			page 11


 431 0096 5300     		lsls	r3, r2, #1
 432              	.LVL47:
 433              		.loc 1 114 33 view .LVU99
 434 0098 0399     		ldr	r1, [sp, #12]
 435 009a 8C46     		mov	ip, r1
 436 009c 6344     		add	r3, r3, ip
 437              		.loc 1 114 12 view .LVU100
 438 009e 002B     		cmp	r3, #0
 439 00a0 08DD     		ble	.L9
 115:Core/Src/LED/ILI9341_GFX.c ****         {
 116:Core/Src/LED/ILI9341_GFX.c ****             x--;
 440              		.loc 1 116 13 is_stmt 1 view .LVU101
 441              		.loc 1 116 14 is_stmt 0 view .LVU102
 442 00a2 0123     		movs	r3, #1
 443 00a4 5B42     		rsbs	r3, r3, #0
 444 00a6 9C46     		mov	ip, r3
 445 00a8 E144     		add	r9, r9, ip
 446              	.LVL48:
 117:Core/Src/LED/ILI9341_GFX.c ****             radiusError += xChange;
 447              		.loc 1 117 13 is_stmt 1 view .LVU103
 448              		.loc 1 117 25 is_stmt 0 view .LVU104
 449 00aa 8C46     		mov	ip, r1
 450 00ac 6244     		add	r2, r2, ip
 451              	.LVL49:
 452              		.loc 1 117 25 view .LVU105
 453 00ae 0092     		str	r2, [sp]
 454              	.LVL50:
 118:Core/Src/LED/ILI9341_GFX.c ****             xChange += 2;
 455              		.loc 1 118 13 is_stmt 1 view .LVU106
 456              		.loc 1 118 21 is_stmt 0 view .LVU107
 457 00b0 8B1C     		adds	r3, r1, #2
 458 00b2 0393     		str	r3, [sp, #12]
 459              	.LVL51:
 460              	.L9:
  98:Core/Src/LED/ILI9341_GFX.c ****     {
 461              		.loc 1 98 11 is_stmt 1 view .LVU108
 462 00b4 C145     		cmp	r9, r8
 463 00b6 05DB     		blt	.L16
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 464              		.loc 1 100 9 view .LVU109
 465              	.LBB4:
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 466              		.loc 1 100 14 view .LVU110
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 467              		.loc 1 100 24 is_stmt 0 view .LVU111
 468 00b8 029B     		ldr	r3, [sp, #8]
 469 00ba 9A46     		mov	r10, r3
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 470              		.loc 1 100 18 view .LVU112
 471 00bc 4A46     		mov	r2, r9
 472 00be 9D1A     		subs	r5, r3, r2
 473              	.LVL52:
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 474              		.loc 1 100 18 view .LVU113
 475 00c0 B346     		mov	fp, r6
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 476              		.loc 1 100 9 view .LVU114
ARM GAS  /tmp/ccfh6D8p.s 			page 12


 477 00c2 C1E7     		b	.L10
 478              	.LVL53:
 479              	.L16:
 100:Core/Src/LED/ILI9341_GFX.c ****         {
 480              		.loc 1 100 9 view .LVU115
 481              	.LBE4:
 119:Core/Src/LED/ILI9341_GFX.c ****         }
 120:Core/Src/LED/ILI9341_GFX.c ****     }
 121:Core/Src/LED/ILI9341_GFX.c **** 		//Really slow implementation, will require future overhaul
 122:Core/Src/LED/ILI9341_GFX.c **** 		//TODO:	https://stackoverflow.com/questions/1201200/fast-algorithm-for-drawing-filled-circles	
 123:Core/Src/LED/ILI9341_GFX.c **** }
 482              		.loc 1 123 1 view .LVU116
 483 00c4 05B0     		add	sp, sp, #20
 484              	.LVL54:
 485              		.loc 1 123 1 view .LVU117
 486              		@ sp needed
 487              	.LVL55:
 488              	.LVL56:
 489              		.loc 1 123 1 view .LVU118
 490 00c6 3CBC     		pop	{r2, r3, r4, r5}
 491 00c8 9046     		mov	r8, r2
 492 00ca 9946     		mov	r9, r3
 493 00cc A246     		mov	r10, r4
 494 00ce AB46     		mov	fp, r5
 495 00d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 496              		.cfi_endproc
 497              	.LFE41:
 499              		.global	__aeabi_i2f
 500              		.global	__aeabi_fcmplt
 501              		.section	.text.ILI9341_Draw_Hollow_Rectangle_Coord,"ax",%progbits
 502              		.align	1
 503              		.global	ILI9341_Draw_Hollow_Rectangle_Coord
 504              		.syntax unified
 505              		.code	16
 506              		.thumb_func
 507              		.fpu softvfp
 509              	ILI9341_Draw_Hollow_Rectangle_Coord:
 510              	.LVL57:
 511              	.LFB42:
 124:Core/Src/LED/ILI9341_GFX.c **** 
 125:Core/Src/LED/ILI9341_GFX.c **** /*Draw a hollow rectangle between positions X0,Y0 and X1,Y1 with specified colour*/
 126:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Hollow_Rectangle_Coord(uint16_t X0, uint16_t Y0, uint16_t X1, uint16_t Y1, uint16
 127:Core/Src/LED/ILI9341_GFX.c **** {
 512              		.loc 1 127 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 4, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		.loc 1 127 1 is_stmt 0 view .LVU120
 517 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 518              	.LCFI6:
 519              		.cfi_def_cfa_offset 20
 520              		.cfi_offset 4, -20
 521              		.cfi_offset 5, -16
 522              		.cfi_offset 6, -12
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 D646     		mov	lr, r10
ARM GAS  /tmp/ccfh6D8p.s 			page 13


 526 0004 4F46     		mov	r7, r9
 527 0006 4646     		mov	r6, r8
 528 0008 C0B5     		push	{r6, r7, lr}
 529              	.LCFI7:
 530              		.cfi_def_cfa_offset 32
 531              		.cfi_offset 8, -32
 532              		.cfi_offset 9, -28
 533              		.cfi_offset 10, -24
 534 000a 0600     		movs	r6, r0
 535 000c 0D00     		movs	r5, r1
 536 000e 1700     		movs	r7, r2
 537 0010 9846     		mov	r8, r3
 538 0012 08AB     		add	r3, sp, #32
 539              	.LVL58:
 540              		.loc 1 127 1 view .LVU121
 541 0014 1B88     		ldrh	r3, [r3]
 542              	.LVL59:
 543              		.loc 1 127 1 view .LVU122
 544 0016 9A46     		mov	r10, r3
 128:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t 	X_length = 0;
 545              		.loc 1 128 2 is_stmt 1 view .LVU123
 546              	.LVL60:
 129:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t 	Y_length = 0;
 547              		.loc 1 129 2 view .LVU124
 130:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t		Negative_X = 0;
 548              		.loc 1 130 2 view .LVU125
 131:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 549              		.loc 1 131 2 view .LVU126
 132:Core/Src/LED/ILI9341_GFX.c **** 	float 		Calc_Negative = 0;
 550              		.loc 1 132 2 view .LVU127
 133:Core/Src/LED/ILI9341_GFX.c **** 	
 134:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = X1 - X0;
 551              		.loc 1 134 2 view .LVU128
 552              		.loc 1 134 21 is_stmt 0 view .LVU129
 553 0018 101A     		subs	r0, r2, r0
 554              	.LVL61:
 555              		.loc 1 134 16 view .LVU130
 556 001a FFF7FEFF 		bl	__aeabi_i2f
 557              	.LVL62:
 135:Core/Src/LED/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_X = 1;
 558              		.loc 1 135 2 is_stmt 1 view .LVU131
 559              		.loc 1 135 4 is_stmt 0 view .LVU132
 560 001e 0021     		movs	r1, #0
 561 0020 FFF7FEFF 		bl	__aeabi_fcmplt
 562              	.LVL63:
 563              		.loc 1 135 4 view .LVU133
 564 0024 0028     		cmp	r0, #0
 565 0026 36D1     		bne	.L25
 130:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 566              		.loc 1 130 11 view .LVU134
 567 0028 0024     		movs	r4, #0
 568              	.L18:
 569              	.LVL64:
 136:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = 0;
 570              		.loc 1 136 2 is_stmt 1 view .LVU135
 137:Core/Src/LED/ILI9341_GFX.c **** 	
 138:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = Y1 - Y0;
ARM GAS  /tmp/ccfh6D8p.s 			page 14


 571              		.loc 1 138 2 view .LVU136
 572              		.loc 1 138 21 is_stmt 0 view .LVU137
 573 002a 4346     		mov	r3, r8
 574 002c 581B     		subs	r0, r3, r5
 575              		.loc 1 138 16 view .LVU138
 576 002e FFF7FEFF 		bl	__aeabi_i2f
 577              	.LVL65:
 139:Core/Src/LED/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_Y = 1;
 578              		.loc 1 139 2 is_stmt 1 view .LVU139
 579              		.loc 1 139 4 is_stmt 0 view .LVU140
 580 0032 0021     		movs	r1, #0
 581 0034 FFF7FEFF 		bl	__aeabi_fcmplt
 582              	.LVL66:
 583              		.loc 1 139 4 view .LVU141
 584 0038 0028     		cmp	r0, #0
 585 003a 2ED1     		bne	.L26
 131:Core/Src/LED/ILI9341_GFX.c **** 	float 		Calc_Negative = 0;
 586              		.loc 1 131 11 view .LVU142
 587 003c 0023     		movs	r3, #0
 588 003e 9946     		mov	r9, r3
 589              	.L19:
 590              	.LVL67:
 140:Core/Src/LED/ILI9341_GFX.c **** 	
 141:Core/Src/LED/ILI9341_GFX.c **** 	
 142:Core/Src/LED/ILI9341_GFX.c **** 	//DRAW HORIZONTAL!
 143:Core/Src/LED/ILI9341_GFX.c **** 	if(!Negative_X)
 591              		.loc 1 143 2 is_stmt 1 view .LVU143
 592              		.loc 1 143 4 is_stmt 0 view .LVU144
 593 0040 002C     		cmp	r4, #0
 594 0042 2DD1     		bne	.L20
 144:Core/Src/LED/ILI9341_GFX.c **** 	{
 145:Core/Src/LED/ILI9341_GFX.c **** 		X_length = X1 - X0;		
 595              		.loc 1 145 3 is_stmt 1 view .LVU145
 596              		.loc 1 145 12 is_stmt 0 view .LVU146
 597 0044 BC1B     		subs	r4, r7, r6
 598              	.LVL68:
 599              		.loc 1 145 12 view .LVU147
 600 0046 A4B2     		uxth	r4, r4
 601              	.LVL69:
 602              	.L21:
 146:Core/Src/LED/ILI9341_GFX.c **** 	}
 147:Core/Src/LED/ILI9341_GFX.c **** 	else
 148:Core/Src/LED/ILI9341_GFX.c **** 	{
 149:Core/Src/LED/ILI9341_GFX.c **** 		X_length = X0 - X1;		
 150:Core/Src/LED/ILI9341_GFX.c **** 	}
 151:Core/Src/LED/ILI9341_GFX.c **** 	ILI9341_Draw_Horizontal_Line(X0, Y0, X_length, Colour);
 603              		.loc 1 151 2 is_stmt 1 view .LVU148
 604 0048 5346     		mov	r3, r10
 605 004a 2200     		movs	r2, r4
 606 004c 2900     		movs	r1, r5
 607 004e 3000     		movs	r0, r6
 608 0050 FFF7FEFF 		bl	ILI9341_Draw_Horizontal_Line
 609              	.LVL70:
 152:Core/Src/LED/ILI9341_GFX.c **** 	ILI9341_Draw_Horizontal_Line(X0, Y1, X_length, Colour);
 610              		.loc 1 152 2 view .LVU149
 611 0054 5346     		mov	r3, r10
 612 0056 2200     		movs	r2, r4
ARM GAS  /tmp/ccfh6D8p.s 			page 15


 613 0058 4146     		mov	r1, r8
 614 005a 3000     		movs	r0, r6
 615 005c FFF7FEFF 		bl	ILI9341_Draw_Horizontal_Line
 616              	.LVL71:
 153:Core/Src/LED/ILI9341_GFX.c **** 	
 154:Core/Src/LED/ILI9341_GFX.c **** 	
 155:Core/Src/LED/ILI9341_GFX.c **** 	
 156:Core/Src/LED/ILI9341_GFX.c **** 	//DRAW VERTICAL!
 157:Core/Src/LED/ILI9341_GFX.c **** 	if(!Negative_Y)
 617              		.loc 1 157 2 view .LVU150
 618              		.loc 1 157 4 is_stmt 0 view .LVU151
 619 0060 4B46     		mov	r3, r9
 620 0062 002B     		cmp	r3, #0
 621 0064 1FD1     		bne	.L22
 158:Core/Src/LED/ILI9341_GFX.c **** 	{
 159:Core/Src/LED/ILI9341_GFX.c **** 		Y_length = Y1 - Y0;		
 622              		.loc 1 159 3 is_stmt 1 view .LVU152
 623              		.loc 1 159 12 is_stmt 0 view .LVU153
 624 0066 4346     		mov	r3, r8
 625 0068 5B1B     		subs	r3, r3, r5
 626 006a 9BB2     		uxth	r3, r3
 627 006c 9946     		mov	r9, r3
 628              	.LVL72:
 629              	.L23:
 160:Core/Src/LED/ILI9341_GFX.c **** 	}
 161:Core/Src/LED/ILI9341_GFX.c **** 	else
 162:Core/Src/LED/ILI9341_GFX.c **** 	{
 163:Core/Src/LED/ILI9341_GFX.c **** 		Y_length = Y0 - Y1;		
 164:Core/Src/LED/ILI9341_GFX.c **** 	}
 165:Core/Src/LED/ILI9341_GFX.c **** 	ILI9341_Draw_Vertical_Line(X0, Y0, Y_length, Colour);
 630              		.loc 1 165 2 is_stmt 1 view .LVU154
 631 006e 5346     		mov	r3, r10
 632 0070 4A46     		mov	r2, r9
 633 0072 2900     		movs	r1, r5
 634 0074 3000     		movs	r0, r6
 635 0076 FFF7FEFF 		bl	ILI9341_Draw_Vertical_Line
 636              	.LVL73:
 166:Core/Src/LED/ILI9341_GFX.c **** 	ILI9341_Draw_Vertical_Line(X1, Y0, Y_length, Colour);
 637              		.loc 1 166 2 view .LVU155
 638 007a 5346     		mov	r3, r10
 639 007c 4A46     		mov	r2, r9
 640 007e 2900     		movs	r1, r5
 641 0080 3800     		movs	r0, r7
 642 0082 FFF7FEFF 		bl	ILI9341_Draw_Vertical_Line
 643              	.LVL74:
 167:Core/Src/LED/ILI9341_GFX.c **** 	
 168:Core/Src/LED/ILI9341_GFX.c **** 	if((X_length > 0)||(Y_length > 0)) 
 644              		.loc 1 168 2 view .LVU156
 645              		.loc 1 168 19 is_stmt 0 view .LVU157
 646 0086 4B46     		mov	r3, r9
 647 0088 1C43     		orrs	r4, r3
 648              	.LVL75:
 649              		.loc 1 168 4 view .LVU158
 650 008a 11D1     		bne	.L27
 651              	.L17:
 169:Core/Src/LED/ILI9341_GFX.c **** 	{
 170:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Draw_Pixel(X1, Y1, Colour);
ARM GAS  /tmp/ccfh6D8p.s 			page 16


 171:Core/Src/LED/ILI9341_GFX.c **** 	}
 172:Core/Src/LED/ILI9341_GFX.c **** 	
 173:Core/Src/LED/ILI9341_GFX.c **** }
 652              		.loc 1 173 1 view .LVU159
 653              		@ sp needed
 654              	.LVL76:
 655              		.loc 1 173 1 view .LVU160
 656 008c 1CBC     		pop	{r2, r3, r4}
 657 008e 9046     		mov	r8, r2
 658 0090 9946     		mov	r9, r3
 659 0092 A246     		mov	r10, r4
 660 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 661              	.LVL77:
 662              	.L25:
 135:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = 0;
 663              		.loc 1 135 35 view .LVU161
 664 0096 0124     		movs	r4, #1
 665 0098 C7E7     		b	.L18
 666              	.LVL78:
 667              	.L26:
 139:Core/Src/LED/ILI9341_GFX.c **** 	
 668              		.loc 1 139 35 view .LVU162
 669 009a 0123     		movs	r3, #1
 670 009c 9946     		mov	r9, r3
 671 009e CFE7     		b	.L19
 672              	.LVL79:
 673              	.L20:
 149:Core/Src/LED/ILI9341_GFX.c **** 	}
 674              		.loc 1 149 3 is_stmt 1 view .LVU163
 149:Core/Src/LED/ILI9341_GFX.c **** 	}
 675              		.loc 1 149 12 is_stmt 0 view .LVU164
 676 00a0 F41B     		subs	r4, r6, r7
 677              	.LVL80:
 149:Core/Src/LED/ILI9341_GFX.c **** 	}
 678              		.loc 1 149 12 view .LVU165
 679 00a2 A4B2     		uxth	r4, r4
 680              	.LVL81:
 149:Core/Src/LED/ILI9341_GFX.c **** 	}
 681              		.loc 1 149 12 view .LVU166
 682 00a4 D0E7     		b	.L21
 683              	.L22:
 163:Core/Src/LED/ILI9341_GFX.c **** 	}
 684              		.loc 1 163 3 is_stmt 1 view .LVU167
 163:Core/Src/LED/ILI9341_GFX.c **** 	}
 685              		.loc 1 163 12 is_stmt 0 view .LVU168
 686 00a6 4346     		mov	r3, r8
 687 00a8 EB1A     		subs	r3, r5, r3
 688 00aa 9BB2     		uxth	r3, r3
 689 00ac 9946     		mov	r9, r3
 690              	.LVL82:
 163:Core/Src/LED/ILI9341_GFX.c **** 	}
 691              		.loc 1 163 12 view .LVU169
 692 00ae DEE7     		b	.L23
 693              	.LVL83:
 694              	.L27:
 170:Core/Src/LED/ILI9341_GFX.c **** 	}
 695              		.loc 1 170 3 is_stmt 1 view .LVU170
ARM GAS  /tmp/ccfh6D8p.s 			page 17


 696 00b0 5246     		mov	r2, r10
 697 00b2 4146     		mov	r1, r8
 698 00b4 3800     		movs	r0, r7
 699 00b6 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 700              	.LVL84:
 701              		.loc 1 173 1 is_stmt 0 view .LVU171
 702 00ba E7E7     		b	.L17
 703              		.cfi_endproc
 704              	.LFE42:
 706              		.section	.text.ILI9341_Draw_Filled_Rectangle_Coord,"ax",%progbits
 707              		.align	1
 708              		.global	ILI9341_Draw_Filled_Rectangle_Coord
 709              		.syntax unified
 710              		.code	16
 711              		.thumb_func
 712              		.fpu softvfp
 714              	ILI9341_Draw_Filled_Rectangle_Coord:
 715              	.LVL85:
 716              	.LFB43:
 174:Core/Src/LED/ILI9341_GFX.c **** 
 175:Core/Src/LED/ILI9341_GFX.c **** /*Draw a filled rectangle between positions X0,Y0 and X1,Y1 with specified colour*/
 176:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Filled_Rectangle_Coord(uint16_t X0, uint16_t Y0, uint16_t X1, uint16_t Y1, uint16
 177:Core/Src/LED/ILI9341_GFX.c **** {
 717              		.loc 1 177 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 4, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		.loc 1 177 1 is_stmt 0 view .LVU173
 722 0000 70B5     		push	{r4, r5, r6, lr}
 723              	.LCFI8:
 724              		.cfi_def_cfa_offset 16
 725              		.cfi_offset 4, -16
 726              		.cfi_offset 5, -12
 727              		.cfi_offset 6, -8
 728              		.cfi_offset 14, -4
 729 0002 82B0     		sub	sp, sp, #8
 730              	.LCFI9:
 731              		.cfi_def_cfa_offset 24
 732 0004 1500     		movs	r5, r2
 733 0006 1C00     		movs	r4, r3
 734 0008 06AB     		add	r3, sp, #24
 735              	.LVL86:
 736              		.loc 1 177 1 view .LVU174
 737 000a 1E88     		ldrh	r6, [r3]
 178:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t 	X_length = 0;
 738              		.loc 1 178 2 is_stmt 1 view .LVU175
 739              	.LVL87:
 179:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t 	Y_length = 0;
 740              		.loc 1 179 2 view .LVU176
 180:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t		Negative_X = 0;
 741              		.loc 1 180 2 view .LVU177
 181:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 742              		.loc 1 181 2 view .LVU178
 182:Core/Src/LED/ILI9341_GFX.c **** 	int32_t 	Calc_Negative = 0;
 743              		.loc 1 182 2 view .LVU179
 183:Core/Src/LED/ILI9341_GFX.c **** 	
 184:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t X0_true = 0;
ARM GAS  /tmp/ccfh6D8p.s 			page 18


 744              		.loc 1 184 2 view .LVU180
 185:Core/Src/LED/ILI9341_GFX.c **** 	uint16_t Y0_true = 0;
 745              		.loc 1 185 2 view .LVU181
 186:Core/Src/LED/ILI9341_GFX.c **** 	
 187:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = X1 - X0;
 746              		.loc 1 187 2 view .LVU182
 747              		.loc 1 187 16 is_stmt 0 view .LVU183
 748 000c 131A     		subs	r3, r2, r0
 749              	.LVL88:
 188:Core/Src/LED/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_X = 1;
 750              		.loc 1 188 2 is_stmt 1 view .LVU184
 751              		.loc 1 188 4 is_stmt 0 view .LVU185
 752 000e 10D4     		bmi	.L35
 180:Core/Src/LED/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 753              		.loc 1 180 11 view .LVU186
 754 0010 0022     		movs	r2, #0
 755              	.LVL89:
 756              	.L29:
 189:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = 0;
 757              		.loc 1 189 2 is_stmt 1 view .LVU187
 190:Core/Src/LED/ILI9341_GFX.c **** 	
 191:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = Y1 - Y0;
 758              		.loc 1 191 2 view .LVU188
 759              		.loc 1 191 16 is_stmt 0 view .LVU189
 760 0012 631A     		subs	r3, r4, r1
 761              	.LVL90:
 192:Core/Src/LED/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_Y = 1;
 762              		.loc 1 192 2 is_stmt 1 view .LVU190
 763              		.loc 1 192 4 is_stmt 0 view .LVU191
 764 0014 0FD4     		bmi	.L36
 181:Core/Src/LED/ILI9341_GFX.c **** 	int32_t 	Calc_Negative = 0;
 765              		.loc 1 181 11 view .LVU192
 766 0016 0023     		movs	r3, #0
 767              	.LVL91:
 768              	.L30:
 193:Core/Src/LED/ILI9341_GFX.c **** 	
 194:Core/Src/LED/ILI9341_GFX.c **** 	
 195:Core/Src/LED/ILI9341_GFX.c **** 	//DRAW HORIZONTAL!
 196:Core/Src/LED/ILI9341_GFX.c **** 	if(!Negative_X)
 769              		.loc 1 196 2 is_stmt 1 view .LVU193
 770              		.loc 1 196 4 is_stmt 0 view .LVU194
 771 0018 002A     		cmp	r2, #0
 772 001a 0ED1     		bne	.L31
 197:Core/Src/LED/ILI9341_GFX.c **** 	{
 198:Core/Src/LED/ILI9341_GFX.c **** 		X_length = X1 - X0;
 773              		.loc 1 198 3 is_stmt 1 view .LVU195
 774              		.loc 1 198 12 is_stmt 0 view .LVU196
 775 001c 2A1A     		subs	r2, r5, r0
 776              	.LVL92:
 777              		.loc 1 198 12 view .LVU197
 778 001e 92B2     		uxth	r2, r2
 779              	.LVL93:
 199:Core/Src/LED/ILI9341_GFX.c **** 		X0_true = X0;
 780              		.loc 1 199 3 is_stmt 1 view .LVU198
 781              	.L32:
 200:Core/Src/LED/ILI9341_GFX.c **** 	}
 201:Core/Src/LED/ILI9341_GFX.c **** 	else
ARM GAS  /tmp/ccfh6D8p.s 			page 19


 202:Core/Src/LED/ILI9341_GFX.c **** 	{
 203:Core/Src/LED/ILI9341_GFX.c **** 		X_length = X0 - X1;
 204:Core/Src/LED/ILI9341_GFX.c **** 		X0_true = X1;
 205:Core/Src/LED/ILI9341_GFX.c **** 	}
 206:Core/Src/LED/ILI9341_GFX.c **** 	
 207:Core/Src/LED/ILI9341_GFX.c **** 	//DRAW VERTICAL!
 208:Core/Src/LED/ILI9341_GFX.c **** 	if(!Negative_Y)
 782              		.loc 1 208 2 view .LVU199
 783              		.loc 1 208 4 is_stmt 0 view .LVU200
 784 0020 002B     		cmp	r3, #0
 785 0022 0ED1     		bne	.L33
 209:Core/Src/LED/ILI9341_GFX.c **** 	{
 210:Core/Src/LED/ILI9341_GFX.c **** 		Y_length = Y1 - Y0;
 786              		.loc 1 210 3 is_stmt 1 view .LVU201
 787              		.loc 1 210 12 is_stmt 0 view .LVU202
 788 0024 631A     		subs	r3, r4, r1
 789              	.LVL94:
 790              		.loc 1 210 12 view .LVU203
 791 0026 9BB2     		uxth	r3, r3
 792              	.LVL95:
 211:Core/Src/LED/ILI9341_GFX.c **** 		Y0_true = Y0;		
 793              		.loc 1 211 3 is_stmt 1 view .LVU204
 794              	.L34:
 212:Core/Src/LED/ILI9341_GFX.c **** 	}
 213:Core/Src/LED/ILI9341_GFX.c **** 	else
 214:Core/Src/LED/ILI9341_GFX.c **** 	{
 215:Core/Src/LED/ILI9341_GFX.c **** 		Y_length = Y0 - Y1;
 216:Core/Src/LED/ILI9341_GFX.c **** 		Y0_true = Y1;	
 217:Core/Src/LED/ILI9341_GFX.c **** 	}
 218:Core/Src/LED/ILI9341_GFX.c **** 	
 219:Core/Src/LED/ILI9341_GFX.c **** 	ILI9341_Draw_Rectangle(X0_true, Y0_true, X_length, Y_length, Colour);	
 795              		.loc 1 219 2 view .LVU205
 796 0028 0096     		str	r6, [sp]
 797 002a FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 798              	.LVL96:
 220:Core/Src/LED/ILI9341_GFX.c **** }
 799              		.loc 1 220 1 is_stmt 0 view .LVU206
 800 002e 02B0     		add	sp, sp, #8
 801              		@ sp needed
 802              		.loc 1 220 1 view .LVU207
 803 0030 70BD     		pop	{r4, r5, r6, pc}
 804              	.LVL97:
 805              	.L35:
 188:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = 0;
 806              		.loc 1 188 35 view .LVU208
 807 0032 0122     		movs	r2, #1
 808              	.LVL98:
 188:Core/Src/LED/ILI9341_GFX.c **** 	Calc_Negative = 0;
 809              		.loc 1 188 35 view .LVU209
 810 0034 EDE7     		b	.L29
 811              	.LVL99:
 812              	.L36:
 192:Core/Src/LED/ILI9341_GFX.c **** 	
 813              		.loc 1 192 35 view .LVU210
 814 0036 0123     		movs	r3, #1
 815              	.LVL100:
 192:Core/Src/LED/ILI9341_GFX.c **** 	
ARM GAS  /tmp/ccfh6D8p.s 			page 20


 816              		.loc 1 192 35 view .LVU211
 817 0038 EEE7     		b	.L30
 818              	.LVL101:
 819              	.L31:
 203:Core/Src/LED/ILI9341_GFX.c **** 		X0_true = X1;
 820              		.loc 1 203 3 is_stmt 1 view .LVU212
 203:Core/Src/LED/ILI9341_GFX.c **** 		X0_true = X1;
 821              		.loc 1 203 12 is_stmt 0 view .LVU213
 822 003a 401B     		subs	r0, r0, r5
 823              	.LVL102:
 203:Core/Src/LED/ILI9341_GFX.c **** 		X0_true = X1;
 824              		.loc 1 203 12 view .LVU214
 825 003c 82B2     		uxth	r2, r0
 826              	.LVL103:
 204:Core/Src/LED/ILI9341_GFX.c **** 	}
 827              		.loc 1 204 3 is_stmt 1 view .LVU215
 204:Core/Src/LED/ILI9341_GFX.c **** 	}
 828              		.loc 1 204 11 is_stmt 0 view .LVU216
 829 003e 2800     		movs	r0, r5
 830 0040 EEE7     		b	.L32
 831              	.LVL104:
 832              	.L33:
 215:Core/Src/LED/ILI9341_GFX.c **** 		Y0_true = Y1;	
 833              		.loc 1 215 3 is_stmt 1 view .LVU217
 215:Core/Src/LED/ILI9341_GFX.c **** 		Y0_true = Y1;	
 834              		.loc 1 215 12 is_stmt 0 view .LVU218
 835 0042 091B     		subs	r1, r1, r4
 836              	.LVL105:
 215:Core/Src/LED/ILI9341_GFX.c **** 		Y0_true = Y1;	
 837              		.loc 1 215 12 view .LVU219
 838 0044 8BB2     		uxth	r3, r1
 839              	.LVL106:
 216:Core/Src/LED/ILI9341_GFX.c **** 	}
 840              		.loc 1 216 3 is_stmt 1 view .LVU220
 216:Core/Src/LED/ILI9341_GFX.c **** 	}
 841              		.loc 1 216 11 is_stmt 0 view .LVU221
 842 0046 2100     		movs	r1, r4
 843 0048 EEE7     		b	.L34
 844              		.cfi_endproc
 845              	.LFE43:
 847              		.section	.text.ILI9341_Draw_Char,"ax",%progbits
 848              		.align	1
 849              		.global	ILI9341_Draw_Char
 850              		.syntax unified
 851              		.code	16
 852              		.thumb_func
 853              		.fpu softvfp
 855              	ILI9341_Draw_Char:
 856              	.LVL107:
 857              	.LFB44:
 221:Core/Src/LED/ILI9341_GFX.c **** 
 222:Core/Src/LED/ILI9341_GFX.c **** /*Draws a character (fonts imported from fonts.h) at X,Y location with specified font colour, size 
 223:Core/Src/LED/ILI9341_GFX.c **** /*See fonts.h implementation of font on what is required for changing to a different font when swit
 224:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Char(char Character, uint8_t X, uint8_t Y, uint16_t Colour, uint16_t Size, uint16
 225:Core/Src/LED/ILI9341_GFX.c **** {
 858              		.loc 1 225 1 is_stmt 1 view -0
 859              		.cfi_startproc
ARM GAS  /tmp/ccfh6D8p.s 			page 21


 860              		@ args = 8, pretend = 0, frame = 8
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		.loc 1 225 1 is_stmt 0 view .LVU223
 863 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 864              	.LCFI10:
 865              		.cfi_def_cfa_offset 20
 866              		.cfi_offset 4, -20
 867              		.cfi_offset 5, -16
 868              		.cfi_offset 6, -12
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 CE46     		mov	lr, r9
 872 0004 4746     		mov	r7, r8
 873 0006 80B5     		push	{r7, lr}
 874              	.LCFI11:
 875              		.cfi_def_cfa_offset 28
 876              		.cfi_offset 8, -28
 877              		.cfi_offset 9, -24
 878 0008 85B0     		sub	sp, sp, #20
 879              	.LCFI12:
 880              		.cfi_def_cfa_offset 48
 881 000a 9946     		mov	r9, r3
 882 000c 0CAB     		add	r3, sp, #48
 883              	.LVL108:
 884              		.loc 1 225 1 view .LVU224
 885 000e 1E88     		ldrh	r6, [r3]
 886 0010 0DAB     		add	r3, sp, #52
 887              	.LVL109:
 888              		.loc 1 225 1 view .LVU225
 889 0012 1D88     		ldrh	r5, [r3]
 226:Core/Src/LED/ILI9341_GFX.c **** 		uint8_t 	function_char;
 890              		.loc 1 226 3 is_stmt 1 view .LVU226
 227:Core/Src/LED/ILI9341_GFX.c ****     uint8_t 	i,j;
 891              		.loc 1 227 5 view .LVU227
 228:Core/Src/LED/ILI9341_GFX.c **** 		
 229:Core/Src/LED/ILI9341_GFX.c **** 		function_char = Character;
 892              		.loc 1 229 3 view .LVU228
 893              	.LVL110:
 230:Core/Src/LED/ILI9341_GFX.c **** 		
 231:Core/Src/LED/ILI9341_GFX.c ****     if (function_char < ' ') {
 894              		.loc 1 231 5 view .LVU229
 895              		.loc 1 231 8 is_stmt 0 view .LVU230
 896 0014 1F28     		cmp	r0, #31
 897 0016 01D9     		bls	.L38
 232:Core/Src/LED/ILI9341_GFX.c ****         Character = 0;
 233:Core/Src/LED/ILI9341_GFX.c ****     } else {
 234:Core/Src/LED/ILI9341_GFX.c ****         function_char -= 32;
 898              		.loc 1 234 9 is_stmt 1 view .LVU231
 899              		.loc 1 234 23 is_stmt 0 view .LVU232
 900 0018 2038     		subs	r0, r0, #32
 901              	.LVL111:
 902              		.loc 1 234 23 view .LVU233
 903 001a C0B2     		uxtb	r0, r0
 904              	.LVL112:
 905              	.L38:
 235:Core/Src/LED/ILI9341_GFX.c **** 		}
 236:Core/Src/LED/ILI9341_GFX.c ****    	
ARM GAS  /tmp/ccfh6D8p.s 			page 22


 237:Core/Src/LED/ILI9341_GFX.c **** 		char temp[CHAR_WIDTH];
 906              		.loc 1 237 3 is_stmt 1 view .LVU234
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 907              		.loc 1 238 3 view .LVU235
 908              	.LBB5:
 909              		.loc 1 238 7 view .LVU236
 910              		.loc 1 238 15 is_stmt 0 view .LVU237
 911 001c 0023     		movs	r3, #0
 912              	.LVL113:
 913              	.L39:
 914              		.loc 1 238 22 is_stmt 1 discriminator 1 view .LVU238
 915              		.loc 1 238 3 is_stmt 0 discriminator 1 view .LVU239
 916 001e 052B     		cmp	r3, #5
 917 0020 0AD8     		bhi	.L47
 239:Core/Src/LED/ILI9341_GFX.c **** 		{
 240:Core/Src/LED/ILI9341_GFX.c **** 		temp[k] = font[function_char][k];
 918              		.loc 1 240 3 is_stmt 1 discriminator 3 view .LVU240
 919              		.loc 1 240 32 is_stmt 0 discriminator 3 view .LVU241
 920 0022 4400     		lsls	r4, r0, #1
 921 0024 2418     		adds	r4, r4, r0
 922 0026 6400     		lsls	r4, r4, #1
 923 0028 224F     		ldr	r7, .L50
 924 002a 3C19     		adds	r4, r7, r4
 925 002c E75C     		ldrb	r7, [r4, r3]
 926              		.loc 1 240 11 discriminator 3 view .LVU242
 927 002e 02AC     		add	r4, sp, #8
 928 0030 E754     		strb	r7, [r4, r3]
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 929              		.loc 1 238 36 is_stmt 1 discriminator 3 view .LVU243
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 930              		.loc 1 238 37 is_stmt 0 discriminator 3 view .LVU244
 931 0032 0133     		adds	r3, r3, #1
 932              	.LVL114:
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 933              		.loc 1 238 37 discriminator 3 view .LVU245
 934 0034 DBB2     		uxtb	r3, r3
 935              	.LVL115:
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 936              		.loc 1 238 37 discriminator 3 view .LVU246
 937 0036 F2E7     		b	.L39
 938              	.L47:
 238:Core/Src/LED/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 939              		.loc 1 238 37 discriminator 3 view .LVU247
 940              	.LBE5:
 241:Core/Src/LED/ILI9341_GFX.c **** 		}
 242:Core/Src/LED/ILI9341_GFX.c **** 		
 243:Core/Src/LED/ILI9341_GFX.c ****     // Draw pixels
 244:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Draw_Rectangle(X, Y, CHAR_WIDTH*Size, CHAR_HEIGHT*Size, Background_Colour);
 941              		.loc 1 244 3 is_stmt 1 view .LVU248
 942 0038 8FB2     		uxth	r7, r1
 943 003a 93B2     		uxth	r3, r2
 944              	.LVL116:
 945              		.loc 1 244 3 is_stmt 0 view .LVU249
 946 003c 9846     		mov	r8, r3
 947 003e F300     		lsls	r3, r6, #3
 948 0040 9BB2     		uxth	r3, r3
 949 0042 7200     		lsls	r2, r6, #1
ARM GAS  /tmp/ccfh6D8p.s 			page 23


 950              	.LVL117:
 951              		.loc 1 244 3 view .LVU250
 952 0044 B218     		adds	r2, r6, r2
 953 0046 5200     		lsls	r2, r2, #1
 954 0048 92B2     		uxth	r2, r2
 955 004a 0095     		str	r5, [sp]
 956 004c 4146     		mov	r1, r8
 957              	.LVL118:
 958              		.loc 1 244 3 view .LVU251
 959 004e 3800     		movs	r0, r7
 960              	.LVL119:
 961              		.loc 1 244 3 view .LVU252
 962 0050 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 963              	.LVL120:
 245:Core/Src/LED/ILI9341_GFX.c ****     for (j=0; j<CHAR_WIDTH; j++) {
 964              		.loc 1 245 5 is_stmt 1 view .LVU253
 965              		.loc 1 245 11 is_stmt 0 view .LVU254
 966 0054 0025     		movs	r5, #0
 967              		.loc 1 245 5 view .LVU255
 968 0056 23E0     		b	.L41
 969              	.LVL121:
 970              	.L43:
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 247:Core/Src/LED/ILI9341_GFX.c ****             if (temp[j] & (1<<i)) {			
 248:Core/Src/LED/ILI9341_GFX.c **** 							if(Size == 1)
 249:Core/Src/LED/ILI9341_GFX.c **** 							{
 250:Core/Src/LED/ILI9341_GFX.c ****               ILI9341_Draw_Pixel(X+j, Y+i, Colour);
 251:Core/Src/LED/ILI9341_GFX.c **** 							}
 252:Core/Src/LED/ILI9341_GFX.c **** 							else
 253:Core/Src/LED/ILI9341_GFX.c **** 							{
 254:Core/Src/LED/ILI9341_GFX.c **** 							ILI9341_Draw_Rectangle(X+(j*Size), Y+(i*Size), Size, Size, Colour);
 971              		.loc 1 254 8 is_stmt 1 view .LVU256
 972              		.loc 1 254 35 is_stmt 0 view .LVU257
 973 0058 2800     		movs	r0, r5
 974 005a 7043     		muls	r0, r6
 975 005c 80B2     		uxth	r0, r0
 976              		.loc 1 254 47 view .LVU258
 977 005e 2100     		movs	r1, r4
 978 0060 7143     		muls	r1, r6
 979 0062 89B2     		uxth	r1, r1
 980              		.loc 1 254 8 view .LVU259
 981 0064 4144     		add	r1, r1, r8
 982 0066 89B2     		uxth	r1, r1
 983 0068 3818     		adds	r0, r7, r0
 984 006a 80B2     		uxth	r0, r0
 985 006c 4B46     		mov	r3, r9
 986 006e 0093     		str	r3, [sp]
 987 0070 3300     		movs	r3, r6
 988 0072 3200     		movs	r2, r6
 989 0074 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 990              	.LVL122:
 991              	.L42:
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 992              		.loc 1 246 34 is_stmt 1 discriminator 2 view .LVU260
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 993              		.loc 1 246 35 is_stmt 0 discriminator 2 view .LVU261
 994 0078 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccfh6D8p.s 			page 24


 995              	.LVL123:
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 996              		.loc 1 246 35 discriminator 2 view .LVU262
 997 007a E4B2     		uxtb	r4, r4
 998              	.LVL124:
 999              	.L45:
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1000              		.loc 1 246 19 is_stmt 1 discriminator 1 view .LVU263
 246:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1001              		.loc 1 246 9 is_stmt 0 discriminator 1 view .LVU264
 1002 007c 072C     		cmp	r4, #7
 1003 007e 0DD8     		bhi	.L48
 247:Core/Src/LED/ILI9341_GFX.c **** 							if(Size == 1)
 1004              		.loc 1 247 13 is_stmt 1 view .LVU265
 247:Core/Src/LED/ILI9341_GFX.c **** 							if(Size == 1)
 1005              		.loc 1 247 21 is_stmt 0 view .LVU266
 1006 0080 02AB     		add	r3, sp, #8
 1007 0082 5A5D     		ldrb	r2, [r3, r5]
 247:Core/Src/LED/ILI9341_GFX.c **** 							if(Size == 1)
 1008              		.loc 1 247 17 view .LVU267
 1009 0084 2241     		asrs	r2, r2, r4
 247:Core/Src/LED/ILI9341_GFX.c **** 							if(Size == 1)
 1010              		.loc 1 247 16 view .LVU268
 1011 0086 D307     		lsls	r3, r2, #31
 1012 0088 F6D5     		bpl	.L42
 248:Core/Src/LED/ILI9341_GFX.c **** 							{
 1013              		.loc 1 248 8 is_stmt 1 view .LVU269
 248:Core/Src/LED/ILI9341_GFX.c **** 							{
 1014              		.loc 1 248 10 is_stmt 0 view .LVU270
 1015 008a 012E     		cmp	r6, #1
 1016 008c E4D1     		bne	.L43
 250:Core/Src/LED/ILI9341_GFX.c **** 							}
 1017              		.loc 1 250 15 is_stmt 1 view .LVU271
 1018 008e 4346     		mov	r3, r8
 1019 0090 1919     		adds	r1, r3, r4
 1020 0092 7819     		adds	r0, r7, r5
 1021 0094 4A46     		mov	r2, r9
 1022 0096 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 1023              	.LVL125:
 1024 009a EDE7     		b	.L42
 1025              	.L48:
 245:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1026              		.loc 1 245 29 discriminator 2 view .LVU272
 245:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1027              		.loc 1 245 30 is_stmt 0 discriminator 2 view .LVU273
 1028 009c 0135     		adds	r5, r5, #1
 1029              	.LVL126:
 245:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1030              		.loc 1 245 30 discriminator 2 view .LVU274
 1031 009e EDB2     		uxtb	r5, r5
 1032              	.LVL127:
 1033              	.L41:
 245:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1034              		.loc 1 245 15 is_stmt 1 discriminator 1 view .LVU275
 245:Core/Src/LED/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 1035              		.loc 1 245 5 is_stmt 0 discriminator 1 view .LVU276
 1036 00a0 052D     		cmp	r5, #5
ARM GAS  /tmp/ccfh6D8p.s 			page 25


 1037 00a2 01D8     		bhi	.L49
 246:Core/Src/LED/ILI9341_GFX.c ****             if (temp[j] & (1<<i)) {			
 1038              		.loc 1 246 15 view .LVU277
 1039 00a4 0024     		movs	r4, #0
 1040 00a6 E9E7     		b	.L45
 1041              	.L49:
 255:Core/Src/LED/ILI9341_GFX.c **** 							}
 256:Core/Src/LED/ILI9341_GFX.c ****             }						
 257:Core/Src/LED/ILI9341_GFX.c ****         }
 258:Core/Src/LED/ILI9341_GFX.c ****     }
 259:Core/Src/LED/ILI9341_GFX.c **** }
 1042              		.loc 1 259 1 view .LVU278
 1043 00a8 05B0     		add	sp, sp, #20
 1044              		@ sp needed
 1045              	.LVL128:
 1046              		.loc 1 259 1 view .LVU279
 1047 00aa 0CBC     		pop	{r2, r3}
 1048 00ac 9046     		mov	r8, r2
 1049 00ae 9946     		mov	r9, r3
 1050 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1051              	.L51:
 1052 00b2 C046     		.align	2
 1053              	.L50:
 1054 00b4 00000000 		.word	font
 1055              		.cfi_endproc
 1056              	.LFE44:
 1058              		.section	.text.ILI9341_Draw_Text,"ax",%progbits
 1059              		.align	1
 1060              		.global	ILI9341_Draw_Text
 1061              		.syntax unified
 1062              		.code	16
 1063              		.thumb_func
 1064              		.fpu softvfp
 1066              	ILI9341_Draw_Text:
 1067              	.LVL129:
 1068              	.LFB45:
 260:Core/Src/LED/ILI9341_GFX.c **** 
 261:Core/Src/LED/ILI9341_GFX.c **** /*Draws an array of characters (fonts imported from fonts.h) at X,Y location with specified font co
 262:Core/Src/LED/ILI9341_GFX.c **** /*See fonts.h implementation of font on what is required for changing to a different font when swit
 263:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Text(const char* Text, uint8_t X, uint8_t Y, uint16_t Colour, uint16_t Size, uint
 264:Core/Src/LED/ILI9341_GFX.c **** {
 1069              		.loc 1 264 1 is_stmt 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 8, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		.loc 1 264 1 is_stmt 0 view .LVU281
 1074 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1075              	.LCFI13:
 1076              		.cfi_def_cfa_offset 20
 1077              		.cfi_offset 4, -20
 1078              		.cfi_offset 5, -16
 1079              		.cfi_offset 6, -12
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 CE46     		mov	lr, r9
 1083 0004 4746     		mov	r7, r8
 1084 0006 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccfh6D8p.s 			page 26


 1085              	.LCFI14:
 1086              		.cfi_def_cfa_offset 28
 1087              		.cfi_offset 8, -28
 1088              		.cfi_offset 9, -24
 1089 0008 83B0     		sub	sp, sp, #12
 1090              	.LCFI15:
 1091              		.cfi_def_cfa_offset 40
 1092 000a 0400     		movs	r4, r0
 1093 000c 0E00     		movs	r6, r1
 1094 000e 1700     		movs	r7, r2
 1095 0010 9946     		mov	r9, r3
 1096 0012 0AAB     		add	r3, sp, #40
 1097              	.LVL130:
 1098              		.loc 1 264 1 view .LVU282
 1099 0014 1D88     		ldrh	r5, [r3]
 1100 0016 0BAB     		add	r3, sp, #44
 1101              	.LVL131:
 1102              		.loc 1 264 1 view .LVU283
 1103 0018 1B88     		ldrh	r3, [r3]
 1104              	.LVL132:
 1105              		.loc 1 264 1 view .LVU284
 1106 001a 9846     		mov	r8, r3
 265:Core/Src/LED/ILI9341_GFX.c ****     while (*Text) {
 1107              		.loc 1 265 5 is_stmt 1 view .LVU285
 1108              	.LVL133:
 1109              	.L53:
 1110              		.loc 1 265 11 view .LVU286
 1111              		.loc 1 265 12 is_stmt 0 view .LVU287
 1112 001c 2078     		ldrb	r0, [r4]
 1113              		.loc 1 265 11 view .LVU288
 1114 001e 0028     		cmp	r0, #0
 1115 0020 0ED0     		beq	.L55
 266:Core/Src/LED/ILI9341_GFX.c ****         ILI9341_Draw_Char(*Text++, X, Y, Colour, Size, Background_Colour);
 1116              		.loc 1 266 9 is_stmt 1 view .LVU289
 1117              		.loc 1 266 32 is_stmt 0 view .LVU290
 1118 0022 0134     		adds	r4, r4, #1
 1119              	.LVL134:
 1120              		.loc 1 266 9 view .LVU291
 1121 0024 4346     		mov	r3, r8
 1122 0026 0193     		str	r3, [sp, #4]
 1123 0028 0095     		str	r5, [sp]
 1124 002a 4B46     		mov	r3, r9
 1125 002c 3A00     		movs	r2, r7
 1126 002e 3100     		movs	r1, r6
 1127 0030 FFF7FEFF 		bl	ILI9341_Draw_Char
 1128              	.LVL135:
 267:Core/Src/LED/ILI9341_GFX.c ****         X += CHAR_WIDTH*Size;
 1129              		.loc 1 267 9 is_stmt 1 view .LVU292
 1130              		.loc 1 267 11 is_stmt 0 view .LVU293
 1131 0034 6900     		lsls	r1, r5, #1
 1132 0036 6918     		adds	r1, r5, r1
 1133 0038 4900     		lsls	r1, r1, #1
 1134 003a 7618     		adds	r6, r6, r1
 1135              	.LVL136:
 1136              		.loc 1 267 11 view .LVU294
 1137 003c F6B2     		uxtb	r6, r6
 1138              	.LVL137:
ARM GAS  /tmp/ccfh6D8p.s 			page 27


 1139              		.loc 1 267 11 view .LVU295
 1140 003e EDE7     		b	.L53
 1141              	.L55:
 268:Core/Src/LED/ILI9341_GFX.c ****     }
 269:Core/Src/LED/ILI9341_GFX.c **** }
 1142              		.loc 1 269 1 view .LVU296
 1143 0040 03B0     		add	sp, sp, #12
 1144              		@ sp needed
 1145              	.LVL138:
 1146              	.LVL139:
 1147              		.loc 1 269 1 view .LVU297
 1148 0042 0CBC     		pop	{r2, r3}
 1149 0044 9046     		mov	r8, r2
 1150 0046 9946     		mov	r9, r3
 1151 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 1152              		.cfi_endproc
 1153              	.LFE45:
 1155              		.section	.text.ILI9341_Draw_Image,"ax",%progbits
 1156              		.align	1
 1157              		.global	ILI9341_Draw_Image
 1158              		.syntax unified
 1159              		.code	16
 1160              		.thumb_func
 1161              		.fpu softvfp
 1163              	ILI9341_Draw_Image:
 1164              	.LVL140:
 1165              	.LFB46:
 270:Core/Src/LED/ILI9341_GFX.c **** 
 271:Core/Src/LED/ILI9341_GFX.c **** /*Draws a full screen picture from flash. Image converted from RGB .jpeg/other to C array using onl
 272:Core/Src/LED/ILI9341_GFX.c **** //USING CONVERTER: http://www.digole.com/tools/PicturetoC_Hex_converter.php
 273:Core/Src/LED/ILI9341_GFX.c **** //65K colour (2Bytes / Pixel)
 274:Core/Src/LED/ILI9341_GFX.c **** void ILI9341_Draw_Image(const char* Image_Array, uint8_t Orientation)
 275:Core/Src/LED/ILI9341_GFX.c **** {
 1166              		.loc 1 275 1 is_stmt 1 view -0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 504
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              		.loc 1 275 1 is_stmt 0 view .LVU299
 1171 0000 70B5     		push	{r4, r5, r6, lr}
 1172              	.LCFI16:
 1173              		.cfi_def_cfa_offset 16
 1174              		.cfi_offset 4, -16
 1175              		.cfi_offset 5, -12
 1176              		.cfi_offset 6, -8
 1177              		.cfi_offset 14, -4
 1178 0002 FEB0     		sub	sp, sp, #504
 1179              	.LCFI17:
 1180              		.cfi_def_cfa_offset 520
 1181 0004 0400     		movs	r4, r0
 276:Core/Src/LED/ILI9341_GFX.c **** 	if(Orientation == SCREEN_HORIZONTAL_1)
 1182              		.loc 1 276 2 is_stmt 1 view .LVU300
 1183              		.loc 1 276 4 is_stmt 0 view .LVU301
 1184 0006 0129     		cmp	r1, #1
 1185 0008 09D0     		beq	.L77
 277:Core/Src/LED/ILI9341_GFX.c **** 	{
 278:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_HORIZONTAL_1);
 279:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
ARM GAS  /tmp/ccfh6D8p.s 			page 28


 280:Core/Src/LED/ILI9341_GFX.c **** 			
 281:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_DC_Pin, GPIO_PIN_SET);	
 282:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 283:Core/Src/LED/ILI9341_GFX.c **** 		
 284:Core/Src/LED/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 285:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 286:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 287:Core/Src/LED/ILI9341_GFX.c **** 		{			
 288:Core/Src/LED/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 289:Core/Src/LED/ILI9341_GFX.c **** 				{
 290:Core/Src/LED/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 291:Core/Src/LED/ILI9341_GFX.c **** 				}						
 292:Core/Src/LED/ILI9341_GFX.c **** 				HAL_SPI_Transmit(HSPI_INSTANCE_LCD, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 293:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 294:Core/Src/LED/ILI9341_GFX.c **** 		}
 295:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_SET);
 296:Core/Src/LED/ILI9341_GFX.c **** 	}
 297:Core/Src/LED/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_HORIZONTAL_2)
 1186              		.loc 1 297 7 is_stmt 1 view .LVU302
 1187              		.loc 1 297 9 is_stmt 0 view .LVU303
 1188 000a 0329     		cmp	r1, #3
 1189 000c 3ED0     		beq	.L78
 298:Core/Src/LED/ILI9341_GFX.c **** 	{
 299:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_HORIZONTAL_2);
 300:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 301:Core/Src/LED/ILI9341_GFX.c **** 			
 302:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_DC_Pin, GPIO_PIN_SET);	
 303:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 304:Core/Src/LED/ILI9341_GFX.c **** 		
 305:Core/Src/LED/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 306:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 307:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 308:Core/Src/LED/ILI9341_GFX.c **** 		{			
 309:Core/Src/LED/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 310:Core/Src/LED/ILI9341_GFX.c **** 				{
 311:Core/Src/LED/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 312:Core/Src/LED/ILI9341_GFX.c **** 				}						
 313:Core/Src/LED/ILI9341_GFX.c **** 				HAL_SPI_Transmit(HSPI_INSTANCE_LCD, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 314:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 315:Core/Src/LED/ILI9341_GFX.c **** 		}
 316:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_SET);
 317:Core/Src/LED/ILI9341_GFX.c **** 	}
 318:Core/Src/LED/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_VERTICAL_2)
 1190              		.loc 1 318 7 is_stmt 1 view .LVU304
 1191              		.loc 1 318 9 is_stmt 0 view .LVU305
 1192 000e 0229     		cmp	r1, #2
 1193 0010 00D1     		bne	.LCB1210
 1194 0012 72E0     		b	.L79	@long jump
 1195              	.LCB1210:
 319:Core/Src/LED/ILI9341_GFX.c **** 	{
 320:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_VERTICAL_2);
 321:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 322:Core/Src/LED/ILI9341_GFX.c **** 			
 323:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_DC_Pin, GPIO_PIN_SET);	
 324:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 325:Core/Src/LED/ILI9341_GFX.c **** 		
 326:Core/Src/LED/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
ARM GAS  /tmp/ccfh6D8p.s 			page 29


 327:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 328:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 329:Core/Src/LED/ILI9341_GFX.c **** 		{			
 330:Core/Src/LED/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 331:Core/Src/LED/ILI9341_GFX.c **** 				{
 332:Core/Src/LED/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 333:Core/Src/LED/ILI9341_GFX.c **** 				}						
 334:Core/Src/LED/ILI9341_GFX.c **** 				HAL_SPI_Transmit(HSPI_INSTANCE_LCD, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 335:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 336:Core/Src/LED/ILI9341_GFX.c **** 		}
 337:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_SET);
 338:Core/Src/LED/ILI9341_GFX.c **** 	}
 339:Core/Src/LED/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_VERTICAL_1)
 1196              		.loc 1 339 7 is_stmt 1 view .LVU306
 1197              		.loc 1 339 9 is_stmt 0 view .LVU307
 1198 0014 0029     		cmp	r1, #0
 1199 0016 00D1     		bne	.LCB1213
 1200 0018 A6E0     		b	.L80	@long jump
 1201              	.LCB1213:
 1202              	.LVL141:
 1203              	.L56:
 340:Core/Src/LED/ILI9341_GFX.c **** 	{
 341:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_VERTICAL_1);
 342:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 343:Core/Src/LED/ILI9341_GFX.c **** 			
 344:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_DC_Pin, GPIO_PIN_SET);	
 345:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 346:Core/Src/LED/ILI9341_GFX.c **** 		
 347:Core/Src/LED/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 348:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 349:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 350:Core/Src/LED/ILI9341_GFX.c **** 		{			
 351:Core/Src/LED/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 352:Core/Src/LED/ILI9341_GFX.c **** 				{
 353:Core/Src/LED/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 354:Core/Src/LED/ILI9341_GFX.c **** 				}						
 355:Core/Src/LED/ILI9341_GFX.c **** 				HAL_SPI_Transmit(HSPI_INSTANCE_LCD, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 356:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 357:Core/Src/LED/ILI9341_GFX.c **** 		}
 358:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_SET);
 359:Core/Src/LED/ILI9341_GFX.c **** 	}
 360:Core/Src/LED/ILI9341_GFX.c **** }
 1204              		.loc 1 360 1 view .LVU308
 1205 001a 7EB0     		add	sp, sp, #504
 1206              		@ sp needed
 1207              	.LVL142:
 1208              		.loc 1 360 1 view .LVU309
 1209 001c 70BD     		pop	{r4, r5, r6, pc}
 1210              	.LVL143:
 1211              	.L77:
 1212              	.LBB6:
 278:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1213              		.loc 1 278 3 is_stmt 1 view .LVU310
 1214 001e 0120     		movs	r0, #1
 1215              	.LVL144:
 278:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1216              		.loc 1 278 3 is_stmt 0 view .LVU311
ARM GAS  /tmp/ccfh6D8p.s 			page 30


 1217 0020 FFF7FEFF 		bl	ILI9341_Set_Rotation
 1218              	.LVL145:
 279:Core/Src/LED/ILI9341_GFX.c **** 			
 1219              		.loc 1 279 3 is_stmt 1 view .LVU312
 1220 0024 A022     		movs	r2, #160
 1221 0026 F023     		movs	r3, #240
 1222 0028 5200     		lsls	r2, r2, #1
 1223 002a 0021     		movs	r1, #0
 1224 002c 0020     		movs	r0, #0
 1225 002e FFF7FEFF 		bl	ILI9341_Set_Address
 1226              	.LVL146:
 281:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 1227              		.loc 1 281 3 view .LVU313
 1228 0032 694D     		ldr	r5, .L88
 1229 0034 0122     		movs	r2, #1
 1230 0036 1021     		movs	r1, #16
 1231 0038 2800     		movs	r0, r5
 1232 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1233              	.LVL147:
 282:Core/Src/LED/ILI9341_GFX.c **** 		
 1234              		.loc 1 282 3 view .LVU314
 1235 003e 0022     		movs	r2, #0
 1236 0040 1021     		movs	r1, #16
 1237 0042 2800     		movs	r0, r5
 1238 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1239              	.LVL148:
 284:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1240              		.loc 1 284 3 view .LVU315
 285:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1241              		.loc 1 285 3 view .LVU316
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1242              		.loc 1 286 3 view .LVU317
 1243              	.LBB7:
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1244              		.loc 1 286 7 view .LVU318
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1245              		.loc 1 286 16 is_stmt 0 view .LVU319
 1246 0048 0026     		movs	r6, #0
 1247              	.LBE7:
 285:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1248              		.loc 1 285 12 view .LVU320
 1249 004a 0025     		movs	r5, #0
 1250              	.LBB10:
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1251              		.loc 1 286 3 view .LVU321
 1252 004c 12E0     		b	.L58
 1253              	.LVL149:
 1254              	.L59:
 1255              	.LBB8:
 290:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1256              		.loc 1 290 6 is_stmt 1 discriminator 3 view .LVU322
 290:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1257              		.loc 1 290 48 is_stmt 0 discriminator 3 view .LVU323
 1258 004e EA18     		adds	r2, r5, r3
 290:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1259              		.loc 1 290 40 discriminator 3 view .LVU324
 1260 0050 A15C     		ldrb	r1, [r4, r2]
ARM GAS  /tmp/ccfh6D8p.s 			page 31


 290:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1261              		.loc 1 290 27 discriminator 3 view .LVU325
 1262 0052 01AA     		add	r2, sp, #4
 1263 0054 D154     		strb	r1, [r2, r3]
 288:Core/Src/LED/ILI9341_GFX.c **** 				{
 1264              		.loc 1 288 44 is_stmt 1 discriminator 3 view .LVU326
 288:Core/Src/LED/ILI9341_GFX.c **** 				{
 1265              		.loc 1 288 45 is_stmt 0 discriminator 3 view .LVU327
 1266 0056 0133     		adds	r3, r3, #1
 1267              	.LVL150:
 1268              	.L60:
 288:Core/Src/LED/ILI9341_GFX.c **** 				{
 1269              		.loc 1 288 25 is_stmt 1 discriminator 1 view .LVU328
 288:Core/Src/LED/ILI9341_GFX.c **** 				{
 1270              		.loc 1 288 5 is_stmt 0 discriminator 1 view .LVU329
 1271 0058 FA22     		movs	r2, #250
 1272 005a 5200     		lsls	r2, r2, #1
 1273 005c 9342     		cmp	r3, r2
 1274 005e F6D3     		bcc	.L59
 1275              	.LBE8:
 292:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1276              		.loc 1 292 5 is_stmt 1 discriminator 2 view .LVU330
 1277 0060 FA3A     		subs	r2, r2, #250
 1278 0062 0A23     		movs	r3, #10
 1279              	.LVL151:
 292:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1280              		.loc 1 292 5 is_stmt 0 discriminator 2 view .LVU331
 1281 0064 5200     		lsls	r2, r2, #1
 1282 0066 01A9     		add	r1, sp, #4
 1283 0068 5C48     		ldr	r0, .L88+4
 1284 006a FFF7FEFF 		bl	HAL_SPI_Transmit
 1285              	.LVL152:
 293:Core/Src/LED/ILI9341_GFX.c **** 		}
 1286              		.loc 1 293 5 is_stmt 1 discriminator 2 view .LVU332
 293:Core/Src/LED/ILI9341_GFX.c **** 		}
 1287              		.loc 1 293 13 is_stmt 0 discriminator 2 view .LVU333
 1288 006e F535     		adds	r5, r5, #245
 1289              	.LVL153:
 293:Core/Src/LED/ILI9341_GFX.c **** 		}
 1290              		.loc 1 293 13 discriminator 2 view .LVU334
 1291 0070 FF35     		adds	r5, r5, #255
 1292              	.LVL154:
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1293              		.loc 1 286 88 is_stmt 1 discriminator 2 view .LVU335
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1294              		.loc 1 286 89 is_stmt 0 discriminator 2 view .LVU336
 1295 0072 0136     		adds	r6, r6, #1
 1296              	.LVL155:
 1297              	.L58:
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1298              		.loc 1 286 23 is_stmt 1 discriminator 1 view .LVU337
 286:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1299              		.loc 1 286 3 is_stmt 0 discriminator 1 view .LVU338
 1300 0074 9923     		movs	r3, #153
 1301 0076 5B00     		lsls	r3, r3, #1
 1302 0078 9E42     		cmp	r6, r3
 1303 007a 01D8     		bhi	.L81
ARM GAS  /tmp/ccfh6D8p.s 			page 32


 1304              	.LBB9:
 288:Core/Src/LED/ILI9341_GFX.c **** 				{
 1305              		.loc 1 288 18 view .LVU339
 1306 007c 0023     		movs	r3, #0
 1307 007e EBE7     		b	.L60
 1308              	.L81:
 1309              	.LBE9:
 1310              	.LBE10:
 295:Core/Src/LED/ILI9341_GFX.c **** 	}
 1311              		.loc 1 295 3 is_stmt 1 view .LVU340
 1312 0080 0122     		movs	r2, #1
 1313 0082 1021     		movs	r1, #16
 1314 0084 5448     		ldr	r0, .L88
 1315 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1316              	.LVL156:
 1317              	.LBE6:
 1318 008a C6E7     		b	.L56
 1319              	.LVL157:
 1320              	.L78:
 1321              	.LBB11:
 299:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1322              		.loc 1 299 3 view .LVU341
 1323 008c 0320     		movs	r0, #3
 1324              	.LVL158:
 299:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1325              		.loc 1 299 3 is_stmt 0 view .LVU342
 1326 008e FFF7FEFF 		bl	ILI9341_Set_Rotation
 1327              	.LVL159:
 300:Core/Src/LED/ILI9341_GFX.c **** 			
 1328              		.loc 1 300 3 is_stmt 1 view .LVU343
 1329 0092 A022     		movs	r2, #160
 1330 0094 F023     		movs	r3, #240
 1331 0096 5200     		lsls	r2, r2, #1
 1332 0098 0021     		movs	r1, #0
 1333 009a 0020     		movs	r0, #0
 1334 009c FFF7FEFF 		bl	ILI9341_Set_Address
 1335              	.LVL160:
 302:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 1336              		.loc 1 302 3 view .LVU344
 1337 00a0 4D4D     		ldr	r5, .L88
 1338 00a2 0122     		movs	r2, #1
 1339 00a4 1021     		movs	r1, #16
 1340 00a6 2800     		movs	r0, r5
 1341 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1342              	.LVL161:
 303:Core/Src/LED/ILI9341_GFX.c **** 		
 1343              		.loc 1 303 3 view .LVU345
 1344 00ac 0022     		movs	r2, #0
 1345 00ae 1021     		movs	r1, #16
 1346 00b0 2800     		movs	r0, r5
 1347 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1348              	.LVL162:
 305:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1349              		.loc 1 305 3 view .LVU346
 306:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1350              		.loc 1 306 3 view .LVU347
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
ARM GAS  /tmp/ccfh6D8p.s 			page 33


 1351              		.loc 1 307 3 view .LVU348
 1352              	.LBB12:
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1353              		.loc 1 307 7 view .LVU349
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1354              		.loc 1 307 16 is_stmt 0 view .LVU350
 1355 00b6 0026     		movs	r6, #0
 1356              	.LBE12:
 306:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1357              		.loc 1 306 12 view .LVU351
 1358 00b8 0025     		movs	r5, #0
 1359              	.LBB14:
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1360              		.loc 1 307 3 view .LVU352
 1361 00ba 09E0     		b	.L63
 1362              	.LVL163:
 1363              	.L83:
 313:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1364              		.loc 1 313 5 is_stmt 1 discriminator 2 view .LVU353
 1365 00bc FA3A     		subs	r2, r2, #250
 1366 00be 0A23     		movs	r3, #10
 1367              	.LVL164:
 313:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1368              		.loc 1 313 5 is_stmt 0 discriminator 2 view .LVU354
 1369 00c0 5200     		lsls	r2, r2, #1
 1370 00c2 01A9     		add	r1, sp, #4
 1371 00c4 4548     		ldr	r0, .L88+4
 1372 00c6 FFF7FEFF 		bl	HAL_SPI_Transmit
 1373              	.LVL165:
 314:Core/Src/LED/ILI9341_GFX.c **** 		}
 1374              		.loc 1 314 5 is_stmt 1 discriminator 2 view .LVU355
 314:Core/Src/LED/ILI9341_GFX.c **** 		}
 1375              		.loc 1 314 13 is_stmt 0 discriminator 2 view .LVU356
 1376 00ca F535     		adds	r5, r5, #245
 1377              	.LVL166:
 314:Core/Src/LED/ILI9341_GFX.c **** 		}
 1378              		.loc 1 314 13 discriminator 2 view .LVU357
 1379 00cc FF35     		adds	r5, r5, #255
 1380              	.LVL167:
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1381              		.loc 1 307 88 is_stmt 1 discriminator 2 view .LVU358
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1382              		.loc 1 307 89 is_stmt 0 discriminator 2 view .LVU359
 1383 00ce 0136     		adds	r6, r6, #1
 1384              	.LVL168:
 1385              	.L63:
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1386              		.loc 1 307 23 is_stmt 1 discriminator 1 view .LVU360
 307:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1387              		.loc 1 307 3 is_stmt 0 discriminator 1 view .LVU361
 1388 00d0 9923     		movs	r3, #153
 1389 00d2 5B00     		lsls	r3, r3, #1
 1390 00d4 9E42     		cmp	r6, r3
 1391 00d6 0AD8     		bhi	.L82
 1392              	.LBB13:
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1393              		.loc 1 309 18 view .LVU362
ARM GAS  /tmp/ccfh6D8p.s 			page 34


 1394 00d8 0023     		movs	r3, #0
 1395              	.L65:
 1396              	.LVL169:
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1397              		.loc 1 309 25 is_stmt 1 discriminator 1 view .LVU363
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1398              		.loc 1 309 5 is_stmt 0 discriminator 1 view .LVU364
 1399 00da FA22     		movs	r2, #250
 1400 00dc 5200     		lsls	r2, r2, #1
 1401 00de 9342     		cmp	r3, r2
 1402 00e0 ECD2     		bcs	.L83
 311:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1403              		.loc 1 311 6 is_stmt 1 discriminator 3 view .LVU365
 311:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1404              		.loc 1 311 48 is_stmt 0 discriminator 3 view .LVU366
 1405 00e2 EA18     		adds	r2, r5, r3
 311:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1406              		.loc 1 311 40 discriminator 3 view .LVU367
 1407 00e4 A15C     		ldrb	r1, [r4, r2]
 311:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1408              		.loc 1 311 27 discriminator 3 view .LVU368
 1409 00e6 01AA     		add	r2, sp, #4
 1410 00e8 D154     		strb	r1, [r2, r3]
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1411              		.loc 1 309 44 is_stmt 1 discriminator 3 view .LVU369
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1412              		.loc 1 309 45 is_stmt 0 discriminator 3 view .LVU370
 1413 00ea 0133     		adds	r3, r3, #1
 1414              	.LVL170:
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1415              		.loc 1 309 45 discriminator 3 view .LVU371
 1416 00ec F5E7     		b	.L65
 1417              	.LVL171:
 1418              	.L82:
 309:Core/Src/LED/ILI9341_GFX.c **** 				{
 1419              		.loc 1 309 45 discriminator 3 view .LVU372
 1420              	.LBE13:
 1421              	.LBE14:
 316:Core/Src/LED/ILI9341_GFX.c **** 	}
 1422              		.loc 1 316 3 is_stmt 1 view .LVU373
 1423 00ee 0122     		movs	r2, #1
 1424 00f0 1021     		movs	r1, #16
 1425 00f2 3948     		ldr	r0, .L88
 1426 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1427              	.LVL172:
 1428              	.LBE11:
 1429 00f8 8FE7     		b	.L56
 1430              	.LVL173:
 1431              	.L79:
 1432              	.LBB15:
 320:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1433              		.loc 1 320 3 view .LVU374
 1434 00fa 0220     		movs	r0, #2
 1435              	.LVL174:
 320:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1436              		.loc 1 320 3 is_stmt 0 view .LVU375
 1437 00fc FFF7FEFF 		bl	ILI9341_Set_Rotation
ARM GAS  /tmp/ccfh6D8p.s 			page 35


 1438              	.LVL175:
 321:Core/Src/LED/ILI9341_GFX.c **** 			
 1439              		.loc 1 321 3 is_stmt 1 view .LVU376
 1440 0100 A023     		movs	r3, #160
 1441 0102 5B00     		lsls	r3, r3, #1
 1442 0104 F022     		movs	r2, #240
 1443 0106 0021     		movs	r1, #0
 1444 0108 0020     		movs	r0, #0
 1445 010a FFF7FEFF 		bl	ILI9341_Set_Address
 1446              	.LVL176:
 323:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 1447              		.loc 1 323 3 view .LVU377
 1448 010e 324D     		ldr	r5, .L88
 1449 0110 0122     		movs	r2, #1
 1450 0112 1021     		movs	r1, #16
 1451 0114 2800     		movs	r0, r5
 1452 0116 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1453              	.LVL177:
 324:Core/Src/LED/ILI9341_GFX.c **** 		
 1454              		.loc 1 324 3 view .LVU378
 1455 011a 0022     		movs	r2, #0
 1456 011c 1021     		movs	r1, #16
 1457 011e 2800     		movs	r0, r5
 1458 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1459              	.LVL178:
 326:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1460              		.loc 1 326 3 view .LVU379
 327:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1461              		.loc 1 327 3 view .LVU380
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1462              		.loc 1 328 3 view .LVU381
 1463              	.LBB16:
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1464              		.loc 1 328 7 view .LVU382
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1465              		.loc 1 328 16 is_stmt 0 view .LVU383
 1466 0124 0026     		movs	r6, #0
 1467              	.LBE16:
 327:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1468              		.loc 1 327 12 view .LVU384
 1469 0126 0025     		movs	r5, #0
 1470              	.LBB18:
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1471              		.loc 1 328 3 view .LVU385
 1472 0128 09E0     		b	.L67
 1473              	.LVL179:
 1474              	.L85:
 334:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1475              		.loc 1 334 5 is_stmt 1 discriminator 2 view .LVU386
 1476 012a FA3A     		subs	r2, r2, #250
 1477 012c 0A23     		movs	r3, #10
 1478              	.LVL180:
 334:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1479              		.loc 1 334 5 is_stmt 0 discriminator 2 view .LVU387
 1480 012e 5200     		lsls	r2, r2, #1
 1481 0130 01A9     		add	r1, sp, #4
 1482 0132 2A48     		ldr	r0, .L88+4
ARM GAS  /tmp/ccfh6D8p.s 			page 36


 1483 0134 FFF7FEFF 		bl	HAL_SPI_Transmit
 1484              	.LVL181:
 335:Core/Src/LED/ILI9341_GFX.c **** 		}
 1485              		.loc 1 335 5 is_stmt 1 discriminator 2 view .LVU388
 335:Core/Src/LED/ILI9341_GFX.c **** 		}
 1486              		.loc 1 335 13 is_stmt 0 discriminator 2 view .LVU389
 1487 0138 F535     		adds	r5, r5, #245
 1488              	.LVL182:
 335:Core/Src/LED/ILI9341_GFX.c **** 		}
 1489              		.loc 1 335 13 discriminator 2 view .LVU390
 1490 013a FF35     		adds	r5, r5, #255
 1491              	.LVL183:
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1492              		.loc 1 328 88 is_stmt 1 discriminator 2 view .LVU391
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1493              		.loc 1 328 89 is_stmt 0 discriminator 2 view .LVU392
 1494 013c 0136     		adds	r6, r6, #1
 1495              	.LVL184:
 1496              	.L67:
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1497              		.loc 1 328 23 is_stmt 1 discriminator 1 view .LVU393
 328:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1498              		.loc 1 328 3 is_stmt 0 discriminator 1 view .LVU394
 1499 013e 9923     		movs	r3, #153
 1500 0140 5B00     		lsls	r3, r3, #1
 1501 0142 9E42     		cmp	r6, r3
 1502 0144 0AD8     		bhi	.L84
 1503              	.LBB17:
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1504              		.loc 1 330 18 view .LVU395
 1505 0146 0023     		movs	r3, #0
 1506              	.L69:
 1507              	.LVL185:
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1508              		.loc 1 330 25 is_stmt 1 discriminator 1 view .LVU396
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1509              		.loc 1 330 5 is_stmt 0 discriminator 1 view .LVU397
 1510 0148 FA22     		movs	r2, #250
 1511 014a 5200     		lsls	r2, r2, #1
 1512 014c 9342     		cmp	r3, r2
 1513 014e ECD2     		bcs	.L85
 332:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1514              		.loc 1 332 6 is_stmt 1 discriminator 3 view .LVU398
 332:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1515              		.loc 1 332 48 is_stmt 0 discriminator 3 view .LVU399
 1516 0150 EA18     		adds	r2, r5, r3
 332:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1517              		.loc 1 332 40 discriminator 3 view .LVU400
 1518 0152 A15C     		ldrb	r1, [r4, r2]
 332:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1519              		.loc 1 332 27 discriminator 3 view .LVU401
 1520 0154 01AA     		add	r2, sp, #4
 1521 0156 D154     		strb	r1, [r2, r3]
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1522              		.loc 1 330 44 is_stmt 1 discriminator 3 view .LVU402
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1523              		.loc 1 330 45 is_stmt 0 discriminator 3 view .LVU403
ARM GAS  /tmp/ccfh6D8p.s 			page 37


 1524 0158 0133     		adds	r3, r3, #1
 1525              	.LVL186:
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1526              		.loc 1 330 45 discriminator 3 view .LVU404
 1527 015a F5E7     		b	.L69
 1528              	.LVL187:
 1529              	.L84:
 330:Core/Src/LED/ILI9341_GFX.c **** 				{
 1530              		.loc 1 330 45 discriminator 3 view .LVU405
 1531              	.LBE17:
 1532              	.LBE18:
 337:Core/Src/LED/ILI9341_GFX.c **** 	}
 1533              		.loc 1 337 3 is_stmt 1 view .LVU406
 1534 015c 0122     		movs	r2, #1
 1535 015e 1021     		movs	r1, #16
 1536 0160 1D48     		ldr	r0, .L88
 1537 0162 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1538              	.LVL188:
 1539              	.LBE15:
 1540 0166 58E7     		b	.L56
 1541              	.LVL189:
 1542              	.L80:
 1543              	.LBB19:
 341:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1544              		.loc 1 341 3 view .LVU407
 1545 0168 0020     		movs	r0, #0
 1546              	.LVL190:
 341:Core/Src/LED/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1547              		.loc 1 341 3 is_stmt 0 view .LVU408
 1548 016a FFF7FEFF 		bl	ILI9341_Set_Rotation
 1549              	.LVL191:
 342:Core/Src/LED/ILI9341_GFX.c **** 			
 1550              		.loc 1 342 3 is_stmt 1 view .LVU409
 1551 016e A023     		movs	r3, #160
 1552 0170 5B00     		lsls	r3, r3, #1
 1553 0172 F022     		movs	r2, #240
 1554 0174 0021     		movs	r1, #0
 1555 0176 0020     		movs	r0, #0
 1556 0178 FFF7FEFF 		bl	ILI9341_Set_Address
 1557              	.LVL192:
 344:Core/Src/LED/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOD, LCD_CS_Pin, GPIO_PIN_RESET);
 1558              		.loc 1 344 3 view .LVU410
 1559 017c 164D     		ldr	r5, .L88
 1560 017e 0122     		movs	r2, #1
 1561 0180 1021     		movs	r1, #16
 1562 0182 2800     		movs	r0, r5
 1563 0184 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1564              	.LVL193:
 345:Core/Src/LED/ILI9341_GFX.c **** 		
 1565              		.loc 1 345 3 view .LVU411
 1566 0188 0022     		movs	r2, #0
 1567 018a 1021     		movs	r1, #16
 1568 018c 2800     		movs	r0, r5
 1569 018e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1570              	.LVL194:
 347:Core/Src/LED/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1571              		.loc 1 347 3 view .LVU412
ARM GAS  /tmp/ccfh6D8p.s 			page 38


 348:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1572              		.loc 1 348 3 view .LVU413
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1573              		.loc 1 349 3 view .LVU414
 1574              	.LBB20:
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1575              		.loc 1 349 7 view .LVU415
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1576              		.loc 1 349 16 is_stmt 0 view .LVU416
 1577 0192 0026     		movs	r6, #0
 1578              	.LBE20:
 348:Core/Src/LED/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1579              		.loc 1 348 12 view .LVU417
 1580 0194 0025     		movs	r5, #0
 1581              	.LBB22:
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1582              		.loc 1 349 3 view .LVU418
 1583 0196 09E0     		b	.L70
 1584              	.LVL195:
 1585              	.L87:
 355:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1586              		.loc 1 355 5 is_stmt 1 discriminator 2 view .LVU419
 1587 0198 FA3A     		subs	r2, r2, #250
 1588 019a 0A23     		movs	r3, #10
 1589              	.LVL196:
 355:Core/Src/LED/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1590              		.loc 1 355 5 is_stmt 0 discriminator 2 view .LVU420
 1591 019c 5200     		lsls	r2, r2, #1
 1592 019e 01A9     		add	r1, sp, #4
 1593 01a0 0E48     		ldr	r0, .L88+4
 1594 01a2 FFF7FEFF 		bl	HAL_SPI_Transmit
 1595              	.LVL197:
 356:Core/Src/LED/ILI9341_GFX.c **** 		}
 1596              		.loc 1 356 5 is_stmt 1 discriminator 2 view .LVU421
 356:Core/Src/LED/ILI9341_GFX.c **** 		}
 1597              		.loc 1 356 13 is_stmt 0 discriminator 2 view .LVU422
 1598 01a6 F535     		adds	r5, r5, #245
 1599              	.LVL198:
 356:Core/Src/LED/ILI9341_GFX.c **** 		}
 1600              		.loc 1 356 13 discriminator 2 view .LVU423
 1601 01a8 FF35     		adds	r5, r5, #255
 1602              	.LVL199:
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1603              		.loc 1 349 88 is_stmt 1 discriminator 2 view .LVU424
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1604              		.loc 1 349 89 is_stmt 0 discriminator 2 view .LVU425
 1605 01aa 0136     		adds	r6, r6, #1
 1606              	.LVL200:
 1607              	.L70:
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1608              		.loc 1 349 23 is_stmt 1 discriminator 1 view .LVU426
 349:Core/Src/LED/ILI9341_GFX.c **** 		{			
 1609              		.loc 1 349 3 is_stmt 0 discriminator 1 view .LVU427
 1610 01ac 9923     		movs	r3, #153
 1611 01ae 5B00     		lsls	r3, r3, #1
 1612 01b0 9E42     		cmp	r6, r3
 1613 01b2 0AD8     		bhi	.L86
ARM GAS  /tmp/ccfh6D8p.s 			page 39


 1614              	.LBB21:
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1615              		.loc 1 351 18 view .LVU428
 1616 01b4 0023     		movs	r3, #0
 1617              	.L72:
 1618              	.LVL201:
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1619              		.loc 1 351 25 is_stmt 1 discriminator 1 view .LVU429
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1620              		.loc 1 351 5 is_stmt 0 discriminator 1 view .LVU430
 1621 01b6 FA22     		movs	r2, #250
 1622 01b8 5200     		lsls	r2, r2, #1
 1623 01ba 9342     		cmp	r3, r2
 1624 01bc ECD2     		bcs	.L87
 353:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1625              		.loc 1 353 6 is_stmt 1 discriminator 3 view .LVU431
 353:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1626              		.loc 1 353 48 is_stmt 0 discriminator 3 view .LVU432
 1627 01be EA18     		adds	r2, r5, r3
 353:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1628              		.loc 1 353 40 discriminator 3 view .LVU433
 1629 01c0 A15C     		ldrb	r1, [r4, r2]
 353:Core/Src/LED/ILI9341_GFX.c **** 				}						
 1630              		.loc 1 353 27 discriminator 3 view .LVU434
 1631 01c2 01AA     		add	r2, sp, #4
 1632 01c4 D154     		strb	r1, [r2, r3]
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1633              		.loc 1 351 44 is_stmt 1 discriminator 3 view .LVU435
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1634              		.loc 1 351 45 is_stmt 0 discriminator 3 view .LVU436
 1635 01c6 0133     		adds	r3, r3, #1
 1636              	.LVL202:
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1637              		.loc 1 351 45 discriminator 3 view .LVU437
 1638 01c8 F5E7     		b	.L72
 1639              	.LVL203:
 1640              	.L86:
 351:Core/Src/LED/ILI9341_GFX.c **** 				{
 1641              		.loc 1 351 45 discriminator 3 view .LVU438
 1642              	.LBE21:
 1643              	.LBE22:
 358:Core/Src/LED/ILI9341_GFX.c **** 	}
 1644              		.loc 1 358 3 is_stmt 1 view .LVU439
 1645 01ca 0122     		movs	r2, #1
 1646 01cc 1021     		movs	r1, #16
 1647 01ce 0248     		ldr	r0, .L88
 1648 01d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1649              	.LVL204:
 1650              	.LBE19:
 1651              		.loc 1 360 1 is_stmt 0 view .LVU440
 1652 01d4 21E7     		b	.L56
 1653              	.L89:
 1654 01d6 C046     		.align	2
 1655              	.L88:
 1656 01d8 000C0048 		.word	1207962624
 1657 01dc 00000000 		.word	hspi1
 1658              		.cfi_endproc
ARM GAS  /tmp/ccfh6D8p.s 			page 40


 1659              	.LFE46:
 1661              		.section	.rodata.font,"a"
 1662              		.align	2
 1665              	font:
 1666 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1666      0000
 1667 0006 5C000000 		.ascii	"\\\000\000\000\000\000"
 1667      0000
 1668 000c 06000600 		.ascii	"\006\000\006\000\000\000"
 1668      0000
 1669 0012 287C287C 		.ascii	"(|(|(\000"
 1669      2800
 1670 0018 5C54FE54 		.ascii	"\\T\376Tt\000"
 1670      7400
 1671 001e 44201008 		.ascii	"D \020\010D\000"
 1671      4400
 1672 0024 28545420 		.ascii	"(TT P\000"
 1672      5000
 1673 002a 06000000 		.ascii	"\006\000\000\000\000\000"
 1673      0000
 1674 0030 38440000 		.ascii	"8D\000\000\000\000"
 1674      0000
 1675 0036 44380000 		.ascii	"D8\000\000\000\000"
 1675      0000
 1676 003c 02070200 		.ascii	"\002\007\002\000\000\000"
 1676      0000
 1677 0042 10107C10 		.ascii	"\020\020|\020\020\000"
 1677      1000
 1678 0048 C0000000 		.ascii	"\300\000\000\000\000\000"
 1678      0000
 1679 004e 10101010 		.ascii	"\020\020\020\020\020\000"
 1679      1000
 1680 0054 40000000 		.ascii	"@\000\000\000\000\000"
 1680      0000
 1681 005a 60100C00 		.ascii	"`\020\014\000\000\000"
 1681      0000
 1682 0060 7C64544C 		.ascii	"|dTL|\000"
 1682      7C00
 1683 0066 487C4000 		.ascii	"H|@\000\000\000"
 1683      0000
 1684 006c 64545454 		.ascii	"dTTTH\000"
 1684      4800
 1685 0072 44545454 		.ascii	"DTTTl\000"
 1685      6C00
 1686 0078 3C207020 		.ascii	"< p  \000"
 1686      2000
 1687 007e 5C545454 		.ascii	"\\TTT$\000"
 1687      2400
 1688 0084 7C545454 		.ascii	"|TTTt\000"
 1688      7400
 1689 008a 04046414 		.ascii	"\004\004d\024\014\000"
 1689      0C00
 1690 0090 7C545454 		.ascii	"|TTT|\000"
 1690      7C00
 1691 0096 5C545454 		.ascii	"\\TTT|\000"
 1691      7C00
 1692 009c 44000000 		.ascii	"D\000\000\000\000\000"
ARM GAS  /tmp/ccfh6D8p.s 			page 41


 1692      0000
 1693 00a2 C4000000 		.ascii	"\304\000\000\000\000\000"
 1693      0000
 1694 00a8 10284400 		.ascii	"\020(D\000\000\000"
 1694      0000
 1695 00ae 28282828 		.ascii	"(((((\000"
 1695      2800
 1696 00b4 44281000 		.ascii	"D(\020\000\000\000"
 1696      0000
 1697 00ba 08045408 		.ascii	"\010\004T\010\000\000"
 1697      0000
 1698 00c0 7C445454 		.ascii	"|DTT\\\000"
 1698      5C00
 1699 00c6 7C242424 		.ascii	"|$$$|\000"
 1699      7C00
 1700 00cc 7C545454 		.ascii	"|TTTl\000"
 1700      6C00
 1701 00d2 7C444444 		.ascii	"|DDDD\000"
 1701      4400
 1702 00d8 7C444444 		.ascii	"|DDD8\000"
 1702      3800
 1703 00de 7C545454 		.ascii	"|TTTD\000"
 1703      4400
 1704 00e4 7C141414 		.ascii	"|\024\024\024\004\000"
 1704      0400
 1705 00ea 7C444454 		.ascii	"|DDTt\000"
 1705      7400
 1706 00f0 7C101010 		.ascii	"|\020\020\020|\000"
 1706      7C00
 1707 00f6 44447C44 		.ascii	"DD|DD\000"
 1707      4400
 1708 00fc 60404044 		.ascii	"`@@D|\000"
 1708      7C00
 1709 0102 7C101028 		.ascii	"|\020\020(D\000"
 1709      4400
 1710 0108 7C404040 		.ascii	"|@@@@\000"
 1710      4000
 1711 010e 7C081008 		.ascii	"|\010\020\010|\000"
 1711      7C00
 1712 0114 7C081020 		.ascii	"|\010\020 |\000"
 1712      7C00
 1713 011a 38444444 		.ascii	"8DDD8\000"
 1713      3800
 1714 0120 7C141414 		.ascii	"|\024\024\024\010\000"
 1714      0800
 1715 0126 3C246424 		.ascii	"<$d$<\000"
 1715      3C00
 1716 012c 7C141414 		.ascii	"|\024\024\024h\000"
 1716      6800
 1717 0132 5C545454 		.ascii	"\\TTTt\000"
 1717      7400
 1718 0138 04047C04 		.ascii	"\004\004|\004\004\000"
 1718      0400
 1719 013e 7C404040 		.ascii	"|@@@|\000"
 1719      7C00
 1720 0144 0C304030 		.ascii	"\0140@0\014\000"
 1720      0C00
ARM GAS  /tmp/ccfh6D8p.s 			page 42


 1721 014a 3C403040 		.ascii	"<@0@<\000"
 1721      3C00
 1722 0150 44281028 		.ascii	"D(\020(D\000"
 1722      4400
 1723 0156 0C106010 		.ascii	"\014\020`\020\014\000"
 1723      0C00
 1724 015c 4464544C 		.ascii	"DdTLD\000"
 1724      4400
 1725 0162 7C440000 		.ascii	"|D\000\000\000\000"
 1725      0000
 1726 0168 0C106000 		.ascii	"\014\020`\000\000\000"
 1726      0000
 1727 016e 447C0000 		.ascii	"D|\000\000\000\000"
 1727      0000
 1728 0174 00010001 		.ascii	"\000\001\000\001\000\000"
 1728      0000
 1729 017a 40404040 		.ascii	"@@@@@@"
 1729      4040
 1730 0180 00010000 		.ascii	"\000\001\000\000\000\000"
 1730      0000
 1731 0186 7C242424 		.ascii	"|$$$|\000"
 1731      7C00
 1732 018c 7C545454 		.ascii	"|TTTl\000"
 1732      6C00
 1733 0192 7C444444 		.ascii	"|DDDD\000"
 1733      4400
 1734 0198 7C444444 		.ascii	"|DDD8\000"
 1734      3800
 1735 019e 7C545454 		.ascii	"|TTTD\000"
 1735      4400
 1736 01a4 7C141414 		.ascii	"|\024\024\024\004\000"
 1736      0400
 1737 01aa 7C444454 		.ascii	"|DDTt\000"
 1737      7400
 1738 01b0 7C101010 		.ascii	"|\020\020\020|\000"
 1738      7C00
 1739 01b6 44447C44 		.ascii	"DD|DD\000"
 1739      4400
 1740 01bc 60404044 		.ascii	"`@@D|\000"
 1740      7C00
 1741 01c2 7C101028 		.ascii	"|\020\020(D\000"
 1741      4400
 1742 01c8 7C404040 		.ascii	"|@@@@\000"
 1742      4000
 1743 01ce 7C081008 		.ascii	"|\010\020\010|\000"
 1743      7C00
 1744 01d4 7C081020 		.ascii	"|\010\020 |\000"
 1744      7C00
 1745 01da 38444444 		.ascii	"8DDD8\000"
 1745      3800
 1746 01e0 7C141414 		.ascii	"|\024\024\024\010\000"
 1746      0800
 1747 01e6 3C246424 		.ascii	"<$d$<\000"
 1747      3C00
 1748 01ec 7C141414 		.ascii	"|\024\024\024h\000"
 1748      6800
 1749 01f2 5C545454 		.ascii	"\\TTTt\000"
ARM GAS  /tmp/ccfh6D8p.s 			page 43


 1749      7400
 1750 01f8 04047C04 		.ascii	"\004\004|\004\004\000"
 1750      0400
 1751 01fe 7C404040 		.ascii	"|@@@|\000"
 1751      7C00
 1752 0204 0C304030 		.ascii	"\0140@0\014\000"
 1752      0C00
 1753 020a 3C403040 		.ascii	"<@0@<\000"
 1753      3C00
 1754 0210 44281028 		.ascii	"D(\020(D\000"
 1754      4400
 1755 0216 0C106010 		.ascii	"\014\020`\020\014\000"
 1755      0C00
 1756 021c 4464544C 		.ascii	"DdTLD\000"
 1756      4400
 1757 0222 107C4400 		.ascii	"\020|D\000\000\000"
 1757      0000
 1758 0228 6C000000 		.ascii	"l\000\000\000\000\000"
 1758      0000
 1759 022e 447C1000 		.ascii	"D|\020\000\000\000"
 1759      0000
 1760 0234 02010201 		.ascii	"\002\001\002\001\000\000"
 1760      0000
 1761 023a 00000000 		.ascii	"\000\000\000\000\000\000"
 1761      0000
 1762              		.text
 1763              	.Letext0:
 1764              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1765              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1766              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1767              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1768              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1769              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1770              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 1771              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1772              		.file 10 "Core/Inc/spi.h"
 1773              		.file 11 "Core/Inc/LED/5x5_font.h"
 1774              		.file 12 "Core/Inc/LED/ILI9341_STM32_Driver.h"
ARM GAS  /tmp/ccfh6D8p.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ILI9341_GFX.c
     /tmp/ccfh6D8p.s:16     .text.ILI9341_Draw_Hollow_Circle:0000000000000000 $t
     /tmp/ccfh6D8p.s:24     .text.ILI9341_Draw_Hollow_Circle:0000000000000000 ILI9341_Draw_Hollow_Circle
     /tmp/ccfh6D8p.s:263    .text.ILI9341_Draw_Filled_Circle:0000000000000000 $t
     /tmp/ccfh6D8p.s:270    .text.ILI9341_Draw_Filled_Circle:0000000000000000 ILI9341_Draw_Filled_Circle
     /tmp/ccfh6D8p.s:502    .text.ILI9341_Draw_Hollow_Rectangle_Coord:0000000000000000 $t
     /tmp/ccfh6D8p.s:509    .text.ILI9341_Draw_Hollow_Rectangle_Coord:0000000000000000 ILI9341_Draw_Hollow_Rectangle_Coord
     /tmp/ccfh6D8p.s:707    .text.ILI9341_Draw_Filled_Rectangle_Coord:0000000000000000 $t
     /tmp/ccfh6D8p.s:714    .text.ILI9341_Draw_Filled_Rectangle_Coord:0000000000000000 ILI9341_Draw_Filled_Rectangle_Coord
     /tmp/ccfh6D8p.s:848    .text.ILI9341_Draw_Char:0000000000000000 $t
     /tmp/ccfh6D8p.s:855    .text.ILI9341_Draw_Char:0000000000000000 ILI9341_Draw_Char
     /tmp/ccfh6D8p.s:1054   .text.ILI9341_Draw_Char:00000000000000b4 $d
     /tmp/ccfh6D8p.s:1665   .rodata.font:0000000000000000 font
     /tmp/ccfh6D8p.s:1059   .text.ILI9341_Draw_Text:0000000000000000 $t
     /tmp/ccfh6D8p.s:1066   .text.ILI9341_Draw_Text:0000000000000000 ILI9341_Draw_Text
     /tmp/ccfh6D8p.s:1156   .text.ILI9341_Draw_Image:0000000000000000 $t
     /tmp/ccfh6D8p.s:1163   .text.ILI9341_Draw_Image:0000000000000000 ILI9341_Draw_Image
     /tmp/ccfh6D8p.s:1656   .text.ILI9341_Draw_Image:00000000000001d8 $d
     /tmp/ccfh6D8p.s:1662   .rodata.font:0000000000000000 $d

UNDEFINED SYMBOLS
ILI9341_Draw_Pixel
__aeabi_i2f
__aeabi_fcmplt
ILI9341_Draw_Horizontal_Line
ILI9341_Draw_Vertical_Line
ILI9341_Draw_Rectangle
ILI9341_Set_Rotation
ILI9341_Set_Address
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
